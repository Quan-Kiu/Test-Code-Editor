{"version":3,"file":"worker-DOfipQSs.js","sources":["../node_modules/vscode/vscode/src/vs/nls.messages.js","../node_modules/vscode/vscode/src/vs/nls.js","../node_modules/vscode/vscode/src/vs/base/common/platform.js","../node_modules/vscode/vscode/src/vs/base/common/process.js","../node_modules/vscode/vscode/src/vs/base/common/path.js","../node_modules/vscode/vscode/src/vs/base/common/uri.js","../node_modules/vscode/vscode/src/vs/base/common/arraysFind.js","../node_modules/vscode/vscode/src/vs/base/common/arrays.js","../node_modules/vscode/vscode/src/vs/base/common/collections.js","../node_modules/vscode/vscode/src/vs/base/common/map.js","../node_modules/vscode/vscode/src/vs/base/common/functional.js","../node_modules/vscode/vscode/src/vs/base/common/iterator.js","../node_modules/vscode/vscode/src/vs/base/common/lifecycle.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/common/TMScopeRegistry.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/common/TMGrammarFactory.js","../node_modules/vscode/vscode/src/vs/base/common/errors.js","../node_modules/vscode/vscode/src/vs/base/common/linkedList.js","../node_modules/vscode/vscode/src/vs/base/common/stopwatch.js","../node_modules/vscode/vscode/src/vs/base/common/event.js","../node_modules/vscode/vscode/src/vs/base/common/cancellation.js","../node_modules/vscode/vscode/src/vs/base/common/cache.js","../node_modules/vscode/vscode/src/vs/base/common/lazy.js","../node_modules/vscode/vscode/src/vs/base/common/strings.js","../node_modules/vscode/vscode/src/vs/base/common/types.js","../node_modules/vscode/vscode/src/vs/base/common/extpath.js","../node_modules/vscode/vscode/src/vs/base/common/network.js","../node_modules/vscode/vscode/src/vs/base/common/resources.js","../node_modules/vscode/vscode/src/vs/base/common/async.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/debugName.js","../node_modules/vscode/vscode/src/vs/base/common/equals.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/logging.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/base.js","../node_modules/vscode/vscode/src/vs/base/common/assert.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/autorun.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/derived.js","../node_modules/vscode/vscode/src/vs/base/common/observableInternal/utils.js","../node_modules/vscode/vscode/src/vs/editor/common/core/offsetRange.js","../node_modules/vscode/vscode/src/vs/editor/common/core/position.js","../node_modules/vscode/vscode/src/vs/editor/common/core/range.js","../node_modules/vscode/vscode/src/vs/editor/common/core/lineRange.js","../node_modules/vscode/vscode/src/vs/base/common/uint.js","../node_modules/vscode/vscode/src/vs/editor/common/model/prefixSumComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/model/mirrorTextModel.js","../node_modules/vscode/vscode/src/vs/editor/common/core/eolCounter.js","../node_modules/vscode/vscode/src/vs/base/common/codiconsUtil.js","../node_modules/vscode/vscode/src/vs/base/common/codiconsLibrary.js","../node_modules/vscode/vscode/src/vs/base/common/codicons.js","../node_modules/vscode/vscode/src/vs/editor/common/tokenizationRegistry.js","../node_modules/vscode/vscode/src/vs/editor/common/languages.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/nullTokenize.js","../node_modules/vscode/vscode/src/vs/editor/common/model/fixedArray.js","../node_modules/vscode/vscode/src/vs/base/common/buffer.js","../node_modules/vscode/vscode/src/vs/editor/common/encodedTokenAttributes.js","../node_modules/vscode/vscode/src/vs/editor/common/tokens/tokenArray.js","../node_modules/vscode/vscode/src/vs/editor/common/tokens/lineTokens.js","../node_modules/vscode/vscode/src/vs/editor/common/tokens/contiguousTokensEditing.js","../node_modules/vscode/vscode/src/vs/editor/common/tokens/contiguousMultilineTokens.js","../node_modules/vscode/vscode/src/vs/editor/common/tokens/contiguousMultilineTokensBuilder.js","../node_modules/vscode/vscode/src/vs/editor/common/model/textModelTokens.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateWorkerTokenizer.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateWorkerHost.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker.js","../node_modules/vscode/vscode/src/vs/base/common/worker/simpleWorker.js","../node_modules/vscode/vscode/src/vs/base/common/worker/simpleWorkerBootstrap.js","../node_modules/@codingame/monaco-vscode-textmate-service-override/vscode/src/vs/workbench/services/textMate/browser/backgroundTokenization/worker/textMateTokenizationWorker.worker.esm.js"],"sourcesContent":["function getNLSMessages() {\n    return globalThis._VSCODE_NLS_MESSAGES;\n}\nfunction getNLSLanguage() {\n    return globalThis._VSCODE_NLS_LANGUAGE;\n}\nexport { getNLSLanguage, getNLSMessages };\n","import { getNLSLanguage, getNLSMessages } from './nls.messages.js';\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nlet initialized = false;\nfunction isInitialized() {\n    return initialized;\n}\nfunction localize(data , message , ...args) {\n    if (typeof data === 'number') {\n        return _format(lookupMessage(data, message), args);\n    }\n    return _format(message, args);\n}\nfunction lookupMessage(index, fallback) {\n    initialized = true;\n    const message = getNLSMessages()?.[index];\n    if (typeof message !== 'string') {\n        if (typeof fallback === 'string') {\n            return fallback;\n        }\n        throw ( new Error(`!!! NLS MISSING: ${index} !!!`));\n    }\n    return message;\n}\nfunction localize2(data , originalMessage, ...args) {\n    let message;\n    if (typeof data === 'number') {\n        message = lookupMessage(data, originalMessage);\n    }\n    else {\n        message = originalMessage;\n    }\n    const value = _format(message, args);\n    return {\n        value,\n        original: originalMessage === message ? value : _format(originalMessage, args)\n    };\n}\nexport { getNLSLanguage, getNLSMessages, isInitialized, localize, localize2 };\n","import '../../nls.js';\nimport { getNLSLanguage } from '../../nls.messages.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            _locale = nlsConfig.userLocale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    _language = getNLSLanguage() || LANGUAGE_DEFAULT;\n    _locale = navigator.language.toLowerCase();\n    _platformLocale = _locale;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case 0 : return 'Web';\n        case 1 : return 'Mac';\n        case 2 : return 'Linux';\n        case 3 : return 'Windows';\n    }\n}\nlet _platform = 0 ;\nif (_isMacintosh) {\n    _platform = 1 ;\n}\nelse if (_isWindows) {\n    _platform = 3 ;\n}\nelse if (_isLinux) {\n    _platform = 2 ;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isLinuxSnap = _isLinuxSnap;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n( (function(Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {})));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nconst OS = (_isMacintosh || _isIOS ? 2  : ((_isWindows ? 1  : 3) ));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( new Uint8Array(2));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( new Uint16Array(test.buffer));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLinuxSnap, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n","import { isWindows, isMacintosh } from './platform.js';\nlet safeProcess;\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\nelse {\n    safeProcess = {\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined;  },\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\nconst cwd = safeProcess.cwd;\nconst env = safeProcess.env;\nconst platform = safeProcess.platform;\nconst arch = safeProcess.arch;\nexport { arch, cwd, env, platform };\n","import { cwd, env, platform } from './process.js';\nconst CHAR_UPPERCASE_A = 65;\nconst CHAR_LOWERCASE_A = 97;\nconst CHAR_UPPERCASE_Z = 90;\nconst CHAR_LOWERCASE_Z = 122;\nconst CHAR_DOT = 46;\nconst CHAR_FORWARD_SLASH = 47;\nconst CHAR_BACKWARD_SLASH = 92;\nconst CHAR_COLON = 58;\nconst CHAR_QUESTION_MARK = 63;\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw ( new ErrorInvalidArgType(name, 'Object', pathObject));\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw ( new ErrorInvalidArgType(name, 'string', value));\n    }\n}\nconst platformIsWin32 = (platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction formatExt(ext) {\n    return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nconst win32 = {\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, `paths[${i}]`);\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = cwd();\n            }\n            else {\n                path = env[`=${resolvedDevice}`] || cwd();\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        last = j;\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPathSeparator(code) ? path : '.';\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            if (len <= 2) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd$1 = cwd().replace(regexp, '/');\n            return cwd$1.slice(cwd$1.indexOf('/'));\n        };\n    }\n    return () => cwd();\n})();\nconst posix = {\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, `paths[${i}]`);\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nconst normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nconst isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nconst join = (platformIsWin32 ? win32.join : posix.join);\nconst resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nconst relative = (platformIsWin32 ? win32.relative : posix.relative);\nconst dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nconst basename = (platformIsWin32 ? win32.basename : posix.basename);\nconst extname = (platformIsWin32 ? win32.extname : posix.extname);\nconst parse = (platformIsWin32 ? win32.parse : posix.parse);\nconst sep = (platformIsWin32 ? win32.sep : posix.sep);\nconst delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\nexport { basename, delimiter, dirname, extname, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n","import { win32, posix } from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    if (!ret.scheme && _strict) {\n        throw ( new Error(\n            `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n        ));\n    }\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw ( new Error('[UriError]: Scheme contains illegal characters.'));\n    }\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n                ));\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n                ));\n            }\n        }\n    }\n}\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\nfunction _referenceResolution(scheme, path) {\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nclass URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    get fsPath() {\n        return uriToFsPath(this, false);\n    }\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return ( new Uri(scheme, authority, path, query, fragment));\n    }\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return ( new Uri(_empty, _empty, _empty, _empty, _empty));\n        }\n        return ( new Uri(\n            match[2] || _empty,\n            percentDecode(match[4] || _empty),\n            percentDecode(match[5] || _empty),\n            percentDecode(match[7] || _empty),\n            percentDecode(match[9] || _empty),\n            _strict\n        ));\n    }\n    static file(path) {\n        let authority = _empty;\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return ( new Uri('file', authority, path, _empty, _empty));\n    }\n    static from(components, strict) {\n        const result = ( new Uri(\n            components.scheme,\n            components.authority,\n            components.path,\n            components.query,\n            components.fragment,\n            strict\n        ));\n        return result;\n    }\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw ( new Error(`[UriError]: cannot call joinPath on URI without path`));\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = ( new Uri(data));\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n    [Symbol.for('debug.description')]() {\n        return `URI(${( this.toString())})`;\n    }\n}\nfunction isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1\n        };\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\nconst encodeTable = {\n    [58 ]: '%3A',\n    [47 ]: '%2F',\n    [63 ]: '%3F',\n    [35 ]: '%23',\n    [91 ]: '%5B',\n    [93 ]: '%5D',\n    [64 ]: '%40',\n    [33 ]: '%21',\n    [36 ]: '%24',\n    [38 ]: '%26',\n    [39 ]: '%27',\n    [40 ]: '%28',\n    [41 ]: '%29',\n    [42 ]: '%2A',\n    [43 ]: '%2B',\n    [44 ]: '%2C',\n    [59 ]: '%3B',\n    [61 ]: '%3D',\n    [32 ]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        if (((code >= 97  && code <= 122) )\n            || ((code >= 65  && code <= 90) )\n            || ((code >= 48  && code <= 57) )\n            || code === 45\n            || code === 46\n            || code === 95\n            || code === 126\n            || ((isPath && code === 47) )\n            || ((isAuthority && code === 91) )\n            || ((isAuthority && code === 93) )\n            || ((isAuthority && code === 58) )) {\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35  || code === 63 ) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47\n        && ((uri.path.charCodeAt(1) >= 65  && uri.path.charCodeAt(1) <= 90  || uri.path.charCodeAt(1) >= 97  && uri.path.charCodeAt(1) <= 122) )\n        && uri.path.charCodeAt(2) === 58 ) {\n        if (!keepDriveLetterCasing) {\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        if (path.length >= 3 && path.charCodeAt(0) === 47  && path.charCodeAt(2) === 58 ) {\n            const code = path.charCodeAt(1);\n            if (code >= 65  && code <= 90 ) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`;\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 ) {\n            const code = path.charCodeAt(0);\n            if (code >= 65  && code <= 90 ) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`;\n            }\n        }\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\nexport { URI, isUriComponents, uriToFsPath };\n","function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw ( new Error(\n                            'MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.'\n                        ));\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };\n","import { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nfunction tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw ( new Error('Invalid tail call'));\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\nfunction binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\nfunction binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nfunction quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw ( new TypeError('invalid index'));\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nfunction groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\nfunction* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nfunction forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nfunction forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\nfunction sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nfunction delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\nfunction top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\nfunction coalesce(array) {\n    return array.filter((e) => !!e);\n}\nfunction coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\nfunction move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\nfunction distinct(array, keyFn = value => value) {\n    const seen = ( new Set());\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nfunction uniqueFilter(keyFn) {\n    const seen = ( new Set());\n    return element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nfunction commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\nfunction range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nfunction index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\nfunction insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\nfunction remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\nfunction arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\nfunction shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549;\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nfunction pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\nfunction pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nfunction mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        ( items.map(fn)) :\n        fn(items);\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nfunction insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\nfunction splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nvar CompareResult;\n( (function(CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {})));\nfunction compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nfunction tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\nconst numberComparator = (a, b) => a - b;\nconst booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nfunction reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nclass ArrayQueue {\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    takeWhile(predicate) {\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    takeFromEndWhile(predicate) {\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\nclass CallbackIterable {\n    static { this.empty = ( new CallbackIterable(_callback => { })); }\n    constructor(\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return ( new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true)));\n    }\n    map(mapFn) {\n        return ( new CallbackIterable(cb => this.iterate(item => cb(mapFn(item)))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nclass Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(( arr.keys())).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return ( new Permutation(sortIndices));\n    }\n    apply(arr) {\n        return ( arr.map((_, index) => arr[this._indexMap[index]]));\n    }\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return ( new Permutation(inverseIndexMap));\n    }\n}\nasync function findAsync(array, predicate) {\n    const results = await Promise.all(( array.map(\n        async (element, index) => ({ element, ok: await predicate(element, index) })\n    )));\n    return results.find(r => r.ok)?.element;\n}\nexport { ArrayQueue, CallbackIterable, CompareResult, Permutation, arrayInsert, asArray, binarySearch, binarySearch2, booleanComparator, coalesce, coalesceInPlace, commonPrefixLength, compareBy, delta, distinct, equals, findAsync, forEachAdjacent, forEachWithNeighbors, groupAdjacentBy, groupBy, index, insert, insertInto, isFalsyOrEmpty, isNonEmptyArray, mapArrayOrNot, move, numberComparator, pushMany, pushToEnd, pushToStart, quickSelect, range, remove, removeFastWithoutKeepingOrder, reverseOrder, shuffle, sortedDiff, splice, tail, tail2, tieBreakComparators, top, uniqueFilter };\n","var _a;\nfunction groupBy(data, groupFn) {\n    const result = Object.create(null);\n    for (const element of data) {\n        const key = groupFn(element);\n        let target = result[key];\n        if (!target) {\n            target = result[key] = [];\n        }\n        target.push(element);\n    }\n    return result;\n}\nfunction diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!( after.has(element))) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!( before.has(element))) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\nfunction diffMaps(before, after) {\n    const removed = [];\n    const added = [];\n    for (const [index, value] of before) {\n        if (!( after.has(index))) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!( before.has(index))) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\nfunction intersection(setA, setB) {\n    const result = ( new Set());\n    for (const elem of setB) {\n        if (( setA.has(elem))) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\nclass SetWithKey {\n    static { _a = Symbol.toStringTag; }\n    constructor(values, toKey) {\n        this.toKey = toKey;\n        this._map = ( new Map());\n        this[_a] = 'SetWithKey';\n        for (const value of values) {\n            this.add(value);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        const key = this.toKey(value);\n        this._map.set(key, value);\n        return this;\n    }\n    delete(value) {\n        return this._map.delete(this.toKey(value));\n    }\n    has(value) {\n        return ( this._map.has(this.toKey(value)));\n    }\n    *entries() {\n        for (const entry of ( this._map.values())) {\n            yield [entry, entry];\n        }\n    }\n    keys() {\n        return ( this.values());\n    }\n    *values() {\n        for (const entry of ( this._map.values())) {\n            yield entry;\n        }\n    }\n    clear() {\n        this._map.clear();\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n    }\n    [Symbol.iterator]() {\n        return ( this.values());\n    }\n}\nexport { SetWithKey, diffMaps, diffSets, groupBy, intersection };\n","var _a, _b, _c;\nfunction getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nclass ResourceMap {\n    static { this.defaultToKey = (resource) => ( resource.toString()); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = ( new Map(arg.map));\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = ( new Map());\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = ( new Map());\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), ( new ResourceMapEntry(resource, value)));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return ( this.map.has(this.toKey(resource)));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of ( this.map.values())) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of ( this.map.values())) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of ( this.map.values())) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nclass ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = ( new ResourceMap(entriesOrKey));\n        }\n        else {\n            this._map = ( new ResourceMap(toKey));\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return ( this._map.has(value));\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return ( this._map.keys());\n    }\n    values() {\n        return ( this._map.keys());\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return ( this.keys());\n    }\n}\nclass LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = ( new Map());\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return ( this._map.has(key));\n    }\n    get(key, touch = 0 ) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 ) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 ) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 ) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 :\n                    this.addItemLast(item);\n                    break;\n                case 1 :\n                    this.addItemFirst(item);\n                    break;\n                case 2 :\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw ( new Error(`LinkedMap got modified during iteration.`));\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            if (!item.next) {\n                throw ( new Error('Invalid list'));\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            if (!item.previous) {\n                throw ( new Error('Invalid list'));\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw ( new Error('Invalid list'));\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        if (((touch !== 1  && touch !== 2) )) {\n            return;\n        }\n        if (touch === 1 ) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._tail) {\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 ) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._head) {\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = 2 ) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 );\n    }\n    set(key, value) {\n        super.set(key, value, 2 );\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nclass LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\nclass MRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimNew(newSize);\n    }\n    set(key, value) {\n        if (this._limit <= this.size && !( this.has(key))) {\n            this.trim(Math.round(this._limit * this._ratio) - 1);\n        }\n        super.set(key, value);\n        return this;\n    }\n}\nclass CounterSet {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return ( this.map.has(value));\n    }\n}\nclass BidirectionalMap {\n    constructor(entries) {\n        this._m1 = ( new Map());\n        this._m2 = ( new Map());\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    forEach(callbackfn, thisArg) {\n        this._m1.forEach((value, key) => {\n            callbackfn.call(thisArg, value, key, this);\n        });\n    }\n    keys() {\n        return ( this._m1.keys());\n    }\n    values() {\n        return ( this._m1.values());\n    }\n}\nclass SetMap {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = ( new Set());\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return ( new Set());\n        }\n        return values;\n    }\n}\nfunction mapsStrictEqualIgnoreOrder(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, value] of a) {\n        if (!( b.has(key)) || b.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [key] of b) {\n        if (!( a.has(key))) {\n            return false;\n        }\n    }\n    return true;\n}\nclass TwoKeyMap {\n    constructor() {\n        this._data = {};\n    }\n    set(first, second, value) {\n        if (!this._data[first]) {\n            this._data[first] = {};\n        }\n        this._data[first][second] = value;\n    }\n    get(first, second) {\n        return this._data[first]?.[second];\n    }\n    clear() {\n        this._data = {};\n    }\n    *values() {\n        for (const first in this._data) {\n            for (const second in this._data[first]) {\n                const value = this._data[first][second];\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\nclass ThreeKeyMap {\n    constructor() {\n        this._data = {};\n    }\n    set(first, second, third, value) {\n        if (!this._data[first]) {\n            this._data[first] = ( new TwoKeyMap());\n        }\n        this._data[first].set(second, third, value);\n    }\n    get(first, second, third) {\n        return this._data[first]?.get(second, third);\n    }\n    clear() {\n        this._data = {};\n    }\n    *values() {\n        for (const first in this._data) {\n            for (const value of ( this._data[first].values())) {\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\nexport { BidirectionalMap, CounterSet, LRUCache, LinkedMap, MRUCache, ResourceMap, ResourceSet, SetMap, ThreeKeyMap, TwoKeyMap, getOrSet, mapsStrictEqualIgnoreOrder };\n","function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\nexport { createSingleCallFunction };\n","var Iterable;\n( (function(Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = ( Object.freeze([]));\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {})));\nexport { Iterable };\n","import { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\nlet disposableTracker = null;\nclass DisposableTracker {\n    constructor() {\n        this.livingDisposables = ( new Map());\n    }\n    static { this.idx = 0; }\n    getDisposableData(d) {\n        let val = this.livingDisposables.get(d);\n        if (!val) {\n            val = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n            this.livingDisposables.set(d, val);\n        }\n        return val;\n    }\n    trackDisposable(d) {\n        const data = this.getDisposableData(d);\n        if (!data.source) {\n            data.source =\n                ( new Error()).stack;\n        }\n    }\n    setParent(child, parent) {\n        const data = this.getDisposableData(child);\n        data.parent = parent;\n    }\n    markAsDisposed(x) {\n        this.livingDisposables.delete(x);\n    }\n    markAsSingleton(disposable) {\n        this.getDisposableData(disposable).isSingleton = true;\n    }\n    getRootParent(data, cache) {\n        const cacheValue = cache.get(data);\n        if (cacheValue) {\n            return cacheValue;\n        }\n        const result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n        cache.set(data, result);\n        return result;\n    }\n    getTrackedDisposables() {\n        const rootParentCache = ( new Map());\n        const leaking = [...this.livingDisposables.entries()]\n            .filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n            .flatMap(([k]) => k);\n        return leaking;\n    }\n    computeLeakingDisposables(maxReported = 10, preComputedLeaks) {\n        let uncoveredLeakingObjs;\n        if (preComputedLeaks) {\n            uncoveredLeakingObjs = preComputedLeaks;\n        }\n        else {\n            const rootParentCache = ( new Map());\n            const leakingObjects = [...( this.livingDisposables.values())]\n                .filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n            if (leakingObjects.length === 0) {\n                return;\n            }\n            const leakingObjsSet = ( new Set(( leakingObjects.map(o => o.value))));\n            uncoveredLeakingObjs = leakingObjects.filter(l => {\n                return !(l.parent && ( leakingObjsSet.has(l.parent)));\n            });\n            if (uncoveredLeakingObjs.length === 0) {\n                throw ( new Error('There are cyclic diposable chains!'));\n            }\n        }\n        if (!uncoveredLeakingObjs) {\n            return undefined;\n        }\n        function getStackTracePath(leaking) {\n            function removePrefix(array, linesToRemove) {\n                while (array.length > 0 && ( linesToRemove.some(\n                    regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp)\n                ))) {\n                    array.shift();\n                }\n            }\n            const lines = ( leaking.source.split('\\n').map(p => p.trim().replace('at ', ''))).filter(l => l !== '');\n            removePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n            return lines.reverse();\n        }\n        const stackTraceStarts = ( new SetMap());\n        for (const leaking of uncoveredLeakingObjs) {\n            const stackTracePath = getStackTracePath(leaking);\n            for (let i = 0; i <= stackTracePath.length; i++) {\n                stackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n            }\n        }\n        uncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n        let message = '';\n        let i = 0;\n        for (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n            i++;\n            const stackTracePath = getStackTracePath(leaking);\n            const stackTraceFormattedLines = [];\n            for (let i = 0; i < stackTracePath.length; i++) {\n                let line = stackTracePath[i];\n                const starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n                line = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n                const prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n                const continuations = groupBy(( [...prevStarts].map(d => getStackTracePath(d)[i])), v => v);\n                delete continuations[stackTracePath[i]];\n                for (const [cont, set] of Object.entries(continuations)) {\n                    stackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n                }\n                stackTraceFormattedLines.unshift(line);\n            }\n            message += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n        }\n        if (uncoveredLeakingObjs.length > maxReported) {\n            message += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n        }\n        return { leaks: uncoveredLeakingObjs, details: message };\n    }\n}\nfunction setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nfunction trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\nfunction markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\nfunction isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nfunction dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw ( new AggregateError(errors, 'Encountered errors while disposing of store'));\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nfunction disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\nfunction combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nfunction toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nclass DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = ( new Set());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(( new Error(\n                    'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'\n                )).stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    delete(o) {\n        if (!o) {\n            return;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot dispose a disposable on itself!'));\n        }\n        this._toDispose.delete(o);\n        o.dispose();\n    }\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (( this._toDispose.has(o))) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nclass Disposable {\n    static { this.None = ( Object.freeze({ dispose() { } })); }\n    constructor() {\n        this._store = ( new DisposableStore());\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        return this._store.add(o);\n    }\n}\nclass MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nclass MandatoryMutableDisposable {\n    constructor(initialValue) {\n        this._disposable = ( new MutableDisposable());\n        this._isDisposed = false;\n        this._disposable.value = initialValue;\n    }\n    get value() {\n        return this._disposable.value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._disposable.value) {\n            return;\n        }\n        this._disposable.value = value;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._disposable.dispose();\n    }\n}\nclass RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nclass ReferenceCollection {\n    constructor() {\n        this.references = ( new Map());\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = createSingleCallFunction(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\nclass AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    async acquire(key, ...args) {\n        const ref = this.referenceCollection.acquire(key, ...args);\n        try {\n            const object = await ref.object;\n            return {\n                object,\n                dispose: () => ref.dispose()\n            };\n        }\n        catch (error) {\n            ref.dispose();\n            throw error;\n        }\n    }\n}\nclass ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nclass DisposableMap {\n    constructor() {\n        this._store = ( new Map());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(( this._store.values()));\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return ( this._store.has(key));\n    }\n    get size() {\n        return this._store.size;\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(( new Error(\n                'Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!'\n            )).stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    deleteAndLeak(key) {\n        const value = this._store.get(key);\n        this._store.delete(key);\n        return value;\n    }\n    keys() {\n        return ( this._store.keys());\n    }\n    values() {\n        return ( this._store.values());\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\nexport { AsyncReferenceCollection, Disposable, DisposableMap, DisposableStore, DisposableTracker, ImmortalReference, MandatoryMutableDisposable, MutableDisposable, RefCountedDisposable, ReferenceCollection, combinedDisposable, dispose, disposeIfDisposable, isDisposable, markAsDisposed, markAsSingleton, setDisposableTracker, toDisposable, trackDisposable };\n","class TMScopeRegistry {\n    constructor() {\n        this._scopeNameToLanguageRegistration = Object.create(null);\n    }\n    reset() {\n        this._scopeNameToLanguageRegistration = Object.create(null);\n    }\n    register(def) {\n        this._scopeNameToLanguageRegistration[def.scopeName] = def;\n    }\n    getGrammarDefinition(scopeName) {\n        return this._scopeNameToLanguageRegistration[scopeName] || null;\n    }\n}\n\nexport { TMScopeRegistry };\n","import { Disposable } from 'vscode/vscode/vs/base/common/lifecycle';\nimport { TMScopeRegistry } from './TMScopeRegistry.js';\n\nconst missingTMGrammarErrorMessage = 'No TM Grammar registered for this language.';\nclass TMGrammarFactory extends Disposable {\n    constructor(host, grammarDefinitions, vscodeTextmate, onigLib) {\n        super();\n        this._host = host;\n        this._initialState = vscodeTextmate.INITIAL;\n        this._scopeRegistry = ( new TMScopeRegistry());\n        this._injections = {};\n        this._injectedEmbeddedLanguages = {};\n        this._languageToScope = ( new Map());\n        this._grammarRegistry = this._register(new vscodeTextmate.Registry({\n            onigLib: onigLib,\n            loadGrammar: async (scopeName) => {\n                const grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n                if (!grammarDefinition) {\n                    this._host.logTrace(`No grammar found for scope ${scopeName}`);\n                    return null;\n                }\n                const location = grammarDefinition.location;\n                try {\n                    const content = await this._host.readFile(location);\n                    return vscodeTextmate.parseRawGrammar(content, location.path);\n                }\n                catch (e) {\n                    this._host.logError(`Unable to load and parse grammar for scope ${scopeName} from ${location}`, e);\n                    return null;\n                }\n            },\n            getInjections: (scopeName) => {\n                const scopeParts = scopeName.split('.');\n                let injections = [];\n                for (let i = 1; i <= scopeParts.length; i++) {\n                    const subScopeName = scopeParts.slice(0, i).join('.');\n                    injections = [...injections, ...(this._injections[subScopeName] || [])];\n                }\n                return injections;\n            }\n        }));\n        for (const validGrammar of grammarDefinitions) {\n            this._scopeRegistry.register(validGrammar);\n            if (validGrammar.injectTo) {\n                for (const injectScope of validGrammar.injectTo) {\n                    let injections = this._injections[injectScope];\n                    if (!injections) {\n                        this._injections[injectScope] = injections = [];\n                    }\n                    injections.push(validGrammar.scopeName);\n                }\n                if (validGrammar.embeddedLanguages) {\n                    for (const injectScope of validGrammar.injectTo) {\n                        let injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[injectScope];\n                        if (!injectedEmbeddedLanguages) {\n                            this._injectedEmbeddedLanguages[injectScope] = injectedEmbeddedLanguages = [];\n                        }\n                        injectedEmbeddedLanguages.push(validGrammar.embeddedLanguages);\n                    }\n                }\n            }\n            if (validGrammar.language) {\n                this._languageToScope.set(validGrammar.language, validGrammar.scopeName);\n            }\n        }\n    }\n    has(languageId) {\n        return ( this._languageToScope.has(languageId));\n    }\n    setTheme(theme, colorMap) {\n        this._grammarRegistry.setTheme(theme, colorMap);\n    }\n    getColorMap() {\n        return this._grammarRegistry.getColorMap();\n    }\n    async createGrammar(languageId, encodedLanguageId) {\n        const scopeName = this._languageToScope.get(languageId);\n        if (typeof scopeName !== 'string') {\n            throw ( new Error(missingTMGrammarErrorMessage));\n        }\n        const grammarDefinition = this._scopeRegistry.getGrammarDefinition(scopeName);\n        if (!grammarDefinition) {\n            throw ( new Error(missingTMGrammarErrorMessage));\n        }\n        const embeddedLanguages = grammarDefinition.embeddedLanguages;\n        if (this._injectedEmbeddedLanguages[scopeName]) {\n            const injectedEmbeddedLanguages = this._injectedEmbeddedLanguages[scopeName];\n            for (const injected of injectedEmbeddedLanguages) {\n                for (const scope of ( Object.keys(injected))) {\n                    embeddedLanguages[scope] = injected[scope];\n                }\n            }\n        }\n        const containsEmbeddedLanguages = (( Object.keys(embeddedLanguages)).length > 0);\n        let grammar;\n        try {\n            grammar = await this._grammarRegistry.loadGrammarWithConfiguration(scopeName, encodedLanguageId, {\n                embeddedLanguages,\n                tokenTypes: grammarDefinition.tokenTypes,\n                balancedBracketSelectors: grammarDefinition.balancedBracketSelectors,\n                unbalancedBracketSelectors: grammarDefinition.unbalancedBracketSelectors,\n            });\n        }\n        catch (err) {\n            if (err.message && err.message.startsWith('No grammar provided for')) {\n                throw ( new Error(missingTMGrammarErrorMessage));\n            }\n            throw err;\n        }\n        return {\n            languageId: languageId,\n            grammar: grammar,\n            initialState: this._initialState,\n            containsEmbeddedLanguages: containsEmbeddedLanguages,\n            sourceExtensionId: grammarDefinition.sourceExtensionId,\n        };\n    }\n}\n\nexport { TMGrammarFactory, missingTMGrammarErrorMessage };\n","class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw ( new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack));\n                    }\n                    throw ( new Error(e.message + '\\n\\n' + e.stack));\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onBugIndicatingError(e) {\n    errorHandler.onUnexpectedError(e);\n    return undefined;\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    return error;\n}\nfunction transformErrorFromSerialization(data) {\n    let error;\n    if (data.noTelemetry) {\n        error = ( new ErrorNoTelemetry());\n    }\n    else {\n        error = ( new Error());\n        error.name = data.name;\n    }\n    error.message = data.message;\n    error.stack = data.stack;\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onBugIndicatingError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization, transformErrorFromSerialization };\n","class Node {\n    static { this.Undefined = ( new Node(undefined)); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nclass LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = ( new Node(element));\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\nexport { LinkedList };\n","const hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nclass StopWatch {\n    static create(highResolution) {\n        return ( new StopWatch(highResolution));\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\nexport { StopWatch };\n","import { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Disposable, DisposableStore, toDisposable, DisposableMap, combinedDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nvar Event;\n( (function(Event) {\n    Event.None = () => Disposable.None;\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    function onceIf(event, condition) {\n        return Event.once(Event.filter(event, condition));\n    }\n    Event.onceIf = onceIf;\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, ( map(i))), null, disposables), disposable);\n    }\n    Event.map = map;\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...( events.map(event => event(e => listener.call(thisArgs, e)))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return ( map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable));\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = ( new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        }));\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(( new ChainableSynthesis()));\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return ( new Promise(resolve => once(event)(resolve)));\n    }\n    Event.toPromise = toPromise;\n    function fromPromise(promise) {\n        const result = ( new Emitter());\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function forward(from, to) {\n        return from(e => to.fire(e));\n    }\n    Event.forward = forward;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                    this._observable.reportChanges();\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            this.emitter = ( new Emitter(options));\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n        }\n        handleChange(_observable, _change) {\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    function fromObservable(obs, store) {\n        const observer = ( new EmitterObserver(obs, store));\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {})));\nclass EventProfiling {\n    static { this.all = ( new Set()); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = ( new StopWatch());\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nfunction setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = ( (LeakageMonitor._idPool++).toString(16)).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = ( new Map());\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = ( new ListenerLeakError(message, topStack));\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = ( new Error());\n        return ( new Stacktrace(err.stack ?? ''));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\nclass ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nclass Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? ( new LeakageMonitor(\n            options?.onListenerError ?? onUnexpectedError,\n            this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold\n        )) :\n            undefined;\n        this._perfMon = this._options?._profName ? ( new EventProfiling(this._options._profName)) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = ( new ListenerRefusalError(\n                    `${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`,\n                    tuple[0]\n                ));\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = ( new UniqueContainer(callback));\n            let removeMonitor;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= ( new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return;\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw ( new Error('Attempted to dispose unknown listener'));\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop();\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) ;\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nconst createEventDeliveryQueue = () => ( new EventDeliveryQueuePrivate());\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        this.i = -1;\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end;\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nclass AsyncEmitter extends Emitter {\n    async fireAsync(data, token, promiseJoin) {\n        if (!this._listeners) {\n            return;\n        }\n        if (!this._asyncDeliveryQueue) {\n            this._asyncDeliveryQueue = ( new LinkedList());\n        }\n        forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n        while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n            const [listener, data] = this._asyncDeliveryQueue.shift();\n            const thenables = [];\n            const event = {\n                ...data,\n                token,\n                waitUntil: (p) => {\n                    if (Object.isFrozen(thenables)) {\n                        throw ( new Error('waitUntil can NOT be called asynchronous'));\n                    }\n                    if (promiseJoin) {\n                        p = promiseJoin(p, listener);\n                    }\n                    thenables.push(p);\n                }\n            };\n            try {\n                listener(event);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                continue;\n            }\n            await Promise.allSettled(thenables).then(values => {\n                for (const value of values) {\n                    if (value.status === 'rejected') {\n                        onUnexpectedError(value.reason);\n                    }\n                }\n            });\n        }\n    }\n}\nclass PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = ( new LinkedList());\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nclass DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\nclass MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\nclass EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = ( new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        }));\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\nclass DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = ( new DisposableStore());\n        const multiplexer = this._store.add(( new EventMultiplexer()));\n        const itemListeners = this._store.add(( new DisposableMap()));\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        for (const instance of items) {\n            addItem(instance);\n        }\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\nclass EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                if (!reduce) {\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                const reduceData = data;\n                if (!reduceData) {\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    data.buffers.push(() => {\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: ( new Array()) };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\nclass Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = ( new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        }));\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\nclass ValueWithChangeEvent {\n    static const(value) {\n        return ( new ConstValueWithChangeEvent(value));\n    }\n    constructor(_value) {\n        this._value = _value;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onDidChange.fire(undefined);\n        }\n    }\n}\nclass ConstValueWithChangeEvent {\n    constructor(value) {\n        this.value = value;\n        this.onDidChange = Event.None;\n    }\n}\nfunction trackSetChanges(getData, onDidChangeData, handleItem) {\n    const map = ( new DisposableMap());\n    let oldData = ( new Set(getData()));\n    for (const d of oldData) {\n        map.set(d, handleItem(d));\n    }\n    const store = ( new DisposableStore());\n    store.add(onDidChangeData(() => {\n        const newData = getData();\n        const diff = diffSets(oldData, newData);\n        for (const r of diff.removed) {\n            map.deleteAndDispose(r);\n        }\n        for (const a of diff.added) {\n            map.set(a, handleItem(a));\n        }\n        oldData = ( new Set(newData));\n    }));\n    store.add(map);\n    return store;\n}\nexport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, EventProfiling, ListenerLeakError, ListenerRefusalError, MicrotaskEmitter, PauseableEmitter, Relay, ValueWithChangeEvent, createEventDeliveryQueue, setGlobalLeakWarningThreshold, trackSetChanges };\n","import { Event, Emitter } from './event.js';\nconst shortcutEvent = ( Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n}));\nvar CancellationToken;\n( (function(CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = ( Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    }));\n    CancellationToken.Cancelled = ( Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    }));\n})(CancellationToken || (CancellationToken = {})));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = ( new Emitter());\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nclass CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            this._token = ( new MutableToken());\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.dispose();\n        }\n    }\n}\nfunction cancelOnDispose(store) {\n    const source = ( new CancellationTokenSource());\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\nexport { CancellationToken, CancellationTokenSource, cancelOnDispose };\n","import { CancellationTokenSource } from './cancellation.js';\nclass Cache {\n    constructor(task) {\n        this.task = task;\n        this.result = null;\n    }\n    get() {\n        if (this.result) {\n            return this.result;\n        }\n        const cts = ( new CancellationTokenSource());\n        const promise = this.task(cts.token);\n        this.result = {\n            promise,\n            dispose: () => {\n                this.result = null;\n                cts.cancel();\n                cts.dispose();\n            }\n        };\n        return this.result;\n    }\n}\nfunction identity(t) {\n    return t;\n}\nclass LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\nclass CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = ( new Map());\n        this._map2 = ( new Map());\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (( this._map2.has(key))) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\nexport { Cache, CachedFunction, LRUCachedFunction, identity };\n","class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    get hasValue() { return this._didRun; }\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get rawValue() { return this._value; }\n}\nexport { Lazy };\n","import { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\nfunction format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\nfunction format2(template, values) {\n    if (( Object.keys(values)).length === 0) {\n        return template;\n    }\n    return template.replace(_format2Regexp, (match, group) => (values[group] ?? match));\n}\nfunction htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\nfunction count(value, substr) {\n    let result = 0;\n    let index = value.indexOf(substr);\n    while (index !== -1) {\n        result++;\n        index = value.indexOf(substr, index + substr.length);\n    }\n    return result;\n}\nfunction truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\nfunction truncateMiddle(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    const prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n    const suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n    return `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\nfunction trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nfunction createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw ( new Error('Cannot create regex from empty string'));\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return ( new RegExp(searchString, modifiers));\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nfunction splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\nfunction firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\nfunction lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getIndentationLength(str) {\n    const idx = firstNonWhitespaceIndex(str);\n    if (idx === -1) {\n        return str.length;\n    }\n    return idx;\n}\nfunction replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw ( new Error('match.index should be defined'));\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nfunction compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction isAsciiDigit(code) {\n    return code >= 48  && code <= 57 ;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97  && code <= 122 ;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65  && code <= 90 ;\n}\nfunction equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\nfunction commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\nfunction getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nclass CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nclass GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = ( new CodePointIterator(str, offset));\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nfunction nextCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.nextGraphemeLength();\n}\nfunction prevCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.prevGraphemeLength();\n}\nfunction getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\nfunction containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nconst UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/;\nfunction containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nfunction isFullWidthCharacter(charCode) {\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\nfunction isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\nfunction lcut(text, n, prefix = '') {\n    const trimmed = text.trimStart();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(trimmed)) {\n        if (trimmed.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    if (i === 0) {\n        return trimmed;\n    }\n    return prefix + trimmed.substring(i).trimStart();\n}\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\nfunction* forAnsiStringParts(str) {\n    let last = 0;\n    for (const match of str.matchAll(CSI_SEQUENCE)) {\n        if (last !== match.index) {\n            yield { isCode: false, str: str.substring(last, match.index) };\n        }\n        yield { isCode: true, str: match[0] };\n        last = match.index + match[0].length;\n    }\n    if (last !== str.length) {\n        yield { isCode: false, str: str.substring(last) };\n    }\n}\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '');\n    }\n    return str;\n}\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\nfunction removeAnsiEscapeCodesFromPrompt(str) {\n    return removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\nconst UTF8_BOM_CHARACTER = String.fromCharCode(65279 );\nfunction startsWithUTF8BOM(str) {\n    return !!((str && str.length > 0 && str.charCodeAt(0) === 65279) );\n}\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false;\n    }\n    if (target.length < query.length) {\n        return false;\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nfunction uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\nfunction singleLetterHash(n) {\n    const LETTERS_CNT = (90  - 65  + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97  + n);\n    }\n    return String.fromCharCode(65  + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    if (breakTypeA === 0 ) {\n        return (breakTypeB !== 5  && breakTypeB !== 7) ;\n    }\n    if (breakTypeA === 2 ) {\n        if (breakTypeB === 3 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 4  || breakTypeA === 2  || breakTypeA === 3 ) {\n        return true;\n    }\n    if (breakTypeB === 4  || breakTypeB === 2  || breakTypeB === 3 ) {\n        return true;\n    }\n    if (breakTypeA === 8 ) {\n        if (breakTypeB === 8  || breakTypeB === 9  || breakTypeB === 11  || breakTypeB === 12 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 11  || breakTypeA === 9 ) {\n        if (breakTypeB === 9  || breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 12  || breakTypeA === 10 ) {\n        if (breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeB === 5  || breakTypeB === 13 ) {\n        return false;\n    }\n    if (breakTypeB === 7 ) {\n        return false;\n    }\n    if (breakTypeA === 1 ) {\n        return false;\n    }\n    if (breakTypeA === 13  && breakTypeB === 14 ) {\n        return false;\n    }\n    if (breakTypeA === 6  && breakTypeB === 6 ) {\n        return false;\n    }\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = ( new GraphemeBreakTree());\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        if (codePoint < 32) {\n            if (codePoint === 10 ) {\n                return 3 ;\n            }\n            if (codePoint === 13 ) {\n                return 2 ;\n            }\n            return 4 ;\n        }\n        if (codePoint < 127) {\n            return 0 ;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 ;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\nfunction getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    const iterator = ( new CodePointIterator(str, offset));\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    const iterator = ( new CodePointIterator(str, initialOffset));\n    let codePoint = iterator.prevCodePoint();\n    while (((isEmojiModifier(codePoint) || codePoint === 65039  || codePoint === 8419) )) {\n        if (iterator.offset === 0) {\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    if (!isEmojiImprecise(codePoint)) {\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 ) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nconst noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static { this.ambiguousCharacterData = ( new Lazy(() => {\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    })); }\n    static { this.cache = ( new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = ( new Map());\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = ( new Map(map1));\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = ( new Map());\n            for (const [key, value] of map1) {\n                if (( map2.has(key))) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return ( new AmbiguousCharacters(map));\n    })); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = ( new Lazy(() => ( Object.keys(AmbiguousCharacters.ambiguousCharacterData.value)).filter((k) => !k.startsWith('_')))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return ( this.confusableDictionary.has(codePoint));\n    }\n    containsAmbiguousCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return ( new Set(( this.confusableDictionary.keys())));\n    }\n}\nclass InvisibleCharacters {\n    static getRawData() {\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = ( new Set(InvisibleCharacters.getRawData()));\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return ( InvisibleCharacters.getData().has(codePoint));\n    }\n    static containsInvisibleCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nexport { AmbiguousCharacters, CodePointIterator, GraphemeIterator, InvisibleCharacters, UNUSUAL_LINE_TERMINATORS, UTF8_BOM_CHARACTER, commonPrefixLength, commonSuffixLength, compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase, computeCodePoint, containsRTL, containsUnusualLineTerminators, containsUppercaseCharacter, convertSimple2RegExpPattern, count, createRegExp, equalsIgnoreCase, escape, escapeRegExpCharacters, firstNonWhitespaceIndex, forAnsiStringParts, format, format2, fuzzyContains, getCharContainingOffset, getIndentationLength, getLeadingWhitespace, getLeftDeleteOffset, getNLines, getNextCodePoint, htmlAttributeEncodeValue, isAsciiDigit, isBasicASCII, isEmojiImprecise, isFalsyOrWhitespace, isFullWidthCharacter, isHighSurrogate, isLowSurrogate, isLowerAsciiLetter, isUpperAsciiLetter, lastNonWhitespaceIndex, lcut, ltrim, nextCharLength, noBreakWhitespace, prevCharLength, regExpLeadsToEndlessLoop, removeAnsiEscapeCodes, removeAnsiEscapeCodesFromPrompt, replaceAsync, rtrim, singleLetterHash, splitLines, splitLinesIncludeSeparators, startsWithIgnoreCase, startsWithUTF8BOM, stripWildcards, trim, truncate, truncateMiddle, uppercaseFirstLetter };\n","function isString(str) {\n    return (typeof str === 'string');\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\nfunction isObject(obj) {\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\nfunction isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\nfunction isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\nfunction isBoolean(obj) {\n    return (obj === true || obj === false);\n}\nfunction isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\nfunction isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\nfunction isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nfunction assertType(condition, type) {\n    if (!condition) {\n        throw ( new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type'));\n    }\n}\nfunction assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw ( new Error('Assertion Failed: argument is undefined or null'));\n    }\n    return arg;\n}\nfunction assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw ( new Error(`Assertion Failed: argument at index ${i} is undefined or null`));\n        }\n        result.push(arg);\n    }\n    return result;\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\nfunction areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nfunction validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw ( new Error(`argument does not match constraint: typeof ${constraint}`));\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw ( new Error(\n            `argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`\n        ));\n    }\n}\nexport { areFunctions, assertAllDefined, assertIsDefined, assertType, isBoolean, isDefined, isEmptyObject, isFunction, isIterable, isNumber, isObject, isString, isStringArray, isTypedArray, isUndefined, isUndefinedOrNull, validateConstraint, validateConstraints };\n","import { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\nfunction isPathSeparator(code) {\n    return code === 47  || code === 92 ;\n}\nfunction toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\nfunction toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) {\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\nfunction getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1)\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        if (path.charCodeAt(1) === 58 ) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                return path.slice(0, 2);\n            }\n        }\n    }\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3;\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1);\n            }\n        }\n    }\n    return '';\n}\nfunction isUNC(path) {\n    if (!isWindows) {\n        return false;\n    }\n    if (!path || path.length < 5) {\n        return false;\n    }\n    let code = path.charCodeAt(0);\n    if (code !== 92 ) {\n        return false;\n    }\n    code = path.charCodeAt(1);\n    if (code !== 92 ) {\n        return false;\n    }\n    let pos = 2;\n    const start = pos;\n    for (; pos < path.length; pos++) {\n        code = path.charCodeAt(pos);\n        if (code === 92 ) {\n            break;\n        }\n    }\n    if (start === pos) {\n        return false;\n    }\n    code = path.charCodeAt(pos + 1);\n    if (isNaN(code) || code === 92 ) {\n        return false;\n    }\n    return true;\n}\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nfunction isValidBasename(name, isWindowsOS = isWindows) {\n    const invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return false;\n    }\n    invalidFileChars.lastIndex = 0;\n    if (invalidFileChars.test(name)) {\n        return false;\n    }\n    if (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n        return false;\n    }\n    if (name === '.' || name === '..') {\n        return false;\n    }\n    if (isWindowsOS && name[name.length - 1] === '.') {\n        return false;\n    }\n    if (isWindowsOS && name.length !== name.trim().length) {\n        return false;\n    }\n    if (name.length > 255) {\n        return false;\n    }\n    return true;\n}\nfunction isEqual(pathA, pathB, ignoreCase) {\n    const identityEquals = (pathA === pathB);\n    if (!ignoreCase || identityEquals) {\n        return identityEquals;\n    }\n    if (!pathA || !pathB) {\n        return false;\n    }\n    return equalsIgnoreCase(pathA, pathB);\n}\nfunction isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true;\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--;\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nfunction isWindowsDriveLetter(char0) {\n    return char0 >= 65  && char0 <= 90  || char0 >= 97  && char0 <= 122 ;\n}\nfunction hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 ;\n    }\n    return false;\n}\nfunction getDriveLetter(path, isWindowsOS = isWindows) {\n    return hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\nfunction indexOfPath(path, candidate, ignoreCase) {\n    if (candidate.length > path.length) {\n        return -1;\n    }\n    if (path === candidate) {\n        return 0;\n    }\n    if (ignoreCase) {\n        path = path.toLowerCase();\n        candidate = candidate.toLowerCase();\n    }\n    return path.indexOf(candidate);\n}\nfunction parseLineAndColumnAware(rawPath) {\n    const segments = rawPath.split(':');\n    let path = undefined;\n    let line = undefined;\n    let column = undefined;\n    for (const segment of segments) {\n        const segmentAsNumber = Number(segment);\n        if (!isNumber(segmentAsNumber)) {\n            path = !!path ? [path, segment].join(':') : segment;\n        }\n        else if (line === undefined) {\n            line = segmentAsNumber;\n        }\n        else if (column === undefined) {\n            column = segmentAsNumber;\n        }\n    }\n    if (!path) {\n        throw ( new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`'));\n    }\n    return {\n        path,\n        line: line !== undefined ? line : undefined,\n        column: column !== undefined ? column : line !== undefined ? 1 : undefined\n    };\n}\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\nfunction randomPath(parent, prefix, randomLength = 8) {\n    let suffix = '';\n    for (let i = 0; i < randomLength; i++) {\n        let pathCharsTouse;\n        if (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n            pathCharsTouse = windowsSafePathFirstChars;\n        }\n        else {\n            pathCharsTouse = pathChars;\n        }\n        suffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n    }\n    let randomFileName;\n    {\n        randomFileName = suffix;\n    }\n    return randomFileName;\n}\nexport { getDriveLetter, getRoot, hasDriveLetter, indexOfPath, isEqual, isEqualOrParent, isPathSeparator, isUNC, isValidBasename, isWindowsDriveLetter, parseLineAndColumnAware, randomPath, toPosixPath, toSlashes };\n","import { onUnexpectedError } from './errors.js';\nimport { isNative, webWorkerOrigin, isWeb } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport { join, posix } from './path.js';\nimport { toDisposable } from './lifecycle.js';\nimport { ResourceMap } from './map.js';\nvar Schemas;\n( (function(Schemas) {\n    Schemas.inMemory = 'inmemory';\n    Schemas.vscode = 'vscode';\n    Schemas.internal = 'private';\n    Schemas.walkThrough = 'walkThrough';\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    Schemas.webviewPanel = 'webview-panel';\n    Schemas.vscodeWebview = 'vscode-webview';\n    Schemas.extension = 'extension';\n    Schemas.vscodeFileResource = 'vscode-file';\n    Schemas.tmp = 'tmp';\n    Schemas.vsls = 'vsls';\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    Schemas.commentsInput = 'comment';\n    Schemas.codeSetting = 'code-setting';\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {})));\nfunction matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nfunction matchesSomeScheme(target, ...schemes) {\n    return ( schemes.some(scheme => matchesScheme(target, scheme)));\n}\nconst connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    setDelegate(delegate) {\n        this._delegate = delegate;\n    }\n    setServerRootPath(product, serverBasePath) {\n        this._serverRootPath = getServerRootPath(product, serverBasePath);\n    }\n    getServerRootPath() {\n        return this._serverRootPath;\n    }\n    get _remoteResourcesPath() {\n        return posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    set(authority, host, port) {\n        this._hosts[authority] = host;\n        this._ports[authority] = port;\n    }\n    setConnectionToken(authority, connectionToken) {\n        this._connectionTokens[authority] = connectionToken;\n    }\n    getPreferredWebSchema() {\n        return this._preferredWebSchema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return ( URI.from({\n            scheme: isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        }));\n    }\n}\nconst RemoteAuthorities = ( new RemoteAuthoritiesImpl());\nfunction getServerRootPath(product, basePath) {\n    return posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\nconst nodeModulesPath = 'vs/../../node_modules';\nconst VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    constructor() {\n        this.staticBrowserUris = ( new ResourceMap());\n        this.appResourcePathUrls = ( new Map());\n    }\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    registerAppResourcePathUrl(moduleId, url) {\n        this.appResourcePathUrls.set(moduleId, url);\n    }\n    toUrl(moduleId) {\n        let url = this.appResourcePathUrls.get(moduleId);\n        if (typeof url === 'function') {\n            url = url();\n        }\n        return ( ( new URL(url ?? moduleId, globalThis.location?.href ?? import.meta.url)).toString());\n    }\n    asBrowserUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToBrowserUri(uri);\n    }\n    uriToBrowserUri(uri) {\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        if (\n        uri.scheme === Schemas.file &&\n            (\n            (\n            isNative || (webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return this.staticBrowserUris.get(uri) ?? uri;\n    }\n    asFileUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToFileUri(uri);\n    }\n    uriToFileUri(uri) {\n        if (uri.scheme === Schemas.vscodeFileResource) {\n            return uri.with({\n                scheme: Schemas.file,\n                authority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(( URI.parse(rootUriOrPath, true)), uriOrModule);\n            }\n            const modulePath = join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return ( URI.parse(moduleIdToUrl.toUrl(uriOrModule)));\n    }\n    registerStaticBrowserUri(uri, browserUri) {\n        this.staticBrowserUris.set(uri, browserUri);\n        return toDisposable(() => {\n            if (this.staticBrowserUris.get(uri) === browserUri) {\n                this.staticBrowserUris.delete(uri);\n            }\n        });\n    }\n    getRegisteredBrowserUris() {\n        return ( this.staticBrowserUris.keys());\n    }\n}\nconst FileAccess = ( new FileAccessImpl());\nvar COI;\n( (function(COI) {\n    const coiHeaders = ( new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]));\n    COI.CoopAndCoep = ( Object.freeze(coiHeaders.get('3')));\n    const coiSearchParamName = 'vscode-coi';\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = ( new URL(url)).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = ( new URL(( url.toString(true)))).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {})));\nexport { COI, FileAccess, RemoteAuthorities, Schemas, VSCODE_AUTHORITY, connectionTokenQueryName, getServerRootPath, matchesScheme, matchesSomeScheme, nodeModulesPath };\n","import { isEqualOrParent as isEqualOrParent$1, toSlashes, toPosixPath, getRoot } from './extpath.js';\nimport { Schemas } from './network.js';\nimport { posix, dirname as dirname$1, normalize, relative, resolve, sep } from './path.js';\nimport { isWindows, isLinux } from './platform.js';\nimport { compare, equalsIgnoreCase } from './strings.js';\nimport { uriToFsPath, URI } from './uri.js';\nfunction originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nclass ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return compare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return ( uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString());\n    }\n    ignorePathCasing(uri) {\n        return this._ignorePathCasing(uri);\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return isEqualOrParent$1(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return isEqualOrParent$1(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return posix.basename(resource.path);\n    }\n    extname(resource) {\n        return posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(dirname$1(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 ) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/';\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = toPosixPath(path);\n        return base.with({\n            path: posix.resolve(base.path, path)\n        });\n    }\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep$1 = sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > getRoot(fsp).length && fsp[fsp.length - 1] === sep$1;\n        }\n        else {\n            const p = resource.path;\n            return ((p.length > 1 && p.charCodeAt(p.length - 1) === 47) ) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath));\n        }\n    }\n    removeTrailingPathSeparator(resource, sep$1 = sep) {\n        if (hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep$1 = sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === getRoot(fsp).length) && (fsp[fsp.length - 1] === sep$1));\n        }\n        else {\n            sep$1 = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 ;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\nconst extUri = ( new ExtUri(() => false));\nconst extUriBiasedIgnorePathCase = ( new ExtUri(uri => {\n    return uri.scheme === Schemas.file ? !isLinux : true;\n}));\nconst extUriIgnorePathCase = ( new ExtUri(_ => true));\nconst isEqual = extUri.isEqual.bind(extUri);\nconst isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nextUri.getComparisonKey.bind(extUri);\nconst basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nconst basename = extUri.basename.bind(extUri);\nconst extname = extUri.extname.bind(extUri);\nconst dirname = extUri.dirname.bind(extUri);\nconst joinPath = extUri.joinPath.bind(extUri);\nconst normalizePath = extUri.normalizePath.bind(extUri);\nconst relativePath = extUri.relativePath.bind(extUri);\nconst resolvePath = extUri.resolvePath.bind(extUri);\nconst isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nconst isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nconst hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nconst removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nconst addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\nfunction distinctParents(items, resourceAccessor) {\n    const distinctParents = [];\n    for (let i = 0; i < items.length; i++) {\n        const candidateResource = resourceAccessor(items[i]);\n        if (( items.some((otherItem, index) => {\n            if (index === i) {\n                return false;\n            }\n            return isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n        }))) {\n            continue;\n        }\n        distinctParents.push(items[i]);\n    }\n    return distinctParents;\n}\nvar DataUri;\n( (function(DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = ( new Map());\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {})));\nfunction toLocalResource(resource, authority, localScheme) {\n    if (authority) {\n        let path = resource.path;\n        if (path && path[0] !== posix.sep) {\n            path = posix.sep + path;\n        }\n        return resource.with({ scheme: localScheme, authority, path });\n    }\n    return resource.with({ scheme: localScheme });\n}\nexport { DataUri, ExtUri, addTrailingPathSeparator, basename, basenameOrAuthority, dirname, distinctParents, extUri, extUriBiasedIgnorePathCase, extUriIgnorePathCase, extname, hasTrailingPathSeparator, isAbsolutePath, isEqual, isEqualAuthority, isEqualOrParent, joinPath, normalizePath, originalFSPath, relativePath, removeTrailingPathSeparator, resolvePath, toLocalResource };\n","import { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError, BugIndicatingError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable, DisposableMap } from './lifecycle.js';\nimport { extUri } from './resources.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\nfunction isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nfunction createCancelablePromise(callback) {\n    const source = ( new CancellationTokenSource());\n    const thenable = callback(source.token);\n    const promise = ( new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(( new CancellationError()));\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    }));\n    return new (class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    });\n}\nfunction raceCancellation(promise, token, defaultValue) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nfunction raceCancellationError(promise, token) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            reject(( new CancellationError()));\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nasync function raceCancellablePromises(cancellablePromises) {\n    let resolvedPromiseIndex = -1;\n    const promises = ( cancellablePromises.map(\n        (promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; })\n    ));\n    try {\n        const result = await Promise.race(promises);\n        return result;\n    }\n    finally {\n        cancellablePromises.forEach((cancellablePromise, index) => {\n            if (index !== resolvedPromiseIndex) {\n                cancellablePromise.cancel();\n            }\n        });\n    }\n}\nfunction raceTimeout(promise, timeout, onTimeout) {\n    let promiseResolve = undefined;\n    const timer = setTimeout(() => {\n        promiseResolve?.(undefined);\n        onTimeout?.();\n    }, timeout);\n    return Promise.race([\n        promise.finally(() => clearTimeout(timer)),\n        ( new Promise(resolve => promiseResolve = resolve))\n    ]);\n}\nfunction asPromise(callback) {\n    return ( new Promise((resolve, reject) => {\n        const item = callback();\n        if (isThenable(item)) {\n            item.then(resolve, reject);\n        }\n        else {\n            resolve(item);\n        }\n    }));\n}\nfunction promiseWithResolvers() {\n    let resolve;\n    let reject;\n    const promise = ( new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    }));\n    return { promise, resolve: resolve, reject: reject };\n}\nclass Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(( new Error('Throttler is disposed')));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = ( new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                }));\n            }\n            return ( new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            }));\n        }\n        this.activePromise = promiseFactory();\n        return ( new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        }));\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nclass Sequencer {\n    constructor() {\n        this.current = Promise.resolve(null);\n    }\n    queue(promiseTask) {\n        return this.current = this.current.then(() => promiseTask(), () => promiseTask());\n    }\n}\nclass SequencerByKey {\n    constructor() {\n        this.promiseMap = ( new Map());\n    }\n    queue(key, promiseTask) {\n        const runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n        const newPromise = runningPromise\n            .catch(() => { })\n            .then(promiseTask)\n            .finally(() => {\n            if (this.promiseMap.get(key) === newPromise) {\n                this.promiseMap.delete(key);\n            }\n        });\n        this.promiseMap.set(key, newPromise);\n        return newPromise;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = ( new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            })).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(( new CancellationError()));\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\nclass ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = ( new Delayer(defaultDelay));\n        this.throttler = ( new Throttler());\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    isTriggered() {\n        return this.delayer.isTriggered();\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nclass Barrier {\n    constructor() {\n        this._isOpen = false;\n        this._promise = ( new Promise((c, e) => {\n            this._completePromise = c;\n        }));\n    }\n    isOpen() {\n        return this._isOpen;\n    }\n    open() {\n        this._isOpen = true;\n        this._completePromise(true);\n    }\n    wait() {\n        return this._promise;\n    }\n}\nclass AutoOpenBarrier extends Barrier {\n    constructor(autoOpenTimeMs) {\n        super();\n        this._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n    }\n    open() {\n        clearTimeout(this._timeout);\n        super.open();\n    }\n}\nfunction timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return ( new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(( new CancellationError()));\n        });\n    }));\n}\nfunction disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.deleteAndLeak(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nfunction sequence(promiseFactories) {\n    const results = [];\n    let index = 0;\n    const len = promiseFactories.length;\n    function next() {\n        return index < len ? promiseFactories[index++]() : null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        const n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return Promise.resolve(results);\n    }\n    return Promise.resolve(null).then(thenHandler);\n}\nfunction first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nclass Limiter {\n    constructor(maxDegreeOfParalellism) {\n        this._size = 0;\n        this._isDisposed = false;\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onDrained = ( new Emitter());\n    }\n    whenIdle() {\n        return this.size > 0\n            ? Event.toPromise(this.onDrained)\n            : Promise.resolve();\n    }\n    get onDrained() {\n        return this._onDrained.event;\n    }\n    get size() {\n        return this._size;\n    }\n    queue(factory) {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this._size++;\n        return ( new Promise((c, e) => {\n            this.outstandingPromises.push({ factory, c, e });\n            this.consume();\n        }));\n    }\n    consume() {\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            const iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            const promise = iLimitedTask.factory();\n            promise.then(iLimitedTask.c, iLimitedTask.e);\n            promise.then(() => this.consumed(), () => this.consumed());\n        }\n    }\n    consumed() {\n        if (this._isDisposed) {\n            return;\n        }\n        this.runningPromises--;\n        if (--this._size === 0) {\n            this._onDrained.fire();\n        }\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n    }\n    clear() {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this.outstandingPromises.length = 0;\n        this._size = this.runningPromises;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this.outstandingPromises.length = 0;\n        this._size = 0;\n        this._onDrained.dispose();\n    }\n}\nclass Queue extends Limiter {\n    constructor() {\n        super(1);\n    }\n}\nclass ResourceQueue {\n    constructor() {\n        this.queues = ( new Map());\n        this.drainers = ( new Set());\n        this.drainListeners = undefined;\n        this.drainListenerCount = 0;\n    }\n    async whenDrained() {\n        if (this.isDrained()) {\n            return;\n        }\n        const promise = ( new DeferredPromise());\n        this.drainers.add(promise);\n        return promise.p;\n    }\n    isDrained() {\n        for (const [, queue] of this.queues) {\n            if (queue.size > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    queueSize(resource, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        return this.queues.get(key)?.size ?? 0;\n    }\n    queueFor(resource, factory, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        let queue = this.queues.get(key);\n        if (!queue) {\n            queue = ( new Queue());\n            const drainListenerId = this.drainListenerCount++;\n            const drainListener = Event.once(queue.onDrained)(() => {\n                queue?.dispose();\n                this.queues.delete(key);\n                this.onDidQueueDrain();\n                this.drainListeners?.deleteAndDispose(drainListenerId);\n                if (this.drainListeners?.size === 0) {\n                    this.drainListeners.dispose();\n                    this.drainListeners = undefined;\n                }\n            });\n            if (!this.drainListeners) {\n                this.drainListeners = ( new DisposableMap());\n            }\n            this.drainListeners.set(drainListenerId, drainListener);\n            this.queues.set(key, queue);\n        }\n        return queue.queue(factory);\n    }\n    onDidQueueDrain() {\n        if (!this.isDrained()) {\n            return;\n        }\n        this.releaseDrainers();\n    }\n    releaseDrainers() {\n        for (const drainer of this.drainers) {\n            drainer.complete();\n        }\n        this.drainers.clear();\n    }\n    dispose() {\n        for (const [, queue] of this.queues) {\n            queue.dispose();\n        }\n        this.queues.clear();\n        this.releaseDrainers();\n        this.drainListeners?.dispose();\n    }\n}\nclass TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`));\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`));\n        }\n        if (this._token !== -1) {\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nclass IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`));\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nclass RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    flush() {\n        if (this.isScheduled()) {\n            this.cancel();\n            this.doRun();\n        }\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\nclass RunOnceWorker extends RunOnceScheduler {\n    constructor(runner, timeout) {\n        super(runner, timeout);\n        this.units = [];\n    }\n    work(unit) {\n        this.units.push(unit);\n        if (!this.isScheduled()) {\n            this.schedule();\n        }\n    }\n    doRun() {\n        const units = this.units;\n        this.units = [];\n        this.runner?.(units);\n    }\n    dispose() {\n        this.units = [];\n        super.dispose();\n    }\n}\nlet runWhenGlobalIdle;\nlet _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15;\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(( Object.freeze(deadline)));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nclass AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\nclass GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\nasync function retry(task, delay, retries) {\n    let lastError;\n    for (let i = 0; i < retries; i++) {\n        try {\n            return await task();\n        }\n        catch (error) {\n            lastError = error;\n            await timeout(delay);\n        }\n    }\n    throw lastError;\n}\nclass TaskSequentializer {\n    isRunning(taskId) {\n        if (typeof taskId === 'number') {\n            return this._running?.taskId === taskId;\n        }\n        return !!this._running;\n    }\n    get running() {\n        return this._running?.promise;\n    }\n    cancelRunning() {\n        this._running?.cancel();\n    }\n    run(taskId, promise, onCancel) {\n        this._running = { taskId, cancel: () => onCancel?.(), promise };\n        promise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n        return promise;\n    }\n    doneRunning(taskId) {\n        if (this._running && taskId === this._running.taskId) {\n            this._running = undefined;\n            this.runQueued();\n        }\n    }\n    runQueued() {\n        if (this._queued) {\n            const queued = this._queued;\n            this._queued = undefined;\n            queued.run().then(queued.promiseResolve, queued.promiseReject);\n        }\n    }\n    queue(run) {\n        if (!this._queued) {\n            const { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers();\n            this._queued = {\n                run,\n                promise,\n                promiseResolve: promiseResolve,\n                promiseReject: promiseReject\n            };\n        }\n        else {\n            this._queued.run = run;\n        }\n        return this._queued.promise;\n    }\n    hasQueued() {\n        return !!this._queued;\n    }\n    async join() {\n        return this._queued?.promise ?? this._running?.promise;\n    }\n}\nclass IntervalCounter {\n    constructor(interval, nowFn = () => Date.now()) {\n        this.interval = interval;\n        this.nowFn = nowFn;\n        this.lastIncrementTime = 0;\n        this.value = 0;\n    }\n    increment() {\n        const now = this.nowFn();\n        if (now - this.lastIncrementTime > this.interval) {\n            this.lastIncrementTime = now;\n            this.value = 0;\n        }\n        this.value++;\n        return this.value;\n    }\n}\nclass DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === 1 ;\n    }\n    get isResolved() {\n        return this.outcome?.outcome === 0 ;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    get value() {\n        return this.outcome?.outcome === 0  ? this.outcome?.value : undefined;\n    }\n    constructor() {\n        this.p = ( new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        }));\n    }\n    complete(value) {\n        return ( new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 , value };\n            resolve();\n        }));\n    }\n    error(err) {\n        return ( new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 , value: err };\n            resolve();\n        }));\n    }\n    cancel() {\n        return this.error(( new CancellationError()));\n    }\n}\nvar Promises;\n( (function(Promises) {\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(( promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined;\n        }))));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result;\n    }\n    Promises.settled = settled;\n    function withAsyncBody(bodyFn) {\n        return ( new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        }));\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {})));\nclass StatefulPromise {\n    get value() { return this._value; }\n    get error() { return this._error; }\n    get isResolved() { return this._isResolved; }\n    constructor(promise) {\n        this._value = undefined;\n        this._error = undefined;\n        this._isResolved = false;\n        this.promise = promise.then(value => {\n            this._value = value;\n            this._isResolved = true;\n            return value;\n        }, error => {\n            this._error = error;\n            this._isResolved = true;\n            throw error;\n        });\n    }\n    requireValue() {\n        if (!this._isResolved) {\n            throw ( new BugIndicatingError('Promise is not resolved yet'));\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n}\nclass LazyStatefulPromise {\n    constructor(_compute) {\n        this._compute = _compute;\n        this._promise = ( new Lazy(() => ( new StatefulPromise(this._compute()))));\n    }\n    requireValue() {\n        return this._promise.value.requireValue();\n    }\n    getPromise() {\n        return this._promise.value.promise;\n    }\n    get currentValue() {\n        return this._promise.rawValue?.value;\n    }\n}\nclass AsyncIterableObject {\n    static fromArray(items) {\n        return ( new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        }));\n    }\n    static fromPromise(promise) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        }));\n    }\n    static fromPromises(promises) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( promises.map(async (p) => emitter.emitOne(await p))));\n        }));\n    }\n    static merge(iterables) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            })));\n        }));\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = 0 ;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = ( new Emitter());\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 ) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 ) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        }));\n    }\n    map(mapFn) {\n        return ( AsyncIterableObject.map(this, mapFn));\n    }\n    static filter(iterable, filterFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        }));\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    emitOne(value) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    emitMany(values) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    resolve() {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._state = 1 ;\n        this._onStateChanged.fire();\n    }\n    reject(error) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._state = 2 ;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nclass CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction createCancelableAsyncIterable(callback) {\n    const source = ( new CancellationTokenSource());\n    const innerIterable = callback(source.token);\n    return ( new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(( new CancellationError()));\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    }));\n}\nclass AsyncIterableSource {\n    constructor(onReturn) {\n        this._deferred = ( new DeferredPromise());\n        this._asyncIterable = ( new AsyncIterableObject(emitter => {\n            if (earlyError) {\n                emitter.reject(earlyError);\n                return;\n            }\n            if (earlyItems) {\n                emitter.emitMany(earlyItems);\n            }\n            this._errorFn = (error) => emitter.reject(error);\n            this._emitFn = (item) => emitter.emitOne(item);\n            return this._deferred.p;\n        }, onReturn));\n        let earlyError;\n        let earlyItems;\n        this._emitFn = (item) => {\n            if (!earlyItems) {\n                earlyItems = [];\n            }\n            earlyItems.push(item);\n        };\n        this._errorFn = (error) => {\n            if (!earlyError) {\n                earlyError = error;\n            }\n        };\n    }\n    get asyncIterable() {\n        return this._asyncIterable;\n    }\n    resolve() {\n        this._deferred.complete();\n    }\n    reject(error) {\n        this._errorFn(error);\n        this._deferred.complete();\n    }\n    emitOne(item) {\n        this._emitFn(item);\n    }\n}\nexport { AbstractIdleValue, AsyncIterableObject, AsyncIterableSource, AutoOpenBarrier, Barrier, CancelableAsyncIterableObject, DeferredPromise, Delayer, GlobalIdleValue, IntervalCounter, IntervalTimer, LazyStatefulPromise, Limiter, Promises, Queue, ResourceQueue, RunOnceScheduler, RunOnceWorker, Sequencer, SequencerByKey, StatefulPromise, TaskSequentializer, ThrottledDelayer, Throttler, TimeoutTimer, _runWhenIdle, asPromise, createCancelableAsyncIterable, createCancelablePromise, disposableTimeout, first, isThenable, promiseWithResolvers, raceCancellablePromises, raceCancellation, raceCancellationError, raceTimeout, retry, runWhenGlobalIdle, sequence, timeout };\n","class DebugNameData {\n    constructor(owner, debugNameSource, referenceFn) {\n        this.owner = owner;\n        this.debugNameSource = debugNameSource;\n        this.referenceFn = referenceFn;\n    }\n    getDebugName(target) {\n        return getDebugName(target, this);\n    }\n}\nconst countPerName = ( new Map());\nconst cachedDebugName = ( new WeakMap());\nfunction getDebugName(target, data) {\n    const cached = cachedDebugName.get(target);\n    if (cached) {\n        return cached;\n    }\n    const dbgName = computeDebugName(target, data);\n    if (dbgName) {\n        let count = countPerName.get(dbgName) ?? 0;\n        count++;\n        countPerName.set(dbgName, count);\n        const result = count === 1 ? dbgName : `${dbgName}#${count}`;\n        cachedDebugName.set(target, result);\n        return result;\n    }\n    return undefined;\n}\nfunction computeDebugName(self, data) {\n    const cached = cachedDebugName.get(self);\n    if (cached) {\n        return cached;\n    }\n    const ownerStr = data.owner ? formatOwner(data.owner) + `.` : '';\n    let result;\n    const debugNameSource = data.debugNameSource;\n    if (debugNameSource !== undefined) {\n        if (typeof debugNameSource === 'function') {\n            result = debugNameSource();\n            if (result !== undefined) {\n                return ownerStr + result;\n            }\n        }\n        else {\n            return ownerStr + debugNameSource;\n        }\n    }\n    const referenceFn = data.referenceFn;\n    if (referenceFn !== undefined) {\n        result = getFunctionName(referenceFn);\n        if (result !== undefined) {\n            return ownerStr + result;\n        }\n    }\n    if (data.owner !== undefined) {\n        const key = findKey(data.owner, self);\n        if (key !== undefined) {\n            return ownerStr + key;\n        }\n    }\n    return undefined;\n}\nfunction findKey(obj, value) {\n    for (const key in obj) {\n        if (obj[key] === value) {\n            return key;\n        }\n    }\n    return undefined;\n}\nconst countPerClassName = ( new Map());\nconst ownerId = ( new WeakMap());\nfunction formatOwner(owner) {\n    const id = ownerId.get(owner);\n    if (id) {\n        return id;\n    }\n    const className = getClassName(owner);\n    let count = countPerClassName.get(className) ?? 0;\n    count++;\n    countPerClassName.set(className, count);\n    const result = count === 1 ? className : `${className}#${count}`;\n    ownerId.set(owner, result);\n    return result;\n}\nfunction getClassName(obj) {\n    const ctor = obj.constructor;\n    if (ctor) {\n        return ctor.name;\n    }\n    return 'Object';\n}\nfunction getFunctionName(fn) {\n    const fnSrc = ( fn.toString());\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result?.trim();\n}\nexport { DebugNameData, getDebugName, getFunctionName };\n","import { equals } from './arrays.js';\nconst strictEquals = (a, b) => a === b;\nfunction itemsEquals(itemEquals = strictEquals) {\n    return (a, b) => equals(a, b, itemEquals);\n}\nfunction itemEquals() {\n    return (a, b) => a.equals(b);\n}\nfunction equalsIfDefined(equalsOrV1, v2, equals) {\n    if (equals !== undefined) {\n        const v1 = equalsOrV1;\n        if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n            return v2 === v1;\n        }\n        return equals(v1, v2);\n    }\n    else {\n        const equals = equalsOrV1;\n        return (v1, v2) => {\n            if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n                return v2 === v1;\n            }\n            return equals(v1, v2);\n        };\n    }\n}\nfunction structuralEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (!structuralEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        if (Object.getPrototypeOf(a) === Object.prototype && Object.getPrototypeOf(b) === Object.prototype) {\n            const aObj = a;\n            const bObj = b;\n            const keysA = ( Object.keys(aObj));\n            const keysB = ( Object.keys(bObj));\n            const keysBSet = ( new Set(keysB));\n            if (keysA.length !== keysB.length) {\n                return false;\n            }\n            for (const key of keysA) {\n                if (!( keysBSet.has(key))) {\n                    return false;\n                }\n                if (!structuralEquals(aObj[key], bObj[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction getStructuralKey(t) {\n    return JSON.stringify(toNormalizedJsonStructure(t));\n}\nlet objectId = 0;\nconst objIds = ( new WeakMap());\nfunction toNormalizedJsonStructure(t) {\n    if (Array.isArray(t)) {\n        return ( t.map(toNormalizedJsonStructure));\n    }\n    if (t && typeof t === 'object') {\n        if (Object.getPrototypeOf(t) === Object.prototype) {\n            const tObj = t;\n            const res = Object.create(null);\n            for (const key of ( Object.keys(tObj)).sort()) {\n                res[key] = toNormalizedJsonStructure(tObj[key]);\n            }\n            return res;\n        }\n        else {\n            let objId = objIds.get(t);\n            if (objId === undefined) {\n                objId = objectId++;\n                objIds.set(t, objId);\n            }\n            return objId + '----2b76a038c20c4bcc';\n        }\n    }\n    return t;\n}\nexport { equalsIfDefined, getStructuralKey, itemEquals, itemsEquals, strictEquals, structuralEquals };\n","let globalObservableLogger;\nfunction getLogger() {\n    return globalObservableLogger;\n}\nexport { getLogger };\n","import { getFunctionName, DebugNameData } from './debugName.js';\nimport { strictEquals } from '../equals.js';\nimport '../event.js';\nimport '../lifecycle.js';\nimport { getLogger } from './logging.js';\nlet _recomputeInitiallyAndOnChange;\nfunction _setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange) {\n    _recomputeInitiallyAndOnChange = recomputeInitiallyAndOnChange;\n}\nlet _keepObserved;\nfunction _setKeepObserved(keepObserved) {\n    _keepObserved = keepObserved;\n}\nlet _derived;\nfunction _setDerivedOpts(derived) {\n    _derived = derived;\n}\nclass ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    map(fnOrOwner, fnOrUndefined) {\n        const owner = fnOrUndefined === undefined ? undefined : fnOrOwner;\n        const fn = fnOrUndefined === undefined ? fnOrOwner : fnOrUndefined;\n        return _derived({\n            owner,\n            debugName: () => {\n                const name = getFunctionName(fn);\n                if (name !== undefined) {\n                    return name;\n                }\n                const regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1(?:\\??)\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n                const match = regexp.exec(( fn.toString()));\n                if (match) {\n                    return `${this.debugName}.${match[2]}`;\n                }\n                if (!owner) {\n                    return `${this.debugName} (mapped)`;\n                }\n                return undefined;\n            },\n            debugReferenceFn: fn,\n        }, (reader) => fn(this.read(reader), reader));\n    }\n    flatten() {\n        return _derived({\n            owner: undefined,\n            debugName: () => `${this.debugName} (flattened)`,\n        }, (reader) => this.read(reader).read(reader));\n    }\n    recomputeInitiallyAndOnChange(store, handleValue) {\n        store.add(_recomputeInitiallyAndOnChange(this, handleValue));\n        return this;\n    }\n    keepObserved(store) {\n        store.add(_keepObserved(this));\n        return this;\n    }\n    get debugValue() {\n        return this.get();\n    }\n}\nclass BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = ( new Set());\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\nfunction transaction(fn, getDebugName) {\n    const tx = ( new TransactionImpl(fn, getDebugName));\n    try {\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nlet _globalTransaction = undefined;\nfunction globalTransaction(fn) {\n    if (_globalTransaction) {\n        fn(_globalTransaction);\n    }\n    else {\n        const tx = ( new TransactionImpl(fn, undefined));\n        _globalTransaction = tx;\n        try {\n            fn(tx);\n        }\n        finally {\n            tx.finish();\n            _globalTransaction = undefined;\n        }\n    }\n}\nasync function asyncTransaction(fn, getDebugName) {\n    const tx = ( new TransactionImpl(fn, getDebugName));\n    try {\n        await fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nfunction subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nclass TransactionImpl {\n    constructor(_fn, _getDebugName) {\n        this._fn = _fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this._fn);\n    }\n    updateObserver(observer, observable) {\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        const updatingObservers = this.updatingObservers;\n        for (let i = 0; i < updatingObservers.length; i++) {\n            const { observer, observable } = updatingObservers[i];\n            observer.endUpdate(observable);\n        }\n        this.updatingObservers = null;\n    }\n}\nfunction observableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = ( new DebugNameData(undefined, nameOrOwner, undefined));\n    }\n    else {\n        debugNameData = ( new DebugNameData(nameOrOwner, undefined, undefined));\n    }\n    return ( new ObservableValue(debugNameData, initialValue, strictEquals));\n}\nclass ObservableValue extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? 'ObservableValue';\n    }\n    constructor(_debugNameData, initialValue, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._equalityComparator = _equalityComparator;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        if (change === undefined && this._equalityComparator(this._value, value)) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = ( new TransactionImpl(() => { }, () => `Setting ${this.debugName}`));\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            getLogger()?.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\nfunction disposableObservableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = ( new DebugNameData(undefined, nameOrOwner, undefined));\n    }\n    else {\n        debugNameData = ( new DebugNameData(nameOrOwner, undefined, undefined));\n    }\n    return ( new DisposableObservableValue(debugNameData, initialValue, strictEquals));\n}\nclass DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        this._value?.dispose();\n    }\n}\nexport { BaseObservable, ConvenientObservable, DisposableObservableValue, ObservableValue, TransactionImpl, _setDerivedOpts, _setKeepObserved, _setRecomputeInitiallyAndOnChange, asyncTransaction, disposableObservableValue, globalTransaction, observableValue, subtransaction, transaction };\n","import { onUnexpectedError, BugIndicatingError } from './errors.js';\nfunction ok(value, message) {\n    if (!value) {\n        throw ( new Error(message ? `Assertion failed (${message})` : 'Assertion Failed'));\n    }\n}\nfunction assertNever(value, message = 'Unreachable') {\n    throw ( new Error(message));\n}\nfunction assert(condition, message = 'unexpected state') {\n    if (!condition) {\n        throw ( new BugIndicatingError(`Assertion Failed: ${message}`));\n    }\n}\nfunction softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(( new BugIndicatingError('Soft Assertion Failed')));\n    }\n}\nfunction assertFn(condition) {\n    if (!condition()) {\n        debugger;\n        condition();\n        onUnexpectedError(( new BugIndicatingError('Assertion Failed')));\n    }\n}\nfunction checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nexport { assert, assertFn, assertNever, checkAdjacentItems, ok, softAssert };\n","import { DebugNameData } from './debugName.js';\nimport { assertFn } from '../assert.js';\nimport '../arrays.js';\nimport { onBugIndicatingError } from '../errors.js';\nimport '../event.js';\nimport { toDisposable, DisposableStore, trackDisposable, markAsDisposed } from '../lifecycle.js';\nimport { getLogger } from './logging.js';\nfunction autorun(fn) {\n    return ( new AutorunObserver(( new DebugNameData(undefined, undefined, fn)), fn, undefined, undefined));\n}\nfunction autorunOpts(options, fn) {\n    return ( new AutorunObserver(( new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn)), fn, undefined, undefined));\n}\nfunction autorunHandleChanges(options, fn) {\n    return ( new AutorunObserver(( new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn)), fn, options.createEmptyChangeSummary, options.handleChange));\n}\nfunction autorunWithStoreHandleChanges(options, fn) {\n    const store = ( new DisposableStore());\n    const disposable = autorunHandleChanges({\n        owner: options.owner,\n        debugName: options.debugName,\n        debugReferenceFn: options.debugReferenceFn ?? fn,\n        createEmptyChangeSummary: options.createEmptyChangeSummary,\n        handleChange: options.handleChange,\n    }, (reader, changeSummary) => {\n        store.clear();\n        fn(reader, changeSummary, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nfunction autorunWithStore(fn) {\n    const store = ( new DisposableStore());\n    const disposable = autorunOpts({\n        owner: undefined,\n        debugName: undefined,\n        debugReferenceFn: fn,\n    }, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nclass AutorunObserver {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _runFn, createChangeSummary, _handleChange) {\n        this._debugNameData = _debugNameData;\n        this._runFn = _runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 ;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = ( new Set());\n        this.dependenciesToBeRemoved = ( new Set());\n        this.changeSummary = this.createChangeSummary?.();\n        this._runIfNeeded();\n        trackDisposable(this);\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n        markAsDisposed(this);\n    }\n    _runIfNeeded() {\n        if (this.state === 3 ) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 ;\n        const isDisposed = this.disposed;\n        try {\n            if (!isDisposed) {\n                getLogger()?.handleAutorunTriggered(this);\n                const changeSummary = this.changeSummary;\n                try {\n                    this.changeSummary = this.createChangeSummary?.();\n                    this._runFn(this, changeSummary);\n                }\n                catch (e) {\n                    onBugIndicatingError(e);\n                }\n            }\n        }\n        finally {\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    beginUpdate() {\n        if (this.state === 3 ) {\n            this.state = 1 ;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        try {\n            if (this.updateCount === 1) {\n                do {\n                    if (this.state === 1 ) {\n                        this.state = 3 ;\n                        for (const d of this.dependencies) {\n                            d.reportChanges();\n                            if (this.state === 2 ) {\n                                break;\n                            }\n                        }\n                    }\n                    this._runIfNeeded();\n                } while (this.state !== 3 );\n            }\n        }\n        finally {\n            this.updateCount--;\n        }\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3  && ( this.dependencies.has(observable)) && !( this.dependenciesToBeRemoved.has(observable))) {\n            this.state = 1 ;\n        }\n    }\n    handleChange(observable, change) {\n        if (( this.dependencies.has(observable)) && !( this.dependenciesToBeRemoved.has(observable))) {\n            try {\n                const shouldReact = this._handleChange ? this._handleChange({\n                    changedObservable: observable,\n                    change,\n                    didChange: (o) => o === observable,\n                }, this.changeSummary) : true;\n                if (shouldReact) {\n                    this.state = 2 ;\n                }\n            }\n            catch (e) {\n                onBugIndicatingError(e);\n            }\n        }\n    }\n    readObservable(observable) {\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n( (function(autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {})));\nexport { AutorunObserver, autorun, autorunHandleChanges, autorunOpts, autorunWithStore, autorunWithStoreHandleChanges };\n","import { BaseObservable, _setDerivedOpts } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { assertFn } from '../assert.js';\nimport { strictEquals } from '../equals.js';\nimport { onBugIndicatingError } from '../errors.js';\nimport '../event.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { getLogger } from './logging.js';\nfunction derived(computeFnOrOwner, computeFn) {\n    if (computeFn !== undefined) {\n        return ( new Derived(( new DebugNameData(computeFnOrOwner, undefined, computeFn)), computeFn, undefined, undefined, undefined, strictEquals));\n    }\n    return ( new Derived(( new DebugNameData(undefined, undefined, computeFnOrOwner)), computeFnOrOwner, undefined, undefined, undefined, strictEquals));\n}\nfunction derivedWithSetter(owner, computeFn, setter) {\n    return ( new DerivedWithSetter(( new DebugNameData(owner, undefined, computeFn)), computeFn, undefined, undefined, undefined, strictEquals, setter));\n}\nfunction derivedOpts(options, computeFn) {\n    return ( new Derived(( new DebugNameData(options.owner, options.debugName, options.debugReferenceFn)), computeFn, undefined, undefined, options.onLastObserverRemoved, options.equalsFn ?? strictEquals));\n}\n_setDerivedOpts(derivedOpts);\nfunction derivedHandleChanges(options, computeFn) {\n    return ( new Derived(( new DebugNameData(options.owner, options.debugName, undefined)), computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, options.equalityComparer ?? strictEquals));\n}\nfunction derivedWithStore(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    const store = ( new DisposableStore());\n    return ( new Derived(( new DebugNameData(owner, undefined, computeFn)), r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose(), strictEquals));\n}\nfunction derivedDisposable(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    let store = undefined;\n    return ( new Derived(( new DebugNameData(owner, undefined, computeFn)), r => {\n        if (!store) {\n            store = ( new DisposableStore());\n        }\n        else {\n            store.clear();\n        }\n        const result = computeFn(r);\n        if (result) {\n            store.add(result);\n        }\n        return result;\n    }, undefined, undefined, () => {\n        if (store) {\n            store.dispose();\n            store = undefined;\n        }\n    }, strictEquals));\n}\nclass Derived extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._computeFn = _computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this._equalityComparator = _equalityComparator;\n        this.state = 0 ;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = ( new Set());\n        this.dependenciesToBeRemoved = ( new Set());\n        this.changeSummary = undefined;\n        this.changeSummary = this.createChangeSummary?.();\n    }\n    onLastObserverRemoved() {\n        this.state = 0 ;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        this._handleLastObserverRemoved?.();\n    }\n    get() {\n        if (this.observers.size === 0) {\n            const result = this._computeFn(this, this.createChangeSummary?.());\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                if (this.state === 1 ) {\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 ) {\n                            break;\n                        }\n                    }\n                }\n                if (this.state === 1 ) {\n                    this.state = 3 ;\n                }\n                this._recomputeIfNeeded();\n            } while (this.state !== 3 );\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        if (this.state === 3 ) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 ;\n        const oldValue = this.value;\n        this.state = 3 ;\n        let didChange = false;\n        try {\n            const changeSummary = this.changeSummary;\n            this.changeSummary = this.createChangeSummary?.();\n            try {\n                this.value = this._computeFn(this, changeSummary);\n            }\n            finally {\n                for (const o of this.dependenciesToBeRemoved) {\n                    o.removeObserver(this);\n                }\n                this.dependenciesToBeRemoved.clear();\n            }\n            didChange = hadValue && !(this._equalityComparator(oldValue, this.value));\n            getLogger()?.handleDerivedRecomputed(this, {\n                oldValue,\n                newValue: this.value,\n                change: undefined,\n                didChange,\n                hadValue,\n            });\n        }\n        catch (e) {\n            onBugIndicatingError(e);\n        }\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 ) {\n            this.state = 1 ;\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this);\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3  && ( this.dependencies.has(observable)) && !( this.dependenciesToBeRemoved.has(observable))) {\n            this.state = 1 ;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (( this.dependencies.has(observable)) && !( this.dependenciesToBeRemoved.has(observable))) {\n            let shouldReact = false;\n            try {\n                shouldReact = this._handleChange ? this._handleChange({\n                    changedObservable: observable,\n                    change,\n                    didChange: (o) => o === observable,\n                }, this.changeSummary) : true;\n            }\n            catch (e) {\n                onBugIndicatingError(e);\n            }\n            const wasUpToDate = this.state === 3 ;\n            if (shouldReact && (this.state === 1  || wasUpToDate)) {\n                this.state = 2 ;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    readObservable(observable) {\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !( this.observers.has(observer)) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = ( this.observers.has(observer)) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            observer.endUpdate(this);\n        }\n    }\n}\nclass DerivedWithSetter extends Derived {\n    constructor(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved = undefined, equalityComparator, set) {\n        super(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved, equalityComparator);\n        this.set = set;\n    }\n}\nexport { Derived, DerivedWithSetter, derived, derivedDisposable, derivedHandleChanges, derivedOpts, derivedWithSetter, derivedWithStore };\n","import { autorunWithStoreHandleChanges, autorunOpts } from './autorun.js';\nimport { ConvenientObservable, BaseObservable, subtransaction, transaction, _setKeepObserved, _setRecomputeInitiallyAndOnChange, observableValue } from './base.js';\nimport { DebugNameData, getDebugName } from './debugName.js';\nimport { BugIndicatingError } from '../errors.js';\nimport { strictEquals } from '../equals.js';\nimport { Event } from '../event.js';\nimport { toDisposable, DisposableStore } from '../lifecycle.js';\nimport { derivedOpts, derived } from './derived.js';\nfunction constObservable(value) {\n    return ( new ConstObservable(value));\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return ( this.toString());\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n    }\n    removeObserver(observer) {\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nfunction observableFromPromise(promise) {\n    const observable = observableValue('promiseValue', {});\n    promise.then((value) => {\n        observable.set({ value }, undefined);\n    });\n    return observable;\n}\nfunction observableFromEvent(...args) {\n    let owner;\n    let event;\n    let getValue;\n    if (args.length === 3) {\n        [owner, event, getValue] = args;\n    }\n    else {\n        [event, getValue] = args;\n    }\n    return ( new FromEventObservable(( new DebugNameData(owner, undefined, getValue)), event, getValue, () => FromEventObservable.globalTransaction, strictEquals));\n}\nfunction observableFromEventOpts(options, event, getValue) {\n    return ( new FromEventObservable(( new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? getValue)), event, getValue, () => FromEventObservable.globalTransaction, options.equalsFn ?? strictEquals));\n}\nclass FromEventObservable extends BaseObservable {\n    constructor(_debugNameData, event, _getValue, _getTransaction, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this.event = event;\n        this._getValue = _getValue;\n        this._getTransaction = _getTransaction;\n        this._equalityComparator = _equalityComparator;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            const newValue = this._getValue(args);\n            const oldValue = this.value;\n            const didChange = !this.hasValue || !(this._equalityComparator(oldValue, newValue));\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    subtransaction(this._getTransaction(), (tx) => {\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n        };\n    }\n    getDebugName() {\n        return this._debugNameData.getDebugName(this);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            const value = this._getValue(undefined);\n            return value;\n        }\n    }\n}\n( (function(observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n    function batchEventsGlobally(tx, fn) {\n        let didSet = false;\n        if (FromEventObservable.globalTransaction === undefined) {\n            FromEventObservable.globalTransaction = tx;\n            didSet = true;\n        }\n        try {\n            fn();\n        }\n        finally {\n            if (didSet) {\n                FromEventObservable.globalTransaction = undefined;\n            }\n        }\n    }\n    observableFromEvent.batchEventsGlobally = batchEventsGlobally;\n})(observableFromEvent || (observableFromEvent = {})));\nfunction observableSignalFromEvent(debugName, event) {\n    return ( new FromEventObservableSignal(debugName, event));\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n    }\n}\nfunction observableSignal(debugNameOrOwner) {\n    if (typeof debugNameOrOwner === 'string') {\n        return ( new ObservableSignal(debugNameOrOwner));\n    }\n    else {\n        return ( new ObservableSignal(undefined, debugNameOrOwner));\n    }\n}\nclass ObservableSignal extends BaseObservable {\n    get debugName() {\n        return ( new DebugNameData(this._owner, this._debugName, undefined)).getDebugName(this) ?? 'Observable Signal';\n    }\n    toString() {\n        return this.debugName;\n    }\n    constructor(_debugName, _owner) {\n        super();\n        this._debugName = _debugName;\n        this._owner = _owner;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n    }\n}\nfunction wasEventTriggeredRecently(event, timeoutMs, disposableStore) {\n    const observable = observableValue('triggeredRecently', false);\n    let timeout = undefined;\n    disposableStore.add(event(() => {\n        observable.set(true, undefined);\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(() => {\n            observable.set(false, undefined);\n        }, timeoutMs);\n    }));\n    return observable;\n}\nfunction keepObserved(observable) {\n    const o = ( new KeepAliveObserver(false, undefined));\n    observable.addObserver(o);\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setKeepObserved(keepObserved);\nfunction recomputeInitiallyAndOnChange(observable, handleValue) {\n    const o = ( new KeepAliveObserver(true, handleValue));\n    observable.addObserver(o);\n    if (handleValue) {\n        handleValue(observable.get());\n    }\n    else {\n        observable.reportChanges();\n    }\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange);\nclass KeepAliveObserver {\n    constructor(_forceRecompute, _handleValue) {\n        this._forceRecompute = _forceRecompute;\n        this._handleValue = _handleValue;\n        this._counter = 0;\n    }\n    beginUpdate(observable) {\n        this._counter++;\n    }\n    endUpdate(observable) {\n        this._counter--;\n        if (this._counter === 0 && this._forceRecompute) {\n            if (this._handleValue) {\n                this._handleValue(observable.get());\n            }\n            else {\n                observable.reportChanges();\n            }\n        }\n    }\n    handlePossibleChange(observable) {\n    }\n    handleChange(observable, change) {\n    }\n}\nfunction derivedObservableWithCache(owner, computeFn) {\n    let lastValue = undefined;\n    const observable = derivedOpts({ owner, debugReferenceFn: computeFn }, reader => {\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return observable;\n}\nfunction derivedObservableWithWritableCache(owner, computeFn) {\n    let lastValue = undefined;\n    const onChange = observableSignal('derivedObservableWithWritableCache');\n    const observable = derived(owner, reader => {\n        onChange.read(reader);\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return Object.assign(observable, {\n        clearCache: (tx) => {\n            lastValue = undefined;\n            onChange.trigger(tx);\n        },\n        setCache: (newValue, tx) => {\n            lastValue = newValue;\n            onChange.trigger(tx);\n        }\n    });\n}\nfunction mapObservableArrayCached(owner, items, map, keySelector) {\n    let m = ( new ArrayMap(map, keySelector));\n    const self = derivedOpts({\n        debugReferenceFn: map,\n        owner,\n        onLastObserverRemoved: () => {\n            m.dispose();\n            m = ( new ArrayMap(map));\n        }\n    }, (reader) => {\n        m.setItems(items.read(reader));\n        return m.getItems();\n    });\n    return self;\n}\nclass ArrayMap {\n    constructor(_map, _keySelector) {\n        this._map = _map;\n        this._keySelector = _keySelector;\n        this._cache = ( new Map());\n        this._items = [];\n    }\n    dispose() {\n        this._cache.forEach(entry => entry.store.dispose());\n        this._cache.clear();\n    }\n    setItems(items) {\n        const newItems = [];\n        const itemsToRemove = ( new Set(( this._cache.keys())));\n        for (const item of items) {\n            const key = this._keySelector ? this._keySelector(item) : item;\n            let entry = this._cache.get(key);\n            if (!entry) {\n                const store = ( new DisposableStore());\n                const out = this._map(item, store);\n                entry = { out, store };\n                this._cache.set(key, entry);\n            }\n            else {\n                itemsToRemove.delete(key);\n            }\n            newItems.push(entry.out);\n        }\n        for (const item of itemsToRemove) {\n            const entry = this._cache.get(item);\n            entry.store.dispose();\n            this._cache.delete(item);\n        }\n        this._items = newItems;\n    }\n    getItems() {\n        return this._items;\n    }\n}\nclass ValueWithChangeEventFromObservable {\n    constructor(observable) {\n        this.observable = observable;\n    }\n    get onDidChange() {\n        return Event.fromObservableLight(this.observable);\n    }\n    get value() {\n        return this.observable.get();\n    }\n}\nfunction observableFromValueWithChangeEvent(owner, value) {\n    if (value instanceof ValueWithChangeEventFromObservable) {\n        return value.observable;\n    }\n    return observableFromEvent(owner, value.onDidChange, () => value.value);\n}\nfunction latestChangedValue(owner, observables) {\n    if (observables.length === 0) {\n        throw ( new BugIndicatingError());\n    }\n    let hasLastChangedValue = false;\n    let lastChangedValue = undefined;\n    const result = observableFromEvent(owner, cb => {\n        const store = ( new DisposableStore());\n        for (const o of observables) {\n            store.add(autorunOpts({ debugName: () => getDebugName(result, ( new DebugNameData(owner, undefined, undefined))) + '.updateLastChangedValue' }, reader => {\n                hasLastChangedValue = true;\n                lastChangedValue = o.read(reader);\n                cb();\n            }));\n        }\n        store.add({\n            dispose() {\n                hasLastChangedValue = false;\n                lastChangedValue = undefined;\n            },\n        });\n        return store;\n    }, () => {\n        if (hasLastChangedValue) {\n            return lastChangedValue;\n        }\n        else {\n            return observables[observables.length - 1].get();\n        }\n    });\n    return result;\n}\nfunction derivedConstOnceDefined(owner, fn) {\n    return derivedObservableWithCache(owner, (reader, lastValue) => lastValue ?? fn(reader));\n}\nfunction runOnChange(observable, cb) {\n    let _previousValue;\n    return autorunWithStoreHandleChanges({\n        createEmptyChangeSummary: () => ({ deltas: [], didChange: false }),\n        handleChange: (context, changeSummary) => {\n            if (context.didChange(observable)) {\n                const e = context.change;\n                if (e !== undefined) {\n                    changeSummary.deltas.push(e);\n                }\n                changeSummary.didChange = true;\n            }\n            return true;\n        },\n    }, (reader, changeSummary) => {\n        const value = observable.read(reader);\n        const previousValue = _previousValue;\n        if (changeSummary.didChange) {\n            _previousValue = value;\n            cb(value, previousValue, changeSummary.deltas);\n        }\n    });\n}\nfunction runOnChangeWithStore(observable, cb) {\n    const store = ( new DisposableStore());\n    const disposable = runOnChange(observable, (value, previousValue, deltas) => {\n        store.clear();\n        cb(value, previousValue, deltas, store);\n    });\n    return {\n        dispose() {\n            disposable.dispose();\n            store.dispose();\n        }\n    };\n}\nexport { FromEventObservable, KeepAliveObserver, ValueWithChangeEventFromObservable, constObservable, derivedConstOnceDefined, derivedObservableWithCache, derivedObservableWithWritableCache, keepObserved, latestChangedValue, mapObservableArrayCached, observableFromEvent, observableFromEventOpts, observableFromPromise, observableFromValueWithChangeEvent, observableSignal, observableSignalFromEvent, recomputeInitiallyAndOnChange, runOnChange, runOnChangeWithStore, wasEventTriggeredRecently };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nclass OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static ofLength(length) {\n        return ( new OffsetRange(0, length));\n    }\n    static ofStartAndLength(start, length) {\n        return ( new OffsetRange(start, start + length));\n    }\n    static emptyAt(offset) {\n        return ( new OffsetRange(offset, offset));\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw ( new BugIndicatingError(`Invalid range: ${( this.toString())}`));\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive + offset));\n    }\n    deltaStart(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive));\n    }\n    deltaEnd(offset) {\n        return ( new OffsetRange(this.start, this.endExclusive + offset));\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    join(other) {\n        return ( new OffsetRange(\n            Math.min(this.start, other.start),\n            Math.max(this.endExclusive, other.endExclusive)\n        ));\n    }\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return ( new OffsetRange(start, end));\n        }\n        return undefined;\n    }\n    intersectionLength(range) {\n        const start = Math.max(this.start, range.start);\n        const end = Math.min(this.endExclusive, range.endExclusive);\n        return Math.max(0, end - start);\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    intersectsOrTouches(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start <= end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    clip(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    map(f) {\n        const result = [];\n        for (let i = this.start; i < this.endExclusive; i++) {\n            result.push(f(i));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nclass OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    toString() {\n        return ( this._sortedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    intersectsStrict(other) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        const result = ( new OffsetRangeSet());\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\nexport { OffsetRange, OffsetRangeSet };\n","class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return ( new Position(newLineNumber, newColumn));\n        }\n    }\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    clone() {\n        return ( new Position(this.lineNumber, this.column));\n    }\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    static lift(pos) {\n        return ( new Position(pos.lineNumber, pos.column));\n    }\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\nexport { Position };\n","import { Position } from './position.js';\nclass Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return ( new Range(startLineNumber, startColumn, endLineNumber, endColumn));\n    }\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return ( new Range(\n            resultStartLineNumber,\n            resultStartColumn,\n            resultEndLineNumber,\n            resultEndColumn\n        ));\n    }\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    static getEndPosition(range) {\n        return ( new Position(range.endLineNumber, range.endColumn));\n    }\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    static getStartPosition(range) {\n        return ( new Position(range.startLineNumber, range.startColumn));\n    }\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        return ( new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        return ( new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n    }\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    static collapseToStart(range) {\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.startLineNumber,\n            range.startColumn\n        ));\n    }\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    static collapseToEnd(range) {\n        return ( new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn));\n    }\n    delta(lineCount) {\n        return ( new Range(\n            this.startLineNumber + lineCount,\n            this.startColumn,\n            this.endLineNumber + lineCount,\n            this.endColumn\n        ));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.endLineNumber,\n            range.endColumn\n        ));\n    }\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    static areIntersectingOrTouching(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static areIntersecting(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\nexport { Range };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\nclass LineRange {\n    static fromRange(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber));\n    }\n    static fromRangeInclusive(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber + 1));\n    }\n    static subtract(a, b) {\n        if (!b) {\n            return [a];\n        }\n        if (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [\n                ( new LineRange(a.startLineNumber, b.startLineNumber)),\n                ( new LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive))\n            ];\n        }\n        else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n            return [];\n        }\n        else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [( new LineRange(\n                Math.max(b.endLineNumberExclusive, a.startLineNumber),\n                a.endLineNumberExclusive\n            ))];\n        }\n        else {\n            return [( new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive)))];\n        }\n    }\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = ( new LineRangeSet(lineRanges[0].slice()));\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(( new LineRangeSet(lineRanges[i].slice())));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw ( new BugIndicatingError('lineRanges cannot be empty'));\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return ( new LineRange(startLineNumber, endLineNumberExclusive));\n    }\n    static ofLength(startLineNumber, length) {\n        return ( new LineRange(startLineNumber, startLineNumber + length));\n    }\n    static deserialize(lineRange) {\n        return ( new LineRange(lineRange[0], lineRange[1]));\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw ( new BugIndicatingError(\n                `startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`\n            ));\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    delta(offset) {\n        return ( new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset));\n    }\n    deltaLength(offset) {\n        return ( new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset));\n    }\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    join(other) {\n        return ( new LineRange(\n            Math.min(this.startLineNumber, other.startLineNumber),\n            Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n        ));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return ( new LineRange(startLineNumber, endLineNumberExclusive));\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return ( new Range(\n            this.startLineNumber,\n            1,\n            this.endLineNumberExclusive - 1,\n            Number.MAX_SAFE_INTEGER\n        ));\n    }\n    toExclusiveRange() {\n        return ( new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1));\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    toOffsetRange() {\n        return ( new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1));\n    }\n}\nclass LineRangeSet {\n    constructor(\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    current = ( new LineRange(\n                        current.startLineNumber,\n                        Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive)\n                    ));\n                }\n                else {\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return ( new LineRangeSet(result));\n    }\n    subtractFrom(range) {\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return ( new LineRangeSet([range]));\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(( new LineRange(startLineNumber, r.startLineNumber)));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(( new LineRange(startLineNumber, range.endLineNumberExclusive)));\n        }\n        return ( new LineRangeSet(result));\n    }\n    toString() {\n        return ( this._normalizedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return ( new LineRangeSet(result));\n    }\n    getWithDelta(value) {\n        return ( new LineRangeSet(( this._normalizedRanges.map(r => r.delta(value)))));\n    }\n}\nexport { LineRange, LineRangeSet };\n","function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 ) {\n        return 255 ;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 ) {\n        return 4294967295 ;\n    }\n    return v | 0;\n}\nexport { toUint32, toUint8 };\n","import { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nclass PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = ( new Uint32Array(values.length));\n        this.prefixSumValidIndex = ( new Int32Array(1));\n        this.prefixSumValidIndex[0] = -1;\n    }\n    getCount() {\n        return this.values.length;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length + insertValuesLen));\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length - count));\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return ( new PrefixSumIndexOfResult(mid, sum - midStart));\n    }\n}\nclass ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return ( new PrefixSumIndexOfResult(idx, sum - viewLinesAbove));\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nclass PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport { ConstantTimePrefixSumComputer, PrefixSumComputer, PrefixSumIndexOfResult };\n","import { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nclass MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(( new Position(change.range.startLineNumber, change.range.startColumn)), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = ( new Uint32Array(linesLength));\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = ( new PrefixSumComputer(lineStartValues));\n        }\n    }\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                return;\n            }\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        const newLengths = ( new Uint32Array(insertLines.length - 1));\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\nexport { MirrorTextModel };\n","function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 ;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 ) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 ) {\n                eol |= 2 ;\n                i++;\n            }\n            else {\n                eol |= 3 ;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 ) {\n            eol |= 1 ;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\nexport { countEOL };\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw ( new Error(`${id} references an unknown codicon: ${fontCharacter}`));\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\nfunction getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\nexport { getCodiconFontCharacters, register };\n","import { register } from './codiconsUtil.js';\nconst codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n    attach: register('attach', 0xec34),\n};\nexport { codiconsLibrary };\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\nfunction getAllCodicons() {\n    return ( Object.values(Codicon));\n}\nconst codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\nconst Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\nexport { Codicon, codiconsDerived, getAllCodicons };\n","import { Emitter } from '../../base/common/event.js';\nimport { toDisposable, Disposable } from '../../base/common/lifecycle.js';\nclass TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = ( new Map());\n        this._factories = ( new Map());\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = ( new TokenizationSupportFactoryData(this, languageId, factory));\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(( this._tokenizationSupports.keys())),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 ) {\n            return this._colorMap[2 ];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\nexport { TokenizationRegistry };\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { EditOperation } from './core/editOperation.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistry$1 } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\nclass Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nclass TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\nclass EncodedTokenizationResult {\n    constructor(\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nvar HoverVerbosityAction;\n( ((function(HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}))));\nvar CompletionItemKinds;\n( ((function(CompletionItemKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(0 , Codicon.symbolMethod);\n    byKind.set(1 , Codicon.symbolFunction);\n    byKind.set(2 , Codicon.symbolConstructor);\n    byKind.set(3 , Codicon.symbolField);\n    byKind.set(4 , Codicon.symbolVariable);\n    byKind.set(5 , Codicon.symbolClass);\n    byKind.set(6 , Codicon.symbolStruct);\n    byKind.set(7 , Codicon.symbolInterface);\n    byKind.set(8 , Codicon.symbolModule);\n    byKind.set(9 , Codicon.symbolProperty);\n    byKind.set(10 , Codicon.symbolEvent);\n    byKind.set(11 , Codicon.symbolOperator);\n    byKind.set(12 , Codicon.symbolUnit);\n    byKind.set(13 , Codicon.symbolValue);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(14 , Codicon.symbolConstant);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(16 , Codicon.symbolEnumMember);\n    byKind.set(17 , Codicon.symbolKeyword);\n    byKind.set(27 , Codicon.symbolSnippet);\n    byKind.set(18 , Codicon.symbolText);\n    byKind.set(19 , Codicon.symbolColor);\n    byKind.set(20 , Codicon.symbolFile);\n    byKind.set(21 , Codicon.symbolReference);\n    byKind.set(22 , Codicon.symbolCustomColor);\n    byKind.set(23 , Codicon.symbolFolder);\n    byKind.set(24 , Codicon.symbolTypeParameter);\n    byKind.set(25 , Codicon.account);\n    byKind.set(26 , Codicon.issues);\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = ( (new Map()));\n    data.set('method', 0 );\n    data.set('function', 1 );\n    data.set('constructor', 2 );\n    data.set('field', 3 );\n    data.set('variable', 4 );\n    data.set('class', 5 );\n    data.set('struct', 6 );\n    data.set('interface', 7 );\n    data.set('module', 8 );\n    data.set('property', 9 );\n    data.set('event', 10 );\n    data.set('operator', 11 );\n    data.set('unit', 12 );\n    data.set('value', 13 );\n    data.set('constant', 14 );\n    data.set('enum', 15 );\n    data.set('enum-member', 16 );\n    data.set('enumMember', 16 );\n    data.set('keyword', 17 );\n    data.set('snippet', 27 );\n    data.set('text', 18 );\n    data.set('color', 19 );\n    data.set('file', 20 );\n    data.set('reference', 21 );\n    data.set('customcolor', 22 );\n    data.set('folder', 23 );\n    data.set('type-parameter', 24 );\n    data.set('typeParameter', 24 );\n    data.set('account', 25 );\n    data.set('issue', 26 );\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 ;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}))));\nvar InlineCompletionTriggerKind;\n( ((function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}))));\nclass SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nvar DocumentPasteTriggerKind;\n( ((function(DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}))));\nvar SignatureHelpTriggerKind;\n( ((function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}))));\nvar DocumentHighlightKind;\n( ((function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}))));\nfunction isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\nfunction isLocation(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range);\n}\nconst symbolKindNames = {\n    [17 ]: ( localize(1678, \"array\")),\n    [16 ]: ( localize(1679, \"boolean\")),\n    [4 ]: ( localize(1680, \"class\")),\n    [13 ]: ( localize(1681, \"constant\")),\n    [8 ]: ( localize(1682, \"constructor\")),\n    [9 ]: ( localize(1683, \"enumeration\")),\n    [21 ]: ( localize(1684, \"enumeration member\")),\n    [23 ]: ( localize(1685, \"event\")),\n    [7 ]: ( localize(1686, \"field\")),\n    [0 ]: ( localize(1687, \"file\")),\n    [11 ]: ( localize(1688, \"function\")),\n    [10 ]: ( localize(1689, \"interface\")),\n    [19 ]: ( localize(1690, \"key\")),\n    [5 ]: ( localize(1691, \"method\")),\n    [1 ]: ( localize(1692, \"module\")),\n    [2 ]: ( localize(1693, \"namespace\")),\n    [20 ]: ( localize(1694, \"null\")),\n    [15 ]: ( localize(1695, \"number\")),\n    [18 ]: ( localize(1696, \"object\")),\n    [24 ]: ( localize(1697, \"operator\")),\n    [3 ]: ( localize(1698, \"package\")),\n    [6 ]: ( localize(1699, \"property\")),\n    [14 ]: ( localize(1700, \"string\")),\n    [22 ]: ( localize(1701, \"struct\")),\n    [25 ]: ( localize(1702, \"type parameter\")),\n    [12 ]: ( localize(1703, \"variable\")),\n};\nfunction getAriaLabelForSymbol(symbolName, kind) {\n    return ( localize(1704, '{0} ({1})', symbolName, symbolKindNames[kind]));\n}\nvar SymbolKinds;\n( ((function(SymbolKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(0 , Codicon.symbolFile);\n    byKind.set(1 , Codicon.symbolModule);\n    byKind.set(2 , Codicon.symbolNamespace);\n    byKind.set(3 , Codicon.symbolPackage);\n    byKind.set(4 , Codicon.symbolClass);\n    byKind.set(5 , Codicon.symbolMethod);\n    byKind.set(6 , Codicon.symbolProperty);\n    byKind.set(7 , Codicon.symbolField);\n    byKind.set(8 , Codicon.symbolConstructor);\n    byKind.set(9 , Codicon.symbolEnum);\n    byKind.set(10 , Codicon.symbolInterface);\n    byKind.set(11 , Codicon.symbolFunction);\n    byKind.set(12 , Codicon.symbolVariable);\n    byKind.set(13 , Codicon.symbolConstant);\n    byKind.set(14 , Codicon.symbolString);\n    byKind.set(15 , Codicon.symbolNumber);\n    byKind.set(16 , Codicon.symbolBoolean);\n    byKind.set(17 , Codicon.symbolArray);\n    byKind.set(18 , Codicon.symbolObject);\n    byKind.set(19 , Codicon.symbolKey);\n    byKind.set(20 , Codicon.symbolNull);\n    byKind.set(21 , Codicon.symbolEnumMember);\n    byKind.set(22 , Codicon.symbolStruct);\n    byKind.set(23 , Codicon.symbolEvent);\n    byKind.set(24 , Codicon.symbolOperator);\n    byKind.set(25 , Codicon.symbolTypeParameter);\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}))));\nclass TextEdit {\n    static asEditOperation(edit) {\n        return EditOperation.replace(Range.lift(edit.range), edit.text);\n    }\n}\nclass FoldingRangeKind {\n    static { this.Comment = ( (new FoldingRangeKind('comment'))); }\n    static { this.Imports = ( (new FoldingRangeKind('imports'))); }\n    static { this.Region = ( (new FoldingRangeKind('region'))); }\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return (\n             (new FoldingRangeKind(value))\n        );\n    }\n    constructor(value) {\n        this.value = value;\n    }\n}\nvar NewSymbolNameTag;\n( ((function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}))));\nvar NewSymbolNameTriggerKind;\n( ((function(NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}))));\nvar Command;\n( ((function(Command) {\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}))));\nvar CommentThreadCollapsibleState;\n( ((function(CommentThreadCollapsibleState) {\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Collapsed\"] = 0] = \"Collapsed\";\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Expanded\"] = 1] = \"Expanded\";\n})(CommentThreadCollapsibleState || (CommentThreadCollapsibleState = {}))));\nvar CommentThreadState;\n( ((function(CommentThreadState) {\n    CommentThreadState[CommentThreadState[\"Unresolved\"] = 0] = \"Unresolved\";\n    CommentThreadState[CommentThreadState[\"Resolved\"] = 1] = \"Resolved\";\n})(CommentThreadState || (CommentThreadState = {}))));\nvar CommentThreadApplicability;\n( ((function(CommentThreadApplicability) {\n    CommentThreadApplicability[CommentThreadApplicability[\"Current\"] = 0] = \"Current\";\n    CommentThreadApplicability[CommentThreadApplicability[\"Outdated\"] = 1] = \"Outdated\";\n})(CommentThreadApplicability || (CommentThreadApplicability = {}))));\nvar CommentMode;\n( ((function(CommentMode) {\n    CommentMode[CommentMode[\"Editing\"] = 0] = \"Editing\";\n    CommentMode[CommentMode[\"Preview\"] = 1] = \"Preview\";\n})(CommentMode || (CommentMode = {}))));\nvar InlayHintKind;\n( ((function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}))));\nclass LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\nconst TokenizationRegistry = ( (new TokenizationRegistry$1()));\nconst TreeSitterTokenizationRegistry = ( (new TokenizationRegistry$1()));\nvar ExternalUriOpenerPriority;\n( ((function(ExternalUriOpenerPriority) {\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"None\"] = 0] = \"None\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Option\"] = 1] = \"Option\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Default\"] = 2] = \"Default\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Preferred\"] = 3] = \"Preferred\";\n})(ExternalUriOpenerPriority || (ExternalUriOpenerPriority = {}))));\nvar InlineEditTriggerKind;\n( ((function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}))));\nexport { Command, CommentMode, CommentThreadApplicability, CommentThreadCollapsibleState, CommentThreadState, CompletionItemKinds, DocumentHighlightKind, DocumentPasteTriggerKind, EncodedTokenizationResult, ExternalUriOpenerPriority, FoldingRangeKind, HoverVerbosityAction, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, LazyTokenizationSupport, NewSymbolNameTag, NewSymbolNameTriggerKind, SelectedSuggestionInfo, SignatureHelpTriggerKind, SymbolKinds, TextEdit, Token, TokenizationRegistry, TokenizationResult, TreeSitterTokenizationRegistry, getAriaLabelForSymbol, isLocation, isLocationLink, symbolKindNames };\n","import { TokenizationResult, Token, EncodedTokenizationResult } from '../languages.js';\nconst NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nfunction nullTokenize(languageId, state) {\n    return ( new TokenizationResult([( new Token(0, '', languageId))], state));\n}\nfunction nullTokenizeEncoded(languageId, state) {\n    const tokens = ( new Uint32Array(2));\n    tokens[0] = 0;\n    tokens[1] = (((languageId << 0) )\n        | ((0  << 8) )\n        | ((0  << 11) )\n        | ((1  << 15) )\n        | ((2  << 24) )) >>> 0;\n    return ( new EncodedTokenizationResult(tokens, state === null ? NullState : state));\n}\nexport { NullState, nullTokenize, nullTokenizeEncoded };\n","import { arrayInsert } from '../../../base/common/arrays.js';\nclass FixedArray {\n    constructor(_default) {\n        this._default = _default;\n        this._store = [];\n    }\n    get(index) {\n        if (index < this._store.length) {\n            return this._store[index];\n        }\n        return this._default;\n    }\n    set(index, value) {\n        while (index >= this._store.length) {\n            this._store[this._store.length] = this._default;\n        }\n        this._store[index] = value;\n    }\n    replace(index, oldLength, newLength) {\n        if (index >= this._store.length) {\n            return;\n        }\n        if (oldLength === 0) {\n            this.insert(index, newLength);\n            return;\n        }\n        else if (newLength === 0) {\n            this.delete(index, oldLength);\n            return;\n        }\n        const before = this._store.slice(0, index);\n        const after = this._store.slice(index + oldLength);\n        const insertArr = arrayFill(newLength, this._default);\n        this._store = before.concat(insertArr, after);\n    }\n    delete(deleteIndex, deleteCount) {\n        if (deleteCount === 0 || deleteIndex >= this._store.length) {\n            return;\n        }\n        this._store.splice(deleteIndex, deleteCount);\n    }\n    insert(insertIndex, insertCount) {\n        if (insertCount === 0 || insertIndex >= this._store.length) {\n            return;\n        }\n        const arr = [];\n        for (let i = 0; i < insertCount; i++) {\n            arr[i] = this._default;\n        }\n        this._store = arrayInsert(this._store, insertIndex, arr);\n    }\n}\nfunction arrayFill(length, value) {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n        arr[i] = value;\n    }\n    return arr;\n}\nexport { FixedArray };\n","import { Lazy } from './lazy.js';\nimport { consumeReadable, toReadable, consumeStream, toStream, prefixedStream, newWriteableStream, prefixedReadable } from './stream.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = ( new Lazy(() => ( new Uint8Array(256))));\nlet textEncoder;\nlet textDecoder;\nclass VSBuffer {\n    static alloc(byteLength) {\n        if (hasBuffer) {\n            return ( new VSBuffer(Buffer.allocUnsafe(byteLength)));\n        }\n        else {\n            return ( new VSBuffer(( new Uint8Array(byteLength))));\n        }\n    }\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return ( new VSBuffer(actual));\n    }\n    static fromString(source, options) {\n        const dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n        if (!dontUseNodeBuffer && hasBuffer) {\n            return ( new VSBuffer(Buffer.from(source)));\n        }\n        else {\n            if (!textEncoder) {\n                textEncoder = ( new TextEncoder());\n            }\n            return ( new VSBuffer(textEncoder.encode(source)));\n        }\n    }\n    static fromByteArray(source) {\n        const result = VSBuffer.alloc(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            result.buffer[i] = source[i];\n        }\n        return result;\n    }\n    static concat(buffers, totalLength) {\n        if (typeof totalLength === 'undefined') {\n            totalLength = 0;\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                totalLength += buffers[i].byteLength;\n            }\n        }\n        const ret = VSBuffer.alloc(totalLength);\n        let offset = 0;\n        for (let i = 0, len = buffers.length; i < len; i++) {\n            const element = buffers[i];\n            ret.set(element, offset);\n            offset += element.byteLength;\n        }\n        return ret;\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    clone() {\n        const result = VSBuffer.alloc(this.byteLength);\n        result.set(this);\n        return result;\n    }\n    toString() {\n        if (hasBuffer) {\n            return ( this.buffer.toString());\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = ( new TextDecoder());\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n    slice(start, end) {\n        return ( new VSBuffer(this.buffer.subarray(start, end)));\n    }\n    set(array, offset) {\n        if (array instanceof VSBuffer) {\n            this.buffer.set(array.buffer, offset);\n        }\n        else if (array instanceof Uint8Array) {\n            this.buffer.set(array, offset);\n        }\n        else if (array instanceof ArrayBuffer) {\n            this.buffer.set(( new Uint8Array(array)), offset);\n        }\n        else if (ArrayBuffer.isView(array)) {\n            this.buffer.set(( new Uint8Array(array.buffer, array.byteOffset, array.byteLength)), offset);\n        }\n        else {\n            throw ( new Error(`Unknown argument 'array'`));\n        }\n    }\n    readUInt32BE(offset) {\n        return readUInt32BE(this.buffer, offset);\n    }\n    writeUInt32BE(value, offset) {\n        writeUInt32BE(this.buffer, value, offset);\n    }\n    readUInt32LE(offset) {\n        return readUInt32LE(this.buffer, offset);\n    }\n    writeUInt32LE(value, offset) {\n        writeUInt32LE(this.buffer, value, offset);\n    }\n    readUInt8(offset) {\n        return readUInt8(this.buffer, offset);\n    }\n    writeUInt8(value, offset) {\n        writeUInt8(this.buffer, value, offset);\n    }\n    indexOf(subarray, offset = 0) {\n        return binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n    }\n}\nfunction binaryIndexOf(haystack, needle, offset = 0) {\n    const needleLen = needle.byteLength;\n    const haystackLen = haystack.byteLength;\n    if (needleLen === 0) {\n        return 0;\n    }\n    if (needleLen === 1) {\n        return haystack.indexOf(needle[0]);\n    }\n    if (needleLen > haystackLen - offset) {\n        return -1;\n    }\n    const table = indexOfTable.value;\n    table.fill(needle.length);\n    for (let i = 0; i < needle.length; i++) {\n        table[needle[i]] = needle.length - i - 1;\n    }\n    let i = offset + needle.length - 1;\n    let j = i;\n    let result = -1;\n    while (i < haystackLen) {\n        if (haystack[i] === needle[j]) {\n            if (j === 0) {\n                result = i;\n                break;\n            }\n            i--;\n            j--;\n        }\n        else {\n            i += Math.max(needle.length - j, table[haystack[i]]);\n            j = needle.length - 1;\n        }\n    }\n    return result;\n}\nfunction readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nfunction writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nfunction readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nfunction writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nfunction readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nfunction writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 2] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 3] = (value & 0b11111111);\n}\nfunction readUInt8(source, offset) {\n    return source[offset];\n}\nfunction writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nfunction readableToBuffer(readable) {\n    return consumeReadable(readable, chunks => VSBuffer.concat(chunks));\n}\nfunction bufferToReadable(buffer) {\n    return toReadable(buffer);\n}\nfunction streamToBuffer(stream) {\n    return consumeStream(stream, chunks => VSBuffer.concat(chunks));\n}\nasync function bufferedStreamToBuffer(bufferedStream) {\n    if (bufferedStream.ended) {\n        return VSBuffer.concat(bufferedStream.buffer);\n    }\n    return VSBuffer.concat([\n        ...bufferedStream.buffer,\n        await streamToBuffer(bufferedStream.stream)\n    ]);\n}\nfunction bufferToStream(buffer) {\n    return toStream(buffer, chunks => VSBuffer.concat(chunks));\n}\nfunction newWriteableBufferStream(options) {\n    return newWriteableStream(chunks => VSBuffer.concat(chunks), options);\n}\nfunction prefixedBufferReadable(prefix, readable) {\n    return prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\nfunction prefixedBufferStream(prefix, stream) {\n    return prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\nfunction decodeBase64(encoded) {\n    let building = 0;\n    let remainder = 0;\n    let bufi = 0;\n    const buffer = ( new Uint8Array(Math.floor(encoded.length / 4 * 3)));\n    const append = (value) => {\n        switch (remainder) {\n            case 3:\n                buffer[bufi++] = building | value;\n                remainder = 0;\n                break;\n            case 2:\n                buffer[bufi++] = building | (value >>> 2);\n                building = value << 6;\n                remainder = 3;\n                break;\n            case 1:\n                buffer[bufi++] = building | (value >>> 4);\n                building = value << 4;\n                remainder = 2;\n                break;\n            default:\n                building = value << 2;\n                remainder = 1;\n        }\n    };\n    for (let i = 0; i < encoded.length; i++) {\n        const code = encoded.charCodeAt(i);\n        if (code >= 65 && code <= 90) {\n            append(code - 65);\n        }\n        else if (code >= 97 && code <= 122) {\n            append(code - 97 + 26);\n        }\n        else if (code >= 48 && code <= 57) {\n            append(code - 48 + 52);\n        }\n        else if (code === 43 || code === 45) {\n            append(62);\n        }\n        else if (code === 47 || code === 95) {\n            append(63);\n        }\n        else if (code === 61) {\n            break;\n        }\n        else {\n            throw ( new SyntaxError(`Unexpected base64 character ${encoded[i]}`));\n        }\n    }\n    const unpadded = bufi;\n    while (remainder > 0) {\n        append(0);\n    }\n    return VSBuffer.wrap(buffer).slice(0, unpadded);\n}\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nfunction encodeBase64({ buffer }, padded = true, urlSafe = false) {\n    const dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n    let output = '';\n    const remainder = buffer.byteLength % 3;\n    let i = 0;\n    for (; i < buffer.byteLength - remainder; i += 3) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        const c = buffer[i + 2];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2 | c >>> 6) & 0b111111];\n        output += dictionary[c & 0b111111];\n    }\n    if (remainder === 1) {\n        const a = buffer[i + 0];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4) & 0b111111];\n        if (padded) {\n            output += '==';\n        }\n    }\n    else if (remainder === 2) {\n        const a = buffer[i + 0];\n        const b = buffer[i + 1];\n        output += dictionary[a >>> 2];\n        output += dictionary[(a << 4 | b >>> 4) & 0b111111];\n        output += dictionary[(b << 2) & 0b111111];\n        if (padded) {\n            output += '=';\n        }\n    }\n    return output;\n}\nexport { VSBuffer, binaryIndexOf, bufferToReadable, bufferToStream, bufferedStreamToBuffer, decodeBase64, encodeBase64, newWriteableBufferStream, prefixedBufferReadable, prefixedBufferStream, readUInt16LE, readUInt32BE, readUInt32LE, readUInt8, readableToBuffer, streamToBuffer, writeUInt16LE, writeUInt32BE, writeUInt32LE, writeUInt8 };\n","class TokenMetadata {\n    static getLanguageId(metadata) {\n        return ((metadata & 255) ) >>> 0 ;\n    }\n    static getTokenType(metadata) {\n        return ((metadata & 768) ) >>> 8 ;\n    }\n    static containsBalancedBrackets(metadata) {\n        return ((metadata & 1024) ) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return ((metadata & 30720) ) >>> 11 ;\n    }\n    static getForeground(metadata) {\n        return ((metadata & 16744448) ) >>> 15 ;\n    }\n    static getBackground(metadata) {\n        return ((metadata & 4278190080) ) >>> 24 ;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 ) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 ) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 ) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 ) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 ) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 ) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 ) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 ) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 ),\n            bold: Boolean(fontStyle & 2 ),\n            underline: Boolean(fontStyle & 4 ),\n            strikethrough: Boolean(fontStyle & 8 ),\n        };\n    }\n}\nexport { TokenMetadata };\n","import { OffsetRange } from '../core/offsetRange.js';\nclass TokenArray {\n    static create(tokenInfo) {\n        return ( new TokenArray(tokenInfo));\n    }\n    constructor(_tokenInfo) {\n        this._tokenInfo = _tokenInfo;\n    }\n    forEach(cb) {\n        let lengthSum = 0;\n        for (const tokenInfo of this._tokenInfo) {\n            const range = ( new OffsetRange(lengthSum, lengthSum + tokenInfo.length));\n            cb(range, tokenInfo);\n            lengthSum += tokenInfo.length;\n        }\n    }\n    slice(range) {\n        const result = [];\n        let lengthSum = 0;\n        for (const tokenInfo of this._tokenInfo) {\n            const tokenStart = lengthSum;\n            const tokenEndEx = tokenStart + tokenInfo.length;\n            if (tokenEndEx > range.start) {\n                if (tokenStart >= range.endExclusive) {\n                    break;\n                }\n                const deltaBefore = Math.max(0, range.start - tokenStart);\n                const deltaAfter = Math.max(0, tokenEndEx - range.endExclusive);\n                result.push(( new TokenInfo(tokenInfo.length - deltaBefore - deltaAfter, tokenInfo.metadata)));\n            }\n            lengthSum += tokenInfo.length;\n        }\n        return TokenArray.create(result);\n    }\n}\nclass TokenInfo {\n    constructor(length, metadata) {\n        this.length = length;\n        this.metadata = metadata;\n    }\n}\nclass TokenArrayBuilder {\n    constructor() {\n        this._tokens = [];\n    }\n    add(length, metadata) {\n        this._tokens.push(( new TokenInfo(length, metadata)));\n    }\n    build() {\n        return TokenArray.create(this._tokens);\n    }\n}\nexport { TokenArray, TokenArrayBuilder, TokenInfo };\n","import { TokenMetadata } from '../encodedTokenAttributes.js';\nimport { OffsetRange } from '../core/offsetRange.js';\nimport { TokenArrayBuilder } from './tokenArray.js';\nclass LineTokens {\n    static createEmpty(lineContent, decoder) {\n        const defaultMetadata = LineTokens.defaultTokenMetadata;\n        const tokens = ( new Uint32Array(2));\n        tokens[0] = lineContent.length;\n        tokens[1] = defaultMetadata;\n        return ( new LineTokens(tokens, lineContent, decoder));\n    }\n    static createFromTextAndMetadata(data, decoder) {\n        let offset = 0;\n        let fullText = '';\n        const tokens = ( new Array());\n        for (const { text, metadata } of data) {\n            tokens.push(offset + text.length, metadata);\n            offset += text.length;\n            fullText += text;\n        }\n        return ( new LineTokens(( new Uint32Array(tokens)), fullText, decoder));\n    }\n    static convertToEndOffset(tokens, lineTextLength) {\n        const tokenCount = (tokens.length >>> 1);\n        const lastTokenIndex = tokenCount - 1;\n        for (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n            tokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n        }\n        tokens[lastTokenIndex << 1] = lineTextLength;\n    }\n    static findIndexInTokensArray(tokens, desiredIndex) {\n        if (tokens.length <= 2) {\n            return 0;\n        }\n        let low = 0;\n        let high = (tokens.length >>> 1) - 1;\n        while (low < high) {\n            const mid = low + Math.floor((high - low) / 2);\n            const endOffset = tokens[(mid << 1)];\n            if (endOffset === desiredIndex) {\n                return mid + 1;\n            }\n            else if (endOffset < desiredIndex) {\n                low = mid + 1;\n            }\n            else if (endOffset > desiredIndex) {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    static { this.defaultTokenMetadata = (((0  << 11) )\n        | ((1  << 15) )\n        | ((2  << 24) )) >>> 0; }\n    constructor(tokens, text, decoder) {\n        this._lineTokensBrand = undefined;\n        this._tokens = tokens;\n        this._tokensCount = (this._tokens.length >>> 1);\n        this._text = text;\n        this.languageIdCodec = decoder;\n    }\n    equals(other) {\n        if (other instanceof LineTokens) {\n            return this.slicedEquals(other, 0, this._tokensCount);\n        }\n        return false;\n    }\n    slicedEquals(other, sliceFromTokenIndex, sliceTokenCount) {\n        if (this._text !== other._text) {\n            return false;\n        }\n        if (this._tokensCount !== other._tokensCount) {\n            return false;\n        }\n        const from = (sliceFromTokenIndex << 1);\n        const to = from + (sliceTokenCount << 1);\n        for (let i = from; i < to; i++) {\n            if (this._tokens[i] !== other._tokens[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getLineContent() {\n        return this._text;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getStartOffset(tokenIndex) {\n        if (tokenIndex > 0) {\n            return this._tokens[(tokenIndex - 1) << 1];\n        }\n        return 0;\n    }\n    getMetadata(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return metadata;\n    }\n    getLanguageId(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        const languageId = TokenMetadata.getLanguageId(metadata);\n        return this.languageIdCodec.decodeLanguageId(languageId);\n    }\n    getStandardTokenType(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getTokenType(metadata);\n    }\n    getForeground(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getForeground(metadata);\n    }\n    getClassName(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getClassNameFromMetadata(metadata);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getPresentationFromMetadata(metadata);\n    }\n    getEndOffset(tokenIndex) {\n        return this._tokens[tokenIndex << 1];\n    }\n    findTokenIndexAtOffset(offset) {\n        return LineTokens.findIndexInTokensArray(this._tokens, offset);\n    }\n    inflate() {\n        return this;\n    }\n    sliceAndInflate(startOffset, endOffset, deltaOffset) {\n        return ( new SliceLineTokens(this, startOffset, endOffset, deltaOffset));\n    }\n    withInserted(insertTokens) {\n        if (insertTokens.length === 0) {\n            return this;\n        }\n        let nextOriginalTokenIdx = 0;\n        let nextInsertTokenIdx = 0;\n        let text = '';\n        const newTokens = ( new Array());\n        let originalEndOffset = 0;\n        while (true) {\n            const nextOriginalTokenEndOffset = nextOriginalTokenIdx < this._tokensCount ? this._tokens[nextOriginalTokenIdx << 1] : -1;\n            const nextInsertToken = nextInsertTokenIdx < insertTokens.length ? insertTokens[nextInsertTokenIdx] : null;\n            if (nextOriginalTokenEndOffset !== -1 && (nextInsertToken === null || nextOriginalTokenEndOffset <= nextInsertToken.offset)) {\n                text += this._text.substring(originalEndOffset, nextOriginalTokenEndOffset);\n                const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                newTokens.push(text.length, metadata);\n                nextOriginalTokenIdx++;\n                originalEndOffset = nextOriginalTokenEndOffset;\n            }\n            else if (nextInsertToken) {\n                if (nextInsertToken.offset > originalEndOffset) {\n                    text += this._text.substring(originalEndOffset, nextInsertToken.offset);\n                    const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                    newTokens.push(text.length, metadata);\n                    originalEndOffset = nextInsertToken.offset;\n                }\n                text += nextInsertToken.text;\n                newTokens.push(text.length, nextInsertToken.tokenMetadata);\n                nextInsertTokenIdx++;\n            }\n            else {\n                break;\n            }\n        }\n        return ( new LineTokens(( new Uint32Array(newTokens)), text, this.languageIdCodec));\n    }\n    getTokensInRange(range) {\n        const builder = ( new TokenArrayBuilder());\n        const startTokenIndex = this.findTokenIndexAtOffset(range.start);\n        const endTokenIndex = this.findTokenIndexAtOffset(range.endExclusive);\n        for (let tokenIndex = startTokenIndex; tokenIndex <= endTokenIndex; tokenIndex++) {\n            const tokenRange = ( new OffsetRange(this.getStartOffset(tokenIndex), this.getEndOffset(tokenIndex)));\n            const length = tokenRange.intersectionLength(range);\n            if (length > 0) {\n                builder.add(length, this.getMetadata(tokenIndex));\n            }\n        }\n        return builder.build();\n    }\n    getTokenText(tokenIndex) {\n        const startOffset = this.getStartOffset(tokenIndex);\n        const endOffset = this.getEndOffset(tokenIndex);\n        const text = this._text.substring(startOffset, endOffset);\n        return text;\n    }\n    forEach(callback) {\n        const tokenCount = this.getCount();\n        for (let tokenIndex = 0; tokenIndex < tokenCount; tokenIndex++) {\n            callback(tokenIndex);\n        }\n    }\n}\nclass SliceLineTokens {\n    constructor(source, startOffset, endOffset, deltaOffset) {\n        this._source = source;\n        this._startOffset = startOffset;\n        this._endOffset = endOffset;\n        this._deltaOffset = deltaOffset;\n        this._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n        this.languageIdCodec = source.languageIdCodec;\n        this._tokensCount = 0;\n        for (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n            const tokenStartOffset = source.getStartOffset(i);\n            if (tokenStartOffset >= endOffset) {\n                break;\n            }\n            this._tokensCount++;\n        }\n    }\n    getMetadata(tokenIndex) {\n        return this._source.getMetadata(this._firstTokenIndex + tokenIndex);\n    }\n    getLanguageId(tokenIndex) {\n        return this._source.getLanguageId(this._firstTokenIndex + tokenIndex);\n    }\n    getLineContent() {\n        return this._source.getLineContent().substring(this._startOffset, this._endOffset);\n    }\n    equals(other) {\n        if (other instanceof SliceLineTokens) {\n            return (this._startOffset === other._startOffset\n                && this._endOffset === other._endOffset\n                && this._deltaOffset === other._deltaOffset\n                && this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount));\n        }\n        return false;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._source.getStandardTokenType(this._firstTokenIndex + tokenIndex);\n    }\n    getForeground(tokenIndex) {\n        return this._source.getForeground(this._firstTokenIndex + tokenIndex);\n    }\n    getEndOffset(tokenIndex) {\n        const tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n        return Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n    }\n    getClassName(tokenIndex) {\n        return this._source.getClassName(this._firstTokenIndex + tokenIndex);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        return this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        return this._source.getPresentation(this._firstTokenIndex + tokenIndex);\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n    }\n    getTokenText(tokenIndex) {\n        const adjustedTokenIndex = this._firstTokenIndex + tokenIndex;\n        const tokenStartOffset = this._source.getStartOffset(adjustedTokenIndex);\n        const tokenEndOffset = this._source.getEndOffset(adjustedTokenIndex);\n        let text = this._source.getTokenText(adjustedTokenIndex);\n        if (tokenStartOffset < this._startOffset) {\n            text = text.substring(this._startOffset - tokenStartOffset);\n        }\n        if (tokenEndOffset > this._endOffset) {\n            text = text.substring(0, text.length - (tokenEndOffset - this._endOffset));\n        }\n        return text;\n    }\n    forEach(callback) {\n        for (let tokenIndex = 0; tokenIndex < this.getCount(); tokenIndex++) {\n            callback(tokenIndex);\n        }\n    }\n}\nfunction getStandardTokenTypeAtPosition(model, position) {\n    const lineNumber = position.lineNumber;\n    if (!model.tokenization.isCheapToTokenize(lineNumber)) {\n        return undefined;\n    }\n    model.tokenization.forceTokenization(lineNumber);\n    const lineTokens = model.tokenization.getLineTokens(lineNumber);\n    const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n    const tokenType = lineTokens.getStandardTokenType(tokenIndex);\n    return tokenType;\n}\nexport { LineTokens, getStandardTokenTypeAtPosition };\n","import { LineTokens } from './lineTokens.js';\nconst EMPTY_LINE_TOKENS = (( new Uint32Array(0))).buffer;\nclass ContiguousTokensEditing {\n    static deleteBeginning(lineTokens, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        return ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n    }\n    static deleteEnding(lineTokens, fromChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const lineTextLength = tokens[tokens.length - 2];\n        return ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n    }\n    static delete(lineTokens, fromChIndex, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        if (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n            return EMPTY_LINE_TOKENS;\n        }\n        const fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n        const fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n        const fromTokenEndOffset = tokens[fromTokenIndex << 1];\n        if (toChIndex < fromTokenEndOffset) {\n            const delta = (toChIndex - fromChIndex);\n            for (let i = fromTokenIndex; i < tokensCount; i++) {\n                tokens[i << 1] -= delta;\n            }\n            return lineTokens;\n        }\n        let dest;\n        let lastEnd;\n        if (fromTokenStartOffset !== fromChIndex) {\n            tokens[fromTokenIndex << 1] = fromChIndex;\n            dest = ((fromTokenIndex + 1) << 1);\n            lastEnd = fromChIndex;\n        }\n        else {\n            dest = (fromTokenIndex << 1);\n            lastEnd = fromTokenStartOffset;\n        }\n        const delta = (toChIndex - fromChIndex);\n        for (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n            const tokenEndOffset = tokens[tokenIndex << 1] - delta;\n            if (tokenEndOffset > lastEnd) {\n                tokens[dest++] = tokenEndOffset;\n                tokens[dest++] = tokens[(tokenIndex << 1) + 1];\n                lastEnd = tokenEndOffset;\n            }\n        }\n        if (dest === tokens.length) {\n            return lineTokens;\n        }\n        const tmp = ( new Uint32Array(dest));\n        tmp.set(tokens.subarray(0, dest), 0);\n        return tmp.buffer;\n    }\n    static append(lineTokens, _otherTokens) {\n        if (_otherTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        if (lineTokens === EMPTY_LINE_TOKENS) {\n            return _otherTokens;\n        }\n        if (lineTokens === null) {\n            return lineTokens;\n        }\n        if (_otherTokens === null) {\n            return null;\n        }\n        const myTokens = toUint32Array(lineTokens);\n        const otherTokens = toUint32Array(_otherTokens);\n        const otherTokensCount = (otherTokens.length >>> 1);\n        const result = ( new Uint32Array(myTokens.length + otherTokens.length));\n        result.set(myTokens, 0);\n        let dest = myTokens.length;\n        const delta = myTokens[myTokens.length - 2];\n        for (let i = 0; i < otherTokensCount; i++) {\n            result[dest++] = otherTokens[(i << 1)] + delta;\n            result[dest++] = otherTokens[(i << 1) + 1];\n        }\n        return result.buffer;\n    }\n    static insert(lineTokens, chIndex, textLength) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        let fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n        if (fromTokenIndex > 0) {\n            const fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n            if (fromTokenStartOffset === chIndex) {\n                fromTokenIndex--;\n            }\n        }\n        for (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n            tokens[tokenIndex << 1] += textLength;\n        }\n        return lineTokens;\n    }\n}\nfunction toUint32Array(arr) {\n    if (arr instanceof Uint32Array) {\n        return arr;\n    }\n    else {\n        return ( new Uint32Array(arr));\n    }\n}\nexport { ContiguousTokensEditing, EMPTY_LINE_TOKENS, toUint32Array };\n","import { arrayInsert } from '../../../base/common/arrays.js';\nimport { writeUInt32BE, readUInt32BE } from '../../../base/common/buffer.js';\nimport { Position } from '../core/position.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { ContiguousTokensEditing } from './contiguousTokensEditing.js';\nimport { LineRange } from '../core/lineRange.js';\nclass ContiguousMultilineTokens {\n    static deserialize(buff, offset, result) {\n        const view32 = ( new Uint32Array(buff.buffer));\n        const startLineNumber = readUInt32BE(buff, offset);\n        offset += 4;\n        const count = readUInt32BE(buff, offset);\n        offset += 4;\n        const tokens = [];\n        for (let i = 0; i < count; i++) {\n            const byteCount = readUInt32BE(buff, offset);\n            offset += 4;\n            tokens.push(view32.subarray(offset / 4, offset / 4 + byteCount / 4));\n            offset += byteCount;\n        }\n        result.push(( new ContiguousMultilineTokens(startLineNumber, tokens)));\n        return offset;\n    }\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    get endLineNumber() {\n        return this._startLineNumber + this._tokens.length - 1;\n    }\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n    }\n    getLineRange() {\n        return ( new LineRange(this._startLineNumber, this._startLineNumber + this._tokens.length));\n    }\n    getLineTokens(lineNumber) {\n        return this._tokens[lineNumber - this._startLineNumber];\n    }\n    appendLineTokens(lineTokens) {\n        this._tokens.push(lineTokens);\n    }\n    serializeSize() {\n        let result = 0;\n        result += 4;\n        result += 4;\n        for (let i = 0; i < this._tokens.length; i++) {\n            const lineTokens = this._tokens[i];\n            if (!(lineTokens instanceof Uint32Array)) {\n                throw ( new Error(`Not supported!`));\n            }\n            result += 4;\n            result += lineTokens.byteLength;\n        }\n        return result;\n    }\n    serialize(destination, offset) {\n        writeUInt32BE(destination, this._startLineNumber, offset);\n        offset += 4;\n        writeUInt32BE(destination, this._tokens.length, offset);\n        offset += 4;\n        for (let i = 0; i < this._tokens.length; i++) {\n            const lineTokens = this._tokens[i];\n            if (!(lineTokens instanceof Uint32Array)) {\n                throw ( new Error(`Not supported!`));\n            }\n            writeUInt32BE(destination, lineTokens.byteLength, offset);\n            offset += 4;\n            destination.set(( new Uint8Array(lineTokens.buffer)), offset);\n            offset += lineTokens.byteLength;\n        }\n        return offset;\n    }\n    applyEdit(range, text) {\n        const [eolCount, firstLineLength] = countEOL(text);\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(( new Position(range.startLineNumber, range.startColumn)), eolCount, firstLineLength);\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n            return;\n        }\n        const firstLineIndex = range.startLineNumber - this._startLineNumber;\n        const lastLineIndex = range.endLineNumber - this._startLineNumber;\n        if (lastLineIndex < 0) {\n            const deletedLinesCount = lastLineIndex - firstLineIndex;\n            this._startLineNumber -= deletedLinesCount;\n            return;\n        }\n        if (firstLineIndex >= this._tokens.length) {\n            return;\n        }\n        if (firstLineIndex < 0 && lastLineIndex >= this._tokens.length) {\n            this._startLineNumber = 0;\n            this._tokens = [];\n            return;\n        }\n        if (firstLineIndex === lastLineIndex) {\n            this._tokens[firstLineIndex] = ContiguousTokensEditing.delete(this._tokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n            return;\n        }\n        if (firstLineIndex >= 0) {\n            this._tokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[firstLineIndex], range.startColumn - 1);\n            if (lastLineIndex < this._tokens.length) {\n                const lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n                this._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], lastLineTokens);\n                this._tokens.splice(firstLineIndex + 1, lastLineIndex - firstLineIndex);\n            }\n            else {\n                this._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], null);\n                this._tokens = this._tokens.slice(0, firstLineIndex + 1);\n            }\n        }\n        else {\n            const deletedBefore = -firstLineIndex;\n            this._startLineNumber -= deletedBefore;\n            this._tokens[lastLineIndex] = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n            this._tokens = this._tokens.slice(lastLineIndex);\n        }\n    }\n    _acceptInsertText(position, eolCount, firstLineLength) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            return;\n        }\n        const lineIndex = position.lineNumber - this._startLineNumber;\n        if (lineIndex < 0) {\n            this._startLineNumber += eolCount;\n            return;\n        }\n        if (lineIndex >= this._tokens.length) {\n            return;\n        }\n        if (eolCount === 0) {\n            this._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n            return;\n        }\n        this._tokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[lineIndex], position.column - 1);\n        this._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n        this._insertLines(position.lineNumber, eolCount);\n    }\n    _insertLines(insertIndex, insertCount) {\n        if (insertCount === 0) {\n            return;\n        }\n        const lineTokens = [];\n        for (let i = 0; i < insertCount; i++) {\n            lineTokens[i] = null;\n        }\n        this._tokens = arrayInsert(this._tokens, insertIndex, lineTokens);\n    }\n}\nexport { ContiguousMultilineTokens };\n","import { writeUInt32BE, readUInt32BE } from '../../../base/common/buffer.js';\nimport { ContiguousMultilineTokens } from './contiguousMultilineTokens.js';\nclass ContiguousMultilineTokensBuilder {\n    static deserialize(buff) {\n        let offset = 0;\n        const count = readUInt32BE(buff, offset);\n        offset += 4;\n        const result = [];\n        for (let i = 0; i < count; i++) {\n            offset = ContiguousMultilineTokens.deserialize(buff, offset, result);\n        }\n        return result;\n    }\n    constructor() {\n        this._tokens = [];\n    }\n    add(lineNumber, lineTokens) {\n        if (this._tokens.length > 0) {\n            const last = this._tokens[this._tokens.length - 1];\n            if (last.endLineNumber + 1 === lineNumber) {\n                last.appendLineTokens(lineTokens);\n                return;\n            }\n        }\n        this._tokens.push(( new ContiguousMultilineTokens(lineNumber, [lineTokens])));\n    }\n    finalize() {\n        return this._tokens;\n    }\n    serialize() {\n        const size = this._serializeSize();\n        const result = ( new Uint8Array(size));\n        this._serialize(result);\n        return result;\n    }\n    _serializeSize() {\n        let result = 0;\n        result += 4;\n        for (let i = 0; i < this._tokens.length; i++) {\n            result += this._tokens[i].serializeSize();\n        }\n        return result;\n    }\n    _serialize(destination) {\n        let offset = 0;\n        writeUInt32BE(destination, this._tokens.length, offset);\n        offset += 4;\n        for (let i = 0; i < this._tokens.length; i++) {\n            offset = this._tokens[i].serialize(destination, offset);\n        }\n    }\n}\nexport { ContiguousMultilineTokensBuilder };\n","import { runWhenGlobalIdle } from '../../../base/common/async.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../base/common/errors.js';\nimport { setTimeout0 } from '../../../base/common/platform.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { OffsetRange } from '../core/offsetRange.js';\nimport { nullTokenizeEncoded } from '../languages/nullTokenize.js';\nimport { FixedArray } from './fixedArray.js';\nimport { ContiguousMultilineTokensBuilder } from '../tokens/contiguousMultilineTokensBuilder.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\nclass TokenizerWithStateStore {\n    constructor(lineCount, tokenizationSupport) {\n        this.tokenizationSupport = tokenizationSupport;\n        this.initialState = this.tokenizationSupport.getInitialState();\n        this.store = ( new TrackingTokenizationStateStore(lineCount));\n    }\n    getStartState(lineNumber) {\n        return this.store.getStartState(lineNumber, this.initialState);\n    }\n    getFirstInvalidLine() {\n        return this.store.getFirstInvalidLine(this.initialState);\n    }\n}\nclass TokenizerWithStateStoreAndTextModel extends TokenizerWithStateStore {\n    constructor(lineCount, tokenizationSupport, _textModel, _languageIdCodec) {\n        super(lineCount, tokenizationSupport);\n        this._textModel = _textModel;\n        this._languageIdCodec = _languageIdCodec;\n    }\n    updateTokensUntilLine(builder, lineNumber) {\n        const languageId = this._textModel.getLanguageId();\n        while (true) {\n            const lineToTokenize = this.getFirstInvalidLine();\n            if (!lineToTokenize || lineToTokenize.lineNumber > lineNumber) {\n                break;\n            }\n            const text = this._textModel.getLineContent(lineToTokenize.lineNumber);\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineToTokenize.startState);\n            builder.add(lineToTokenize.lineNumber, r.tokens);\n            this.store.setEndState(lineToTokenize.lineNumber, r.endState);\n        }\n    }\n    getTokenTypeIfInsertingCharacter(position, character) {\n        const lineStartState = this.getStartState(position.lineNumber);\n        if (!lineStartState) {\n            return 0 ;\n        }\n        const languageId = this._textModel.getLanguageId();\n        const lineContent = this._textModel.getLineContent(position.lineNumber);\n        const text = (lineContent.substring(0, position.column - 1)\n            + character\n            + lineContent.substring(position.column - 1));\n        const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, lineStartState);\n        const lineTokens = ( new LineTokens(r.tokens, text, this._languageIdCodec));\n        if (lineTokens.getCount() === 0) {\n            return 0 ;\n        }\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        return lineTokens.getStandardTokenType(tokenIndex);\n    }\n    tokenizeLineWithEdit(lineNumber, edit) {\n        const lineStartState = this.getStartState(lineNumber);\n        if (!lineStartState) {\n            return { mainLineTokens: null, additionalLines: null };\n        }\n        const curLineContent = this._textModel.getLineContent(lineNumber);\n        const newLineContent = edit.lineEdit.apply(curLineContent);\n        const languageId = this._textModel.getLanguageIdAtPosition(lineNumber, 0);\n        const result = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, newLineContent, true, lineStartState);\n        let additionalLines = null;\n        if (edit.additionalLines) {\n            additionalLines = [];\n            let state = result.endState;\n            for (const line of edit.additionalLines) {\n                const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, true, state);\n                additionalLines.push(( new LineTokens(r.tokens, line, this._languageIdCodec)));\n                state = r.endState;\n            }\n        }\n        const mainLineTokens = ( new LineTokens(result.tokens, newLineContent, this._languageIdCodec));\n        return { mainLineTokens, additionalLines };\n    }\n    hasAccurateTokensForLine(lineNumber) {\n        const firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n        return (lineNumber < firstInvalidLineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        const firstInvalidLineNumber = this.store.getFirstInvalidEndStateLineNumberOrMax();\n        if (lineNumber < firstInvalidLineNumber) {\n            return true;\n        }\n        if (lineNumber === firstInvalidLineNumber\n            && this._textModel.getLineLength(lineNumber) < 2048 ) {\n            return true;\n        }\n        return false;\n    }\n    tokenizeHeuristically(builder, startLineNumber, endLineNumber) {\n        if (endLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n            return { heuristicTokens: false };\n        }\n        if (startLineNumber <= this.store.getFirstInvalidEndStateLineNumberOrMax()) {\n            this.updateTokensUntilLine(builder, endLineNumber);\n            return { heuristicTokens: false };\n        }\n        let state = this.guessStartState(startLineNumber);\n        const languageId = this._textModel.getLanguageId();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const text = this._textModel.getLineContent(lineNumber);\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, text, true, state);\n            builder.add(lineNumber, r.tokens);\n            state = r.endState;\n        }\n        return { heuristicTokens: true };\n    }\n    guessStartState(lineNumber) {\n        let nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(lineNumber);\n        const likelyRelevantLines = [];\n        let initialState = null;\n        for (let i = lineNumber - 1; nonWhitespaceColumn > 1 && i >= 1; i--) {\n            const newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n            if (newNonWhitespaceIndex === 0) {\n                continue;\n            }\n            if (newNonWhitespaceIndex < nonWhitespaceColumn) {\n                likelyRelevantLines.push(this._textModel.getLineContent(i));\n                nonWhitespaceColumn = newNonWhitespaceIndex;\n                initialState = this.getStartState(i);\n                if (initialState) {\n                    break;\n                }\n            }\n        }\n        if (!initialState) {\n            initialState = this.tokenizationSupport.getInitialState();\n        }\n        likelyRelevantLines.reverse();\n        const languageId = this._textModel.getLanguageId();\n        let state = initialState;\n        for (const line of likelyRelevantLines) {\n            const r = safeTokenize(this._languageIdCodec, languageId, this.tokenizationSupport, line, false, state);\n            state = r.endState;\n        }\n        return state;\n    }\n}\nclass TrackingTokenizationStateStore {\n    constructor(lineCount) {\n        this.lineCount = lineCount;\n        this._tokenizationStateStore = ( new TokenizationStateStore());\n        this._invalidEndStatesLineNumbers = ( new RangePriorityQueueImpl());\n        this._invalidEndStatesLineNumbers.addRange(( new OffsetRange(1, lineCount + 1)));\n    }\n    getEndState(lineNumber) {\n        return this._tokenizationStateStore.getEndState(lineNumber);\n    }\n    setEndState(lineNumber, state) {\n        if (!state) {\n            throw ( new BugIndicatingError('Cannot set null/undefined state'));\n        }\n        this._invalidEndStatesLineNumbers.delete(lineNumber);\n        const r = this._tokenizationStateStore.setEndState(lineNumber, state);\n        if (r && lineNumber < this.lineCount) {\n            this._invalidEndStatesLineNumbers.addRange(( new OffsetRange(lineNumber + 1, lineNumber + 2)));\n        }\n        return r;\n    }\n    acceptChange(range, newLineCount) {\n        this.lineCount += newLineCount - range.length;\n        this._tokenizationStateStore.acceptChange(range, newLineCount);\n        this._invalidEndStatesLineNumbers.addRangeAndResize(( new OffsetRange(range.startLineNumber, range.endLineNumberExclusive)), newLineCount);\n    }\n    acceptChanges(changes) {\n        for (const c of changes) {\n            const [eolCount] = countEOL(c.text);\n            this.acceptChange(( new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1)), eolCount + 1);\n        }\n    }\n    invalidateEndStateRange(range) {\n        this._invalidEndStatesLineNumbers.addRange(( new OffsetRange(range.startLineNumber, range.endLineNumberExclusive)));\n    }\n    getFirstInvalidEndStateLineNumber() { return this._invalidEndStatesLineNumbers.min; }\n    getFirstInvalidEndStateLineNumberOrMax() {\n        return this.getFirstInvalidEndStateLineNumber() || Number.MAX_SAFE_INTEGER;\n    }\n    allStatesValid() { return this._invalidEndStatesLineNumbers.min === null; }\n    getStartState(lineNumber, initialState) {\n        if (lineNumber === 1) {\n            return initialState;\n        }\n        return this.getEndState(lineNumber - 1);\n    }\n    getFirstInvalidLine(initialState) {\n        const lineNumber = this.getFirstInvalidEndStateLineNumber();\n        if (lineNumber === null) {\n            return null;\n        }\n        const startState = this.getStartState(lineNumber, initialState);\n        if (!startState) {\n            throw ( new BugIndicatingError('Start state must be defined'));\n        }\n        return { lineNumber, startState };\n    }\n}\nclass TokenizationStateStore {\n    constructor() {\n        this._lineEndStates = ( new FixedArray(null));\n    }\n    getEndState(lineNumber) {\n        return this._lineEndStates.get(lineNumber);\n    }\n    setEndState(lineNumber, state) {\n        const oldState = this._lineEndStates.get(lineNumber);\n        if (oldState && oldState.equals(state)) {\n            return false;\n        }\n        this._lineEndStates.set(lineNumber, state);\n        return true;\n    }\n    acceptChange(range, newLineCount) {\n        let length = range.length;\n        if (newLineCount > 0 && length > 0) {\n            length--;\n            newLineCount--;\n        }\n        this._lineEndStates.replace(range.startLineNumber, length, newLineCount);\n    }\n    acceptChanges(changes) {\n        for (const c of changes) {\n            const [eolCount] = countEOL(c.text);\n            this.acceptChange(( new LineRange(c.range.startLineNumber, c.range.endLineNumber + 1)), eolCount + 1);\n        }\n    }\n}\nclass RangePriorityQueueImpl {\n    constructor() {\n        this._ranges = [];\n    }\n    getRanges() {\n        return this._ranges;\n    }\n    get min() {\n        if (this._ranges.length === 0) {\n            return null;\n        }\n        return this._ranges[0].start;\n    }\n    removeMin() {\n        if (this._ranges.length === 0) {\n            return null;\n        }\n        const range = this._ranges[0];\n        if (range.start + 1 === range.endExclusive) {\n            this._ranges.shift();\n        }\n        else {\n            this._ranges[0] = ( new OffsetRange(range.start + 1, range.endExclusive));\n        }\n        return range.start;\n    }\n    delete(value) {\n        const idx = this._ranges.findIndex(r => r.contains(value));\n        if (idx !== -1) {\n            const range = this._ranges[idx];\n            if (range.start === value) {\n                if (range.endExclusive === value + 1) {\n                    this._ranges.splice(idx, 1);\n                }\n                else {\n                    this._ranges[idx] = ( new OffsetRange(value + 1, range.endExclusive));\n                }\n            }\n            else {\n                if (range.endExclusive === value + 1) {\n                    this._ranges[idx] = ( new OffsetRange(range.start, value));\n                }\n                else {\n                    this._ranges.splice(idx, 1, ( new OffsetRange(range.start, value)), ( new OffsetRange(value + 1, range.endExclusive)));\n                }\n            }\n        }\n    }\n    addRange(range) {\n        OffsetRange.addRange(range, this._ranges);\n    }\n    addRangeAndResize(range, newLength) {\n        let idxFirstMightBeIntersecting = 0;\n        while (!(idxFirstMightBeIntersecting >= this._ranges.length || range.start <= this._ranges[idxFirstMightBeIntersecting].endExclusive)) {\n            idxFirstMightBeIntersecting++;\n        }\n        let idxFirstIsAfter = idxFirstMightBeIntersecting;\n        while (!(idxFirstIsAfter >= this._ranges.length || range.endExclusive < this._ranges[idxFirstIsAfter].start)) {\n            idxFirstIsAfter++;\n        }\n        const delta = newLength - range.length;\n        for (let i = idxFirstIsAfter; i < this._ranges.length; i++) {\n            this._ranges[i] = this._ranges[i].delta(delta);\n        }\n        if (idxFirstMightBeIntersecting === idxFirstIsAfter) {\n            const newRange = ( new OffsetRange(range.start, range.start + newLength));\n            if (!newRange.isEmpty) {\n                this._ranges.splice(idxFirstMightBeIntersecting, 0, newRange);\n            }\n        }\n        else {\n            const start = Math.min(range.start, this._ranges[idxFirstMightBeIntersecting].start);\n            const endEx = Math.max(range.endExclusive, this._ranges[idxFirstIsAfter - 1].endExclusive);\n            const newRange = ( new OffsetRange(start, endEx + delta));\n            if (!newRange.isEmpty) {\n                this._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting, newRange);\n            }\n            else {\n                this._ranges.splice(idxFirstMightBeIntersecting, idxFirstIsAfter - idxFirstMightBeIntersecting);\n            }\n        }\n    }\n    toString() {\n        return ( this._ranges.map(r => ( r.toString()))).join(' + ');\n    }\n}\nfunction safeTokenize(languageIdCodec, languageId, tokenizationSupport, text, hasEOL, state) {\n    let r = null;\n    if (tokenizationSupport) {\n        try {\n            r = tokenizationSupport.tokenizeEncoded(text, hasEOL, state.clone());\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    if (!r) {\n        r = nullTokenizeEncoded(languageIdCodec.encodeLanguageId(languageId), state);\n    }\n    LineTokens.convertToEndOffset(r.tokens, text.length);\n    return r;\n}\nclass DefaultBackgroundTokenizer {\n    constructor(_tokenizerWithStateStore, _backgroundTokenStore) {\n        this._tokenizerWithStateStore = _tokenizerWithStateStore;\n        this._backgroundTokenStore = _backgroundTokenStore;\n        this._isDisposed = false;\n        this._isScheduled = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n    }\n    handleChanges() {\n        this._beginBackgroundTokenization();\n    }\n    _beginBackgroundTokenization() {\n        if (this._isScheduled || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n            return;\n        }\n        this._isScheduled = true;\n        runWhenGlobalIdle((deadline) => {\n            this._isScheduled = false;\n            this._backgroundTokenizeWithDeadline(deadline);\n        });\n    }\n    _backgroundTokenizeWithDeadline(deadline) {\n        const endTime = Date.now() + deadline.timeRemaining();\n        const execute = () => {\n            if (this._isDisposed || !this._tokenizerWithStateStore._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n                return;\n            }\n            this._backgroundTokenizeForAtLeast1ms();\n            if (Date.now() < endTime) {\n                setTimeout0(execute);\n            }\n            else {\n                this._beginBackgroundTokenization();\n            }\n        };\n        execute();\n    }\n    _backgroundTokenizeForAtLeast1ms() {\n        const lineCount = this._tokenizerWithStateStore._textModel.getLineCount();\n        const builder = ( new ContiguousMultilineTokensBuilder());\n        const sw = StopWatch.create(false);\n        do {\n            if (sw.elapsed() > 1) {\n                break;\n            }\n            const tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n            if (tokenizedLineNumber >= lineCount) {\n                break;\n            }\n        } while (this._hasLinesToTokenize());\n        this._backgroundTokenStore.setTokens(builder.finalize());\n        this.checkFinished();\n    }\n    _hasLinesToTokenize() {\n        if (!this._tokenizerWithStateStore) {\n            return false;\n        }\n        return !this._tokenizerWithStateStore.store.allStatesValid();\n    }\n    _tokenizeOneInvalidLine(builder) {\n        const firstInvalidLine = this._tokenizerWithStateStore?.getFirstInvalidLine();\n        if (!firstInvalidLine) {\n            return this._tokenizerWithStateStore._textModel.getLineCount() + 1;\n        }\n        this._tokenizerWithStateStore.updateTokensUntilLine(builder, firstInvalidLine.lineNumber);\n        return firstInvalidLine.lineNumber;\n    }\n    checkFinished() {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this._tokenizerWithStateStore.store.allStatesValid()) {\n            this._backgroundTokenStore.backgroundTokenizationFinished();\n        }\n    }\n    requestTokens(startLineNumber, endLineNumberExclusive) {\n        this._tokenizerWithStateStore.store.invalidateEndStateRange(( new LineRange(startLineNumber, endLineNumberExclusive)));\n    }\n}\nexport { DefaultBackgroundTokenizer, RangePriorityQueueImpl, TokenizationStateStore, TokenizerWithStateStore, TokenizerWithStateStoreAndTextModel, TrackingTokenizationStateStore };\n","import { Emitter } from 'vscode/vscode/vs/base/common/event';\nimport { Disposable } from 'vscode/vscode/vs/base/common/lifecycle';\nimport { StopWatch } from 'vscode/vscode/vs/base/common/stopwatch';\nimport { TokenMetadata } from 'vscode/vscode/vs/editor/common/encodedTokenAttributes';\nimport { EncodedTokenizationResult } from 'vscode/vscode/vs/editor/common/languages';\n\nclass TextMateTokenizationSupport extends Disposable {\n    constructor(_grammar, _initialState, _containsEmbeddedLanguages, _createBackgroundTokenizer, _backgroundTokenizerShouldOnlyVerifyTokens, _reportTokenizationTime, _reportSlowTokenization) {\n        super();\n        this._grammar = _grammar;\n        this._initialState = _initialState;\n        this._containsEmbeddedLanguages = _containsEmbeddedLanguages;\n        this._createBackgroundTokenizer = _createBackgroundTokenizer;\n        this._backgroundTokenizerShouldOnlyVerifyTokens = _backgroundTokenizerShouldOnlyVerifyTokens;\n        this._reportTokenizationTime = _reportTokenizationTime;\n        this._reportSlowTokenization = _reportSlowTokenization;\n        this._seenLanguages = [];\n        this._onDidEncounterLanguage = this._register(( new Emitter()));\n        this.onDidEncounterLanguage = this._onDidEncounterLanguage.event;\n    }\n    get backgroundTokenizerShouldOnlyVerifyTokens() {\n        return this._backgroundTokenizerShouldOnlyVerifyTokens();\n    }\n    getInitialState() {\n        return this._initialState;\n    }\n    tokenize(line, hasEOL, state) {\n        throw ( new Error('Not supported!'));\n    }\n    createBackgroundTokenizer(textModel, store) {\n        if (this._createBackgroundTokenizer) {\n            return this._createBackgroundTokenizer(textModel, store);\n        }\n        return undefined;\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const isRandomSample = Math.random() * 10_000 < 1;\n        const shouldMeasure = this._reportSlowTokenization || isRandomSample;\n        const sw = shouldMeasure ? ( new StopWatch(true)) : undefined;\n        const textMateResult = this._grammar.tokenizeLine2(line, state, 500);\n        if (shouldMeasure) {\n            const timeMS = sw.elapsed();\n            if (isRandomSample || timeMS > 32) {\n                this._reportTokenizationTime(timeMS, line.length, isRandomSample);\n            }\n        }\n        if (textMateResult.stoppedEarly) {\n            console.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);\n            return ( new EncodedTokenizationResult(textMateResult.tokens, state));\n        }\n        if (this._containsEmbeddedLanguages) {\n            const seenLanguages = this._seenLanguages;\n            const tokens = textMateResult.tokens;\n            for (let i = 0, len = (tokens.length >>> 1); i < len; i++) {\n                const metadata = tokens[(i << 1) + 1];\n                const languageId = TokenMetadata.getLanguageId(metadata);\n                if (!seenLanguages[languageId]) {\n                    seenLanguages[languageId] = true;\n                    this._onDidEncounterLanguage.fire(languageId);\n                }\n            }\n        }\n        let endState;\n        if (state.equals(textMateResult.ruleStack)) {\n            endState = state;\n        }\n        else {\n            endState = textMateResult.ruleStack;\n        }\n        return ( new EncodedTokenizationResult(textMateResult.tokens, endState));\n    }\n}\n\nexport { TextMateTokenizationSupport };\n","import { nullTokenizeEncoded } from 'vscode/vscode/vs/editor/common/languages/nullTokenize';\nimport { Disposable } from 'vscode/vscode/vs/base/common/lifecycle';\nimport 'vscode/vscode/vs/base/common/arrays';\nimport 'vscode/vscode/vs/base/common/event';\nimport 'vscode/vscode/vs/base/common/observableInternal/autorun';\nimport 'vscode/vscode/vs/base/common/observableInternal/derived';\nimport 'vscode/vscode/vs/base/common/cancellation';\nimport { keepObserved } from 'vscode/vscode/vs/base/common/observableInternal/utils';\n\nclass TokenizationSupportWithLineLimit extends Disposable {\n    get backgroundTokenizerShouldOnlyVerifyTokens() {\n        return this._actual.backgroundTokenizerShouldOnlyVerifyTokens;\n    }\n    constructor(_encodedLanguageId, _actual, disposable, _maxTokenizationLineLength) {\n        super();\n        this._encodedLanguageId = _encodedLanguageId;\n        this._actual = _actual;\n        this._maxTokenizationLineLength = _maxTokenizationLineLength;\n        this._register(keepObserved(this._maxTokenizationLineLength));\n        this._register(disposable);\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    tokenize(line, hasEOL, state) {\n        throw ( new Error('Not supported!'));\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        if (line.length >= this._maxTokenizationLineLength.get()) {\n            return nullTokenizeEncoded(this._encodedLanguageId, state);\n        }\n        return this._actual.tokenizeEncoded(line, hasEOL, state);\n    }\n    createBackgroundTokenizer(textModel, store) {\n        if (this._actual.createBackgroundTokenizer) {\n            return this._actual.createBackgroundTokenizer(textModel, store);\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n\nexport { TokenizationSupportWithLineLimit };\n","import { RunOnceScheduler } from 'vscode/vscode/vs/base/common/async';\nimport { observableValue } from 'vscode/vscode/vs/base/common/observableInternal/base';\nimport 'vscode/vscode/vs/base/common/arrays';\nimport 'vscode/vscode/vs/base/common/event';\nimport { Disposable } from 'vscode/vscode/vs/base/common/lifecycle';\nimport 'vscode/vscode/vs/base/common/observableInternal/autorun';\nimport 'vscode/vscode/vs/base/common/observableInternal/derived';\nimport 'vscode/vscode/vs/base/common/cancellation';\nimport 'vscode/vscode/vs/base/common/observableInternal/utils';\nimport { setTimeout0 } from 'vscode/vscode/vs/base/common/platform';\nimport { LineRange } from 'vscode/vscode/vs/editor/common/core/lineRange';\nimport { MirrorTextModel } from 'vscode/vscode/vs/editor/common/model/mirrorTextModel';\nimport { TokenizerWithStateStore } from 'vscode/vscode/vs/editor/common/model/textModelTokens';\nimport { ContiguousMultilineTokensBuilder } from 'vscode/vscode/vs/editor/common/tokens/contiguousMultilineTokensBuilder';\nimport { LineTokens } from 'vscode/vscode/vs/editor/common/tokens/lineTokens';\nimport { TextMateTokenizationSupport } from '../../tokenizationSupport/textMateTokenizationSupport.js';\nimport { TokenizationSupportWithLineLimit } from '../../tokenizationSupport/tokenizationSupportWithLineLimit.js';\n\nclass TextMateWorkerTokenizer extends MirrorTextModel {\n    constructor(uri, lines, eol, versionId, _host, _languageId, _encodedLanguageId, maxTokenizationLineLength) {\n        super(uri, lines, eol, versionId);\n        this._host = _host;\n        this._languageId = _languageId;\n        this._encodedLanguageId = _encodedLanguageId;\n        this._tokenizerWithStateStore = null;\n        this._isDisposed = false;\n        this._maxTokenizationLineLength = observableValue(this, -1);\n        this._tokenizeDebouncer = ( new RunOnceScheduler(() => this._tokenize(), 10));\n        this._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n        this._resetTokenization();\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    onLanguageId(languageId, encodedLanguageId) {\n        this._languageId = languageId;\n        this._encodedLanguageId = encodedLanguageId;\n        this._resetTokenization();\n    }\n    onEvents(e) {\n        super.onEvents(e);\n        this._tokenizerWithStateStore?.store.acceptChanges(e.changes);\n        this._tokenizeDebouncer.schedule();\n    }\n    acceptMaxTokenizationLineLength(maxTokenizationLineLength) {\n        this._maxTokenizationLineLength.set(maxTokenizationLineLength, undefined);\n    }\n    retokenize(startLineNumber, endLineNumberExclusive) {\n        if (this._tokenizerWithStateStore) {\n            this._tokenizerWithStateStore.store.invalidateEndStateRange(( new LineRange(startLineNumber, endLineNumberExclusive)));\n            this._tokenizeDebouncer.schedule();\n        }\n    }\n    async _resetTokenization() {\n        this._tokenizerWithStateStore = null;\n        const languageId = this._languageId;\n        const encodedLanguageId = this._encodedLanguageId;\n        const r = await this._host.getOrCreateGrammar(languageId, encodedLanguageId);\n        if (this._isDisposed || languageId !== this._languageId || encodedLanguageId !== this._encodedLanguageId || !r) {\n            return;\n        }\n        if (r.grammar) {\n            const tokenizationSupport = ( new TokenizationSupportWithLineLimit(this._encodedLanguageId, ( new TextMateTokenizationSupport(\n                r.grammar,\n                r.initialState,\n                false,\n                undefined,\n                () => false,\n                (timeMs, lineLength, isRandomSample) => {\n                    this._host.reportTokenizationTime(timeMs, languageId, r.sourceExtensionId, lineLength, isRandomSample);\n                },\n                false\n            )), Disposable.None, this._maxTokenizationLineLength));\n            this._tokenizerWithStateStore = ( new TokenizerWithStateStore(this._lines.length, tokenizationSupport));\n        }\n        else {\n            this._tokenizerWithStateStore = null;\n        }\n        this._tokenize();\n    }\n    async _tokenize() {\n        if (this._isDisposed || !this._tokenizerWithStateStore) {\n            return;\n        }\n        if (!this._diffStateStacksRefEqFn) {\n            const { diffStateStacksRefEq } = await import('vscode-textmate').then(module => module.default ?? module);\n            this._diffStateStacksRefEqFn = diffStateStacksRefEq;\n        }\n        const startTime = ( new Date()).getTime();\n        while (true) {\n            let tokenizedLines = 0;\n            const tokenBuilder = ( new ContiguousMultilineTokensBuilder());\n            const stateDeltaBuilder = ( new StateDeltaBuilder());\n            while (true) {\n                const lineToTokenize = this._tokenizerWithStateStore.getFirstInvalidLine();\n                if (lineToTokenize === null || tokenizedLines > 200) {\n                    break;\n                }\n                tokenizedLines++;\n                const text = this._lines[lineToTokenize.lineNumber - 1];\n                const r = this._tokenizerWithStateStore.tokenizationSupport.tokenizeEncoded(text, true, lineToTokenize.startState);\n                if (this._tokenizerWithStateStore.store.setEndState(lineToTokenize.lineNumber, r.endState)) {\n                    const delta = this._diffStateStacksRefEqFn(lineToTokenize.startState, r.endState);\n                    stateDeltaBuilder.setState(lineToTokenize.lineNumber, delta);\n                }\n                else {\n                    stateDeltaBuilder.setState(lineToTokenize.lineNumber, null);\n                }\n                LineTokens.convertToEndOffset(r.tokens, text.length);\n                tokenBuilder.add(lineToTokenize.lineNumber, r.tokens);\n                const deltaMs = ( new Date()).getTime() - startTime;\n                if (deltaMs > 20) {\n                    break;\n                }\n            }\n            if (tokenizedLines === 0) {\n                break;\n            }\n            const stateDeltas = stateDeltaBuilder.getStateDeltas();\n            this._host.setTokensAndStates(this._versionId, tokenBuilder.serialize(), stateDeltas);\n            const deltaMs = ( new Date()).getTime() - startTime;\n            if (deltaMs > 20) {\n                setTimeout0(() => this._tokenize());\n                return;\n            }\n        }\n    }\n}\nclass StateDeltaBuilder {\n    constructor() {\n        this._lastStartLineNumber = -1;\n        this._stateDeltas = [];\n    }\n    setState(lineNumber, stackDiff) {\n        if (lineNumber === this._lastStartLineNumber + 1) {\n            this._stateDeltas[this._stateDeltas.length - 1].stateDeltas.push(stackDiff);\n        }\n        else {\n            this._stateDeltas.push({ startLineNumber: lineNumber, stateDeltas: [stackDiff] });\n        }\n        this._lastStartLineNumber = lineNumber;\n    }\n    getStateDeltas() {\n        return this._stateDeltas;\n    }\n}\n\nexport { TextMateWorkerTokenizer };\n","class TextMateWorkerHost {\n    static { this.CHANNEL_NAME = 'textMateWorkerHost'; }\n    static getChannel(workerServer) {\n        return workerServer.getChannel(TextMateWorkerHost.CHANNEL_NAME);\n    }\n    static setChannel(workerClient, obj) {\n        workerClient.setChannel(TextMateWorkerHost.CHANNEL_NAME, obj);\n    }\n}\n\nexport { TextMateWorkerHost };\n","import { URI } from 'vscode/vscode/vs/base/common/uri';\nimport { TMGrammarFactory } from '../../../common/TMGrammarFactory.js';\nimport { TextMateWorkerTokenizer } from './textMateWorkerTokenizer.js';\nimport { TextMateWorkerHost } from './textMateWorkerHost.js';\n\nfunction create(workerServer) {\n    return ( new TextMateTokenizationWorker(workerServer));\n}\nclass TextMateTokenizationWorker {\n    constructor(workerServer) {\n        this._models = ( new Map());\n        this._grammarCache = [];\n        this._grammarFactory = Promise.resolve(null);\n        this._host = TextMateWorkerHost.getChannel(workerServer);\n    }\n    async $init(_createData) {\n        const grammarDefinitions = ( _createData.grammarDefinitions.map((def) => {\n            return {\n                location: URI.revive(def.location),\n                language: def.language,\n                scopeName: def.scopeName,\n                embeddedLanguages: def.embeddedLanguages,\n                tokenTypes: def.tokenTypes,\n                injectTo: def.injectTo,\n                balancedBracketSelectors: def.balancedBracketSelectors,\n                unbalancedBracketSelectors: def.unbalancedBracketSelectors,\n                sourceExtensionId: def.sourceExtensionId,\n            };\n        }));\n        this._grammarFactory = this._loadTMGrammarFactory(grammarDefinitions, _createData.onigurumaWASMUri);\n    }\n    async _loadTMGrammarFactory(grammarDefinitions, onigurumaWASMUri) {\n        const vscodeTextmate = await import('vscode-textmate').then(module => module.default ?? module);\n        const vscodeOniguruma = await import('vscode-oniguruma').then(module => module.default ?? module);\n        const response = await fetch(onigurumaWASMUri);\n        const bytes = await response.arrayBuffer();\n        await vscodeOniguruma.loadWASM(bytes);\n        const onigLib = Promise.resolve({\n            createOnigScanner: (sources) => vscodeOniguruma.createOnigScanner(sources),\n            createOnigString: (str) => vscodeOniguruma.createOnigString(str)\n        });\n        return ( new TMGrammarFactory({\n            logTrace: (msg) => { },\n            logError: (msg, err) => console.error(msg, err),\n            readFile: (resource) => this._host.$readFile(resource)\n        }, grammarDefinitions, vscodeTextmate, onigLib));\n    }\n    $acceptNewModel(data) {\n        const uri = URI.revive(data.uri);\n        const that = this;\n        this._models.set(data.controllerId, ( new TextMateWorkerTokenizer(uri, data.lines, data.EOL, data.versionId, {\n            async getOrCreateGrammar(languageId, encodedLanguageId) {\n                const grammarFactory = await that._grammarFactory;\n                if (!grammarFactory) {\n                    return Promise.resolve(null);\n                }\n                if (!that._grammarCache[encodedLanguageId]) {\n                    that._grammarCache[encodedLanguageId] = grammarFactory.createGrammar(languageId, encodedLanguageId);\n                }\n                return that._grammarCache[encodedLanguageId];\n            },\n            setTokensAndStates(versionId, tokens, stateDeltas) {\n                that._host.$setTokensAndStates(data.controllerId, versionId, tokens, stateDeltas);\n            },\n            reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample) {\n                that._host.$reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample);\n            },\n        }, data.languageId, data.encodedLanguageId, data.maxTokenizationLineLength)));\n    }\n    $acceptModelChanged(controllerId, e) {\n        this._models.get(controllerId).onEvents(e);\n    }\n    $retokenize(controllerId, startLineNumber, endLineNumberExclusive) {\n        this._models.get(controllerId).retokenize(startLineNumber, endLineNumberExclusive);\n    }\n    $acceptModelLanguageChanged(controllerId, newLanguageId, newEncodedLanguageId) {\n        this._models.get(controllerId).onLanguageId(newLanguageId, newEncodedLanguageId);\n    }\n    $acceptRemovedModel(controllerId) {\n        const model = this._models.get(controllerId);\n        if (model) {\n            model.dispose();\n            this._models.delete(controllerId);\n        }\n    }\n    async $acceptTheme(theme, colorMap) {\n        const grammarFactory = await this._grammarFactory;\n        grammarFactory?.setTheme(theme, colorMap);\n    }\n    $acceptMaxTokenizationLineLength(controllerId, value) {\n        this._models.get(controllerId).acceptMaxTokenizationLineLength(value);\n    }\n}\n\nexport { TextMateTokenizationWorker, create };\n","import { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { isUpperAsciiLetter } from '../strings.js';\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, channel, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.method = method;\n        this.args = args;\n        this.type = 0 ;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 ;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, channel, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 ;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 ;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 ;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = ( new Map());\n        this._pendingEvents = ( new Map());\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(channel, method, args) {\n        const req = String(++this._lastSentReq);\n        return ( new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(( new RequestMessage(this._workerId, req, channel, method, args)));\n        }));\n    }\n    listen(channel, eventName, arg) {\n        let req = null;\n        const emitter = ( new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(( new SubscribeEventMessage(this._workerId, req, channel, eventName, arg)));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(( new UnsubscribeEventMessage(this._workerId, req)));\n                req = null;\n            }\n        }));\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    createProxyToRemoteChannel(channel, sendMessageBarrier) {\n        const handler = {\n            get: (target, name) => {\n                if (typeof name === 'string' && !target[name]) {\n                    if (propertyIsDynamicEvent(name)) {\n                        target[name] = (arg) => {\n                            return this.listen(channel, name, arg);\n                        };\n                    }\n                    else if (propertyIsEvent(name)) {\n                        target[name] = this.listen(channel, name, undefined);\n                    }\n                    else if (name.charCodeAt(0) === 36 ) {\n                        target[name] = async (...myArgs) => {\n                            await sendMessageBarrier?.();\n                            return this.sendMessage(channel, name, myArgs);\n                        };\n                    }\n                }\n                return target[name];\n            }\n        };\n        return ( new Proxy(Object.create(null), handler));\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 :\n                return this._handleReplyMessage(msg);\n            case 0 :\n                return this._handleRequestMessage(msg);\n            case 2 :\n                return this._handleSubscribeEventMessage(msg);\n            case 3 :\n                return this._handleEventMessage(msg);\n            case 4 :\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = ( new Error());\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(( new ReplyMessage(this._workerId, req, r, undefined)));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(( new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e))));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n            this._send(( new EventMessage(this._workerId, req, event)));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!( this._pendingEmitters.has(msg.req))) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!( this._pendingEvents.has(msg.req))) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 ) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 ) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\nclass SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, workerDescriptor) {\n        super();\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._worker = this._register(workerFactory.create({\n            amdModuleId: 'vs/base/common/worker/simpleWorker',\n            esmModuleLocation: workerDescriptor.esmModuleLocation,\n            label: workerDescriptor.label\n        }, (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            onUnexpectedError(err);\n        }));\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => {\n                return this._handleMessage(channel, method, args);\n            },\n            handleEvent: (channel, eventName, arg) => {\n                return this._handleEvent(channel, eventName, arg);\n            }\n        }));\n        this._protocol.setWorkerId(this._worker.getId());\n        let loaderConfiguration = null;\n        if (typeof globalThis.requirejs !== 'undefined') {\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        this._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            workerDescriptor.amdModuleId,\n        ]);\n        this.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n        this._onModuleLoaded.catch((e) => {\n            this._onError('Worker failed to load ' + workerDescriptor.amdModuleId, e);\n        });\n    }\n    _handleMessage(channelName, method, args) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            return Promise.reject(( new Error(`Missing channel ${channelName} on main thread`)));\n        }\n        if (typeof channel[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on main thread channel ${channelName}`)));\n        }\n        try {\n            return Promise.resolve(channel[method].apply(channel, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channelName, eventName, arg) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            throw ( new Error(`Missing channel ${channelName} on main thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = channel[eventName].call(channel, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(\n                    `Missing dynamic event ${eventName} on main thread channel ${channelName}.`\n                ));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = channel[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on main thread channel ${channelName}.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel, async () => { await this._onModuleLoaded; });\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    return name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    return /^onDynamic/.test(name) && isUpperAsciiLetter(name.charCodeAt(9));\n}\nclass SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => this._handleMessage(channel, method, args),\n            handleEvent: (channel, eventName, arg) => this._handleEvent(channel, eventName, arg)\n        }));\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(channel, method, args) {\n        if (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            return Promise.reject(( new Error(`Missing channel ${channel} on worker thread`)));\n        }\n        if (typeof requestHandler[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on worker thread channel ${channel}`)));\n        }\n        try {\n            return Promise.resolve(requestHandler[method].apply(requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channel, eventName, arg) {\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            throw ( new Error(`Missing channel ${channel} on worker thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = requestHandler[eventName].call(requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing dynamic event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel);\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    async initialize(workerId, loaderConfig, moduleId) {\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandlerFactory) {\n            this._requestHandler = this._requestHandlerFactory(this);\n            return;\n        }\n        if (loaderConfig) {\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n}\nexport { SimpleWorkerClient, SimpleWorkerServer, logOnceWebWorkerWarning };\n","import { SimpleWorkerServer } from './simpleWorker.js';\nlet initialized = false;\nfunction initialize(factory) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = ( new SimpleWorkerServer(\n        msg => globalThis.postMessage(msg),\n        (workerServer) => factory(workerServer)\n    ));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nfunction bootstrapSimpleWorker(factory) {\n    globalThis.onmessage = (_e) => {\n        if (!initialized) {\n            initialize(factory);\n        }\n    };\n}\nexport { bootstrapSimpleWorker };\n","import { create } from './textMateTokenizationWorker.worker.js';\nimport { bootstrapSimpleWorker } from 'vscode/vscode/vs/base/common/worker/simpleWorkerBootstrap';\n\nbootstrapSimpleWorker(create);\n"],"names":["getNLSMessages","getNLSLanguage","isPseudo","_format","message","args","result","match","rest","index","arg","localize","data","lookupMessage","fallback","_a","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","_language","_platformLocale","_translationsConfigFile","_userAgent","$globalThis","nodeProcess","isElectronProcess","isElectronRenderer","rawNlsConfig","nlsConfig","isWindows","isMacintosh","isNative","isWeb","isWebWorker","webWorkerOrigin","userAgent","language","Language","value","isDefaultVariant","isDefault","setTimeout0IsFaster","setTimeout0","pending","e","i","len","candidate","lastId","callback","myId","isChrome","safeProcess","vscodeGlobal","sandboxProcess","define_process_env_default","cwd","env","platform","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","name","expected","actual","determiner","type","msg","validateObject","pathObject","validateString","platformIsWin32","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","formatExt","ext","sep","dir","base","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","j","last","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","from","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","length","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","suffix","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posixCwd","regexp","cwd$1","posix","trailingSeparator","hasRoot","normalize","join","resolve","relative","dirname","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_empty","_regexp","URI","thing","schemeOrData","authority","query","fragment","uriToFsPath","change","Uri","percentDecode","idx","components","strict","uri","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","str","_rEncodedAsHex","findLastMonotonous","array","predicate","findLastIdxMonotonous","startIdx","endIdxEx","k","findFirstIdxMonotonousOrArrLen","_MonotonousArray","_array","item","MonotonousArray","arrayInsert","target","insertIndex","insertArr","before","after","CompareResult","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","compareBy","selector","comparator","a","b","numberComparator","_CallbackIterable","iterate","handler","cb","mapFn","first","_callback","CallbackIterable","groupBy","groupFn","element","key","ResourceMapEntry","isEntries","_ResourceMap","toKey","resource","clb","thisArg","_","entry","ResourceMap","SetMap","values","fn","createSingleCallFunction","fnDidRunCallback","_this","didCall","Iterable","is","empty","single","wrap","iterableOrElement","iterable","reverse","isEmpty","some","find","filter","map","flatMap","concat","iterables","reduce","reducer","initialValue","slice","arr","consume","atMost","consumed","iterator","next","asyncToArray","_DisposableTracker","d","val","child","parent","x","disposable","cache","cacheValue","rootParentCache","v","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","removePrefix","linesToRemove","lines","p","stackTraceStarts","stackTracePath","stackTraceFormattedLines","line","prevStarts","continuations","cont","set","DisposableTracker","dispose","errors","combinedDisposable","disposables","toDisposable","_DisposableStore","DisposableStore","_Disposable","Disposable","TMScopeRegistry","def","scopeName","missingTMGrammarErrorMessage","TMGrammarFactory","host","grammarDefinitions","vscodeTextmate","onigLib","grammarDefinition","location","content","scopeParts","injections","subScopeName","validGrammar","injectScope","injectedEmbeddedLanguages","languageId","theme","colorMap","encodedLanguageId","embeddedLanguages","injected","scope","containsEmbeddedLanguages","grammar","err","ErrorHandler","ErrorNoTelemetry","listener","newUnexpectedErrorHandler","errorHandler","onBugIndicatingError","onUnexpectedError","isCancellationError","transformErrorForSerialization","error","stack","canceledName","CancellationError","BugIndicatingError","_Node","Node","hasPerformanceNow","StopWatch","highResolution","Event","defer","event","debounce","once","thisArgs","didFire","onceIf","condition","snapshot","forEach","each","signal","any","events","addAndReturnDisposable","merge","initial","output","options","emitter","Emitter","store","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","numDebouncedCalls","doFire","cur","_output","accumulate","latch","equals","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","chain","sythensize","cs","ChainableSynthesis","HaltChainable","step","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","fromPromise","promise","forward","runAndSubscribe","EmitterObserver","_observable","_change","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","_EventProfiling","listenerCount","elapsed","EventProfiling","_globalLeakWarningThreshold","_LeakageMonitor","_errorHandler","threshold","topStack","topCount","ListenerLeakError","LeakageMonitor","Stacktrace","ListenerRefusalError","UniqueContainer","compactionThreshold","_b","_c","_d","_e","tuple","contained","removeMonitor","EventDeliveryQueuePrivate","listeners","adjustDeliveryQueue","n","dq","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","identity","t","LRUCachedFunction","arg1","arg2","Lazy","executor","splitLines","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","_GraphemeBreakTree","getGraphemeBreakRawData","codePoint","nodeCount","nodeIndex","GraphemeBreakTree","_AmbiguousCharacters","locales","confusableDictionary","arrayToMap","mergeMaps","map1","map2","intersectMaps","filteredLocales","languageSpecificMap","locale","commonMap","AmbiguousCharacters","isString","toSlashes","osPath","toPosixPath","getRoot","firstLetter","isWindowsDriveLetter","isEqualOrParent","parentCandidate","ignoreCase","sepOffset","char0","Schemas","connectionTokenQueryName","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","getServerRootPath","port","connectionToken","RemoteAuthorities","basePath","VSCODE_AUTHORITY","_FileAccessImpl","moduleId","url","resourcePath","uriOrModule","moduleIdToUrl","rootUriOrPath","modulePath","browserUri","FileAccessImpl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","params","addSearchParam","urlOrSearch","coop","coep","originalFSPath","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","isEqualOrParent$1","isEqualAuthority","basename","dirname$1","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","sep$1","fsp","hasTrailingPathSeparator","isRootSep","extUri","DataUri","parseMetaData","dataUri","metadata","property","mime","RunOnceScheduler","runner","Promises","settled","promises","firstError","withAsyncBody","bodyFn","reject","_AsyncIterableObject","items","writer","onReturn","filterFn","AsyncIterableObject","DebugNameData","owner","debugNameSource","referenceFn","getDebugName","countPerName","cachedDebugName","cached","dbgName","computeDebugName","self","ownerStr","formatOwner","getFunctionName","findKey","obj","countPerClassName","ownerId","className","getClassName","ctor","fnSrc","strictEquals","globalObservableLogger","getLogger","_recomputeInitiallyAndOnChange","_setRecomputeInitiallyAndOnChange","recomputeInitiallyAndOnChange","_keepObserved","_setKeepObserved","keepObserved","_derived","_setDerivedOpts","derived","ConvenientObservable","reader","fnOrOwner","fnOrUndefined","handleValue","BaseObservable","transaction","tx","TransactionImpl","subtransaction","_fn","_getDebugName","updatingObservers","observableValue","nameOrOwner","debugNameData","ObservableValue","_debugNameData","_equalityComparator","_tx","oldValue","newValue","assertFn","autorun","AutorunObserver","_runFn","createChangeSummary","_handleChange","emptySet","isDisposed","changeSummary","derivedOpts","computeFn","Derived","_computeFn","_handleLastObserverRemoved","hadValue","r","propagateBeginUpdate","observers","shouldReact","wasUpToDate","shouldCallBeginUpdate","shouldCallEndUpdate","observableFromEvent","getValue","FromEventObservable","_getValue","_getTransaction","batchEventsGlobally","didSet","KeepAliveObserver","_forceRecompute","_handleValue","OffsetRange","range","sortedRanges","endExclusive","other","f","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","aLineNumber","bLineNumber","aColumn","bColumn","Range","startLineNumber","startColumn","endLineNumber","endColumn","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","lineCount","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","LineRange","lineRanges","LineRangeSet","endLineNumberExclusive","lineRange","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","current","lineRange1","lineRange2","r1","r2","toUint32","PrefixSumComputer","insertValues","oldValues","oldPrefixSum","insertValuesLen","startIndex","maxCount","sum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","MirrorTextModel","eol","versionId","changes","eolLength","linesLength","lineStartValues","lineIndex","insertText","insertLines","newLengths","countEOL","text","eolCount","firstLineLength","lastLineStart","chr","_codiconFontCharacters","register","fontCharacter","codiconsLibrary","codiconsDerived","Codicon","TokenizationRegistry","languageIds","support","factory","myData","TokenizationSupportFactoryData","tokenizationSupport","_registry","_languageId","_factory","EncodedTokenizationResult","tokens","endState","HoverVerbosityAction","CompletionItemKinds","byKind","toIcon","kind","codicon","fromString","InlineCompletionTriggerKind","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKinds","icon","_FoldingRangeKind","FoldingRangeKind","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentThreadApplicability","CommentMode","InlayHintKind","TokenizationRegistry$1","ExternalUriOpenerPriority","InlineEditTriggerKind","NullState","nullTokenizeEncoded","state","FixedArray","_default","oldLength","newLength","arrayFill","deleteIndex","deleteCount","insertCount","readUInt32BE","source","writeUInt32BE","destination","TokenMetadata","fontStyle","foreground","textDecoration","TokenArray","tokenInfo","_tokenInfo","lengthSum","tokenStart","tokenEndEx","deltaBefore","deltaAfter","TokenInfo","TokenArrayBuilder","_LineTokens","lineContent","decoder","defaultMetadata","fullText","lineTextLength","lastTokenIndex","tokenIndex","desiredIndex","endOffset","sliceFromTokenIndex","sliceTokenCount","startOffset","deltaOffset","SliceLineTokens","insertTokens","nextOriginalTokenIdx","nextInsertTokenIdx","newTokens","originalEndOffset","nextOriginalTokenEndOffset","nextInsertToken","builder","startTokenIndex","endTokenIndex","tokenCount","LineTokens","tokenEndOffset","adjustedTokenIndex","tokenStartOffset","EMPTY_LINE_TOKENS","ContiguousTokensEditing","lineTokens","toChIndex","fromChIndex","toUint32Array","tokensCount","fromTokenIndex","fromTokenStartOffset","fromTokenEndOffset","delta","dest","lastEnd","tmp","_otherTokens","myTokens","otherTokens","otherTokensCount","chIndex","textLength","ContiguousMultilineTokens","buff","view32","byteCount","firstLineIndex","lastLineIndex","deletedLinesCount","lastLineTokens","deletedBefore","ContiguousMultilineTokensBuilder","size","TokenizerWithStateStore","TrackingTokenizationStateStore","TokenizationStateStore","RangePriorityQueueImpl","newLineCount","c","initialState","startState","oldState","idxFirstMightBeIntersecting","idxFirstIsAfter","newRange","endEx","TextMateTokenizationSupport","_grammar","_initialState","_containsEmbeddedLanguages","_createBackgroundTokenizer","_backgroundTokenizerShouldOnlyVerifyTokens","_reportTokenizationTime","_reportSlowTokenization","hasEOL","textModel","isRandomSample","shouldMeasure","sw","textMateResult","timeMS","seenLanguages","TokenizationSupportWithLineLimit","_encodedLanguageId","_actual","_maxTokenizationLineLength","TextMateWorkerTokenizer","_host","maxTokenizationLineLength","timeMs","lineLength","diffStateStacksRefEq","module","startTime","tokenizedLines","tokenBuilder","stateDeltaBuilder","StateDeltaBuilder","lineToTokenize","stateDeltas","stackDiff","_TextMateWorkerHost","workerServer","workerClient","TextMateWorkerHost","create","TextMateTokenizationWorker","_createData","onigurumaWASMUri","vscodeOniguruma","bytes","sources","that","grammarFactory","sourceExtensionId","controllerId","newLanguageId","newEncodedLanguageId","model","DEFAULT_CHANNEL","INITIALIZE","RequestMessage","vsWorker","req","channel","method","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","workerId","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","replyMessage","reply","requestMessage","transfer","SimpleWorkerServer","postMessage","requestHandlerFactory","requestHandler","inst","loaderConfig","initialized","initialize","simpleWorker","bootstrapSimpleWorker"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66]}