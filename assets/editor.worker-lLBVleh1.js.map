{"version":3,"file":"editor.worker-lLBVleh1.js","sources":["../node_modules/vscode/vscode/src/vs/base/common/errors.js","../node_modules/vscode/vscode/src/vs/base/common/collections.js","../node_modules/vscode/vscode/src/vs/base/common/functional.js","../node_modules/vscode/vscode/src/vs/base/common/arraysFind.js","../node_modules/vscode/vscode/src/vs/base/common/arrays.js","../node_modules/vscode/vscode/src/vs/base/common/map.js","../node_modules/vscode/vscode/src/vs/base/common/iterator.js","../node_modules/vscode/vscode/src/vs/base/common/lifecycle.js","../node_modules/vscode/vscode/src/vs/base/common/linkedList.js","../node_modules/vscode/vscode/src/vs/base/common/stopwatch.js","../node_modules/vscode/vscode/src/vs/base/common/event.js","../node_modules/vscode/vscode/src/vs/nls.messages.js","../node_modules/vscode/vscode/src/vs/nls.js","../node_modules/vscode/vscode/src/vs/base/common/platform.js","../node_modules/vscode/vscode/src/vs/base/common/cancellation.js","../node_modules/vscode/vscode/src/vs/base/common/cache.js","../node_modules/vscode/vscode/src/vs/base/common/lazy.js","../node_modules/vscode/vscode/src/vs/base/common/strings.js","../node_modules/vscode/vscode/src/vs/base/common/worker/simpleWorker.js","../node_modules/vscode/vscode/src/vs/base/common/diff/diffChange.js","../node_modules/vscode/vscode/src/vs/base/common/hash.js","../node_modules/vscode/vscode/src/vs/base/common/diff/diff.js","../node_modules/vscode/vscode/src/vs/editor/common/core/position.js","../node_modules/vscode/vscode/src/vs/editor/common/core/range.js","../node_modules/vscode/vscode/src/vs/base/common/uint.js","../node_modules/vscode/vscode/src/vs/editor/common/core/characterClassifier.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/linkComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/supports/inplaceReplaceSupport.js","../node_modules/vscode/vscode/src/vs/base/common/keyCodes.js","../node_modules/vscode/vscode/src/vs/base/common/process.js","../node_modules/vscode/vscode/src/vs/base/common/path.js","../node_modules/vscode/vscode/src/vs/base/common/uri.js","../node_modules/vscode/vscode/src/vs/editor/common/core/selection.js","../node_modules/vscode/vscode/src/vs/base/common/types.js","../node_modules/vscode/vscode/src/vs/base/common/codiconsUtil.js","../node_modules/vscode/vscode/src/vs/base/common/codiconsLibrary.js","../node_modules/vscode/vscode/src/vs/base/common/codicons.js","../node_modules/vscode/vscode/src/vs/editor/common/tokenizationRegistry.js","../node_modules/vscode/vscode/src/vs/editor/common/languages.js","../node_modules/vscode/vscode/src/vs/editor/common/standalone/standaloneEnums.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorBaseApi.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorWorkerHost.js","../node_modules/vscode/vscode/src/vs/editor/common/core/wordCharacterClassifier.js","../node_modules/vscode/vscode/src/vs/base/common/objects.js","../node_modules/vscode/vscode/src/vs/editor/common/model.js","../node_modules/vscode/vscode/src/vs/editor/common/model/textModelSearch.js","../node_modules/vscode/vscode/src/vs/base/common/assert.js","../node_modules/vscode/vscode/src/vs/editor/common/core/wordHelper.js","../node_modules/vscode/vscode/src/vs/editor/common/services/unicodeTextModelHighlighter.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/core/offsetRange.js","../node_modules/vscode/vscode/src/vs/editor/common/core/lineRange.js","../node_modules/vscode/vscode/src/vs/editor/common/core/textLength.js","../node_modules/vscode/vscode/src/vs/editor/common/core/positionToOffset.js","../node_modules/vscode/vscode/src/vs/editor/common/core/textEdit.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/rangeMapping.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/legacyLinesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputers.js","../node_modules/vscode/vscode/src/vs/base/common/color.js","../node_modules/vscode/vscode/src/vs/editor/common/languages/defaultDocumentColorsComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/services/findSectionHeaders.js","../node_modules/vscode/vscode/src/vs/base/common/extpath.js","../node_modules/vscode/vscode/src/vs/base/common/network.js","../node_modules/vscode/vscode/src/vs/base/common/resources.js","../node_modules/vscode/vscode/src/vs/base/common/async.js","../node_modules/vscode/vscode/src/vs/editor/common/model/prefixSumComputer.js","../node_modules/vscode/vscode/src/vs/editor/common/model/mirrorTextModel.js","../node_modules/vscode/vscode/src/vs/editor/common/services/textModelSync/textModelSync.impl.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorSimpleWorker.js","../node_modules/vscode/vscode/src/vs/editor/common/services/editorWorkerBootstrap.js"],"sourcesContent":["class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw ( new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack));\n                    }\n                    throw ( new Error(e.message + '\\n\\n' + e.stack));\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onBugIndicatingError(e) {\n    errorHandler.onUnexpectedError(e);\n    return undefined;\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    return error;\n}\nfunction transformErrorFromSerialization(data) {\n    let error;\n    if (data.noTelemetry) {\n        error = ( new ErrorNoTelemetry());\n    }\n    else {\n        error = ( new Error());\n        error.name = data.name;\n    }\n    error.message = data.message;\n    error.stack = data.stack;\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onBugIndicatingError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization, transformErrorFromSerialization };\n","var _a;\nfunction groupBy(data, groupFn) {\n    const result = Object.create(null);\n    for (const element of data) {\n        const key = groupFn(element);\n        let target = result[key];\n        if (!target) {\n            target = result[key] = [];\n        }\n        target.push(element);\n    }\n    return result;\n}\nfunction diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!( after.has(element))) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!( before.has(element))) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\nfunction diffMaps(before, after) {\n    const removed = [];\n    const added = [];\n    for (const [index, value] of before) {\n        if (!( after.has(index))) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!( before.has(index))) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\nfunction intersection(setA, setB) {\n    const result = ( new Set());\n    for (const elem of setB) {\n        if (( setA.has(elem))) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\nclass SetWithKey {\n    static { _a = Symbol.toStringTag; }\n    constructor(values, toKey) {\n        this.toKey = toKey;\n        this._map = ( new Map());\n        this[_a] = 'SetWithKey';\n        for (const value of values) {\n            this.add(value);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        const key = this.toKey(value);\n        this._map.set(key, value);\n        return this;\n    }\n    delete(value) {\n        return this._map.delete(this.toKey(value));\n    }\n    has(value) {\n        return ( this._map.has(this.toKey(value)));\n    }\n    *entries() {\n        for (const entry of ( this._map.values())) {\n            yield [entry, entry];\n        }\n    }\n    keys() {\n        return ( this.values());\n    }\n    *values() {\n        for (const entry of ( this._map.values())) {\n            yield entry;\n        }\n    }\n    clear() {\n        this._map.clear();\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n    }\n    [Symbol.iterator]() {\n        return ( this.values());\n    }\n}\nexport { SetWithKey, diffMaps, diffSets, groupBy, intersection };\n","function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\nexport { createSingleCallFunction };\n","function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw ( new Error(\n                            'MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.'\n                        ));\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };\n","import { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nfunction tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw ( new Error('Invalid tail call'));\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\nfunction binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\nfunction binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nfunction quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw ( new TypeError('invalid index'));\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nfunction groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\nfunction* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nfunction forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nfunction forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\nfunction sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nfunction delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\nfunction top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\nfunction coalesce(array) {\n    return array.filter((e) => !!e);\n}\nfunction coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\nfunction move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\nfunction distinct(array, keyFn = value => value) {\n    const seen = ( new Set());\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nfunction uniqueFilter(keyFn) {\n    const seen = ( new Set());\n    return element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nfunction commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\nfunction range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nfunction index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\nfunction insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\nfunction remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\nfunction arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\nfunction shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549;\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nfunction pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\nfunction pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nfunction mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        ( items.map(fn)) :\n        fn(items);\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nfunction insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\nfunction splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nvar CompareResult;\n( (function(CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {})));\nfunction compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nfunction tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\nconst numberComparator = (a, b) => a - b;\nconst booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nfunction reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nclass ArrayQueue {\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    takeWhile(predicate) {\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    takeFromEndWhile(predicate) {\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\nclass CallbackIterable {\n    static { this.empty = ( new CallbackIterable(_callback => { })); }\n    constructor(\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return ( new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true)));\n    }\n    map(mapFn) {\n        return ( new CallbackIterable(cb => this.iterate(item => cb(mapFn(item)))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nclass Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(( arr.keys())).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return ( new Permutation(sortIndices));\n    }\n    apply(arr) {\n        return ( arr.map((_, index) => arr[this._indexMap[index]]));\n    }\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return ( new Permutation(inverseIndexMap));\n    }\n}\nasync function findAsync(array, predicate) {\n    const results = await Promise.all(( array.map(\n        async (element, index) => ({ element, ok: await predicate(element, index) })\n    )));\n    return results.find(r => r.ok)?.element;\n}\nexport { ArrayQueue, CallbackIterable, CompareResult, Permutation, arrayInsert, asArray, binarySearch, binarySearch2, booleanComparator, coalesce, coalesceInPlace, commonPrefixLength, compareBy, delta, distinct, equals, findAsync, forEachAdjacent, forEachWithNeighbors, groupAdjacentBy, groupBy, index, insert, insertInto, isFalsyOrEmpty, isNonEmptyArray, mapArrayOrNot, move, numberComparator, pushMany, pushToEnd, pushToStart, quickSelect, range, remove, removeFastWithoutKeepingOrder, reverseOrder, shuffle, sortedDiff, splice, tail, tail2, tieBreakComparators, top, uniqueFilter };\n","var _a, _b, _c;\nfunction getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nclass ResourceMap {\n    static { this.defaultToKey = (resource) => ( resource.toString()); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = ( new Map(arg.map));\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = ( new Map());\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = ( new Map());\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), ( new ResourceMapEntry(resource, value)));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return ( this.map.has(this.toKey(resource)));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of ( this.map.values())) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of ( this.map.values())) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of ( this.map.values())) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nclass ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = ( new ResourceMap(entriesOrKey));\n        }\n        else {\n            this._map = ( new ResourceMap(toKey));\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return ( this._map.has(value));\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return ( this._map.keys());\n    }\n    values() {\n        return ( this._map.keys());\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return ( this.keys());\n    }\n}\nclass LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = ( new Map());\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return ( this._map.has(key));\n    }\n    get(key, touch = 0 ) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 ) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 ) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 ) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 :\n                    this.addItemLast(item);\n                    break;\n                case 1 :\n                    this.addItemFirst(item);\n                    break;\n                case 2 :\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw ( new Error(`LinkedMap got modified during iteration.`));\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            if (!item.next) {\n                throw ( new Error('Invalid list'));\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            if (!item.previous) {\n                throw ( new Error('Invalid list'));\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw ( new Error('Invalid list'));\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        if (((touch !== 1  && touch !== 2) )) {\n            return;\n        }\n        if (touch === 1 ) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._tail) {\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 ) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._head) {\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = 2 ) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 );\n    }\n    set(key, value) {\n        super.set(key, value, 2 );\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nclass LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\nclass MRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimNew(newSize);\n    }\n    set(key, value) {\n        if (this._limit <= this.size && !( this.has(key))) {\n            this.trim(Math.round(this._limit * this._ratio) - 1);\n        }\n        super.set(key, value);\n        return this;\n    }\n}\nclass CounterSet {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return ( this.map.has(value));\n    }\n}\nclass BidirectionalMap {\n    constructor(entries) {\n        this._m1 = ( new Map());\n        this._m2 = ( new Map());\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    forEach(callbackfn, thisArg) {\n        this._m1.forEach((value, key) => {\n            callbackfn.call(thisArg, value, key, this);\n        });\n    }\n    keys() {\n        return ( this._m1.keys());\n    }\n    values() {\n        return ( this._m1.values());\n    }\n}\nclass SetMap {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = ( new Set());\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return ( new Set());\n        }\n        return values;\n    }\n}\nfunction mapsStrictEqualIgnoreOrder(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, value] of a) {\n        if (!( b.has(key)) || b.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [key] of b) {\n        if (!( a.has(key))) {\n            return false;\n        }\n    }\n    return true;\n}\nclass TwoKeyMap {\n    constructor() {\n        this._data = {};\n    }\n    set(first, second, value) {\n        if (!this._data[first]) {\n            this._data[first] = {};\n        }\n        this._data[first][second] = value;\n    }\n    get(first, second) {\n        return this._data[first]?.[second];\n    }\n    clear() {\n        this._data = {};\n    }\n    *values() {\n        for (const first in this._data) {\n            for (const second in this._data[first]) {\n                const value = this._data[first][second];\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\nclass ThreeKeyMap {\n    constructor() {\n        this._data = {};\n    }\n    set(first, second, third, value) {\n        if (!this._data[first]) {\n            this._data[first] = ( new TwoKeyMap());\n        }\n        this._data[first].set(second, third, value);\n    }\n    get(first, second, third) {\n        return this._data[first]?.get(second, third);\n    }\n    clear() {\n        this._data = {};\n    }\n    *values() {\n        for (const first in this._data) {\n            for (const value of ( this._data[first].values())) {\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\nexport { BidirectionalMap, CounterSet, LRUCache, LinkedMap, MRUCache, ResourceMap, ResourceSet, SetMap, ThreeKeyMap, TwoKeyMap, getOrSet, mapsStrictEqualIgnoreOrder };\n","var Iterable;\n( (function(Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = ( Object.freeze([]));\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {})));\nexport { Iterable };\n","import { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\nlet disposableTracker = null;\nclass DisposableTracker {\n    constructor() {\n        this.livingDisposables = ( new Map());\n    }\n    static { this.idx = 0; }\n    getDisposableData(d) {\n        let val = this.livingDisposables.get(d);\n        if (!val) {\n            val = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n            this.livingDisposables.set(d, val);\n        }\n        return val;\n    }\n    trackDisposable(d) {\n        const data = this.getDisposableData(d);\n        if (!data.source) {\n            data.source =\n                ( new Error()).stack;\n        }\n    }\n    setParent(child, parent) {\n        const data = this.getDisposableData(child);\n        data.parent = parent;\n    }\n    markAsDisposed(x) {\n        this.livingDisposables.delete(x);\n    }\n    markAsSingleton(disposable) {\n        this.getDisposableData(disposable).isSingleton = true;\n    }\n    getRootParent(data, cache) {\n        const cacheValue = cache.get(data);\n        if (cacheValue) {\n            return cacheValue;\n        }\n        const result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n        cache.set(data, result);\n        return result;\n    }\n    getTrackedDisposables() {\n        const rootParentCache = ( new Map());\n        const leaking = [...this.livingDisposables.entries()]\n            .filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n            .flatMap(([k]) => k);\n        return leaking;\n    }\n    computeLeakingDisposables(maxReported = 10, preComputedLeaks) {\n        let uncoveredLeakingObjs;\n        if (preComputedLeaks) {\n            uncoveredLeakingObjs = preComputedLeaks;\n        }\n        else {\n            const rootParentCache = ( new Map());\n            const leakingObjects = [...( this.livingDisposables.values())]\n                .filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n            if (leakingObjects.length === 0) {\n                return;\n            }\n            const leakingObjsSet = ( new Set(( leakingObjects.map(o => o.value))));\n            uncoveredLeakingObjs = leakingObjects.filter(l => {\n                return !(l.parent && ( leakingObjsSet.has(l.parent)));\n            });\n            if (uncoveredLeakingObjs.length === 0) {\n                throw ( new Error('There are cyclic diposable chains!'));\n            }\n        }\n        if (!uncoveredLeakingObjs) {\n            return undefined;\n        }\n        function getStackTracePath(leaking) {\n            function removePrefix(array, linesToRemove) {\n                while (array.length > 0 && ( linesToRemove.some(\n                    regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp)\n                ))) {\n                    array.shift();\n                }\n            }\n            const lines = ( leaking.source.split('\\n').map(p => p.trim().replace('at ', ''))).filter(l => l !== '');\n            removePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n            return lines.reverse();\n        }\n        const stackTraceStarts = ( new SetMap());\n        for (const leaking of uncoveredLeakingObjs) {\n            const stackTracePath = getStackTracePath(leaking);\n            for (let i = 0; i <= stackTracePath.length; i++) {\n                stackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n            }\n        }\n        uncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n        let message = '';\n        let i = 0;\n        for (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n            i++;\n            const stackTracePath = getStackTracePath(leaking);\n            const stackTraceFormattedLines = [];\n            for (let i = 0; i < stackTracePath.length; i++) {\n                let line = stackTracePath[i];\n                const starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n                line = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n                const prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n                const continuations = groupBy(( [...prevStarts].map(d => getStackTracePath(d)[i])), v => v);\n                delete continuations[stackTracePath[i]];\n                for (const [cont, set] of Object.entries(continuations)) {\n                    stackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n                }\n                stackTraceFormattedLines.unshift(line);\n            }\n            message += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n        }\n        if (uncoveredLeakingObjs.length > maxReported) {\n            message += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n        }\n        return { leaks: uncoveredLeakingObjs, details: message };\n    }\n}\nfunction setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nfunction trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\nfunction markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\nfunction isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nfunction dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw ( new AggregateError(errors, 'Encountered errors while disposing of store'));\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nfunction disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\nfunction combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nfunction toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nclass DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = ( new Set());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(( new Error(\n                    'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'\n                )).stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    delete(o) {\n        if (!o) {\n            return;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot dispose a disposable on itself!'));\n        }\n        this._toDispose.delete(o);\n        o.dispose();\n    }\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (( this._toDispose.has(o))) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nclass Disposable {\n    static { this.None = ( Object.freeze({ dispose() { } })); }\n    constructor() {\n        this._store = ( new DisposableStore());\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        return this._store.add(o);\n    }\n}\nclass MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nclass MandatoryMutableDisposable {\n    constructor(initialValue) {\n        this._disposable = ( new MutableDisposable());\n        this._isDisposed = false;\n        this._disposable.value = initialValue;\n    }\n    get value() {\n        return this._disposable.value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._disposable.value) {\n            return;\n        }\n        this._disposable.value = value;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._disposable.dispose();\n    }\n}\nclass RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nclass ReferenceCollection {\n    constructor() {\n        this.references = ( new Map());\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = createSingleCallFunction(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\nclass AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    async acquire(key, ...args) {\n        const ref = this.referenceCollection.acquire(key, ...args);\n        try {\n            const object = await ref.object;\n            return {\n                object,\n                dispose: () => ref.dispose()\n            };\n        }\n        catch (error) {\n            ref.dispose();\n            throw error;\n        }\n    }\n}\nclass ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nclass DisposableMap {\n    constructor() {\n        this._store = ( new Map());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(( this._store.values()));\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return ( this._store.has(key));\n    }\n    get size() {\n        return this._store.size;\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(( new Error(\n                'Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!'\n            )).stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    deleteAndLeak(key) {\n        const value = this._store.get(key);\n        this._store.delete(key);\n        return value;\n    }\n    keys() {\n        return ( this._store.keys());\n    }\n    values() {\n        return ( this._store.values());\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\nexport { AsyncReferenceCollection, Disposable, DisposableMap, DisposableStore, DisposableTracker, ImmortalReference, MandatoryMutableDisposable, MutableDisposable, RefCountedDisposable, ReferenceCollection, combinedDisposable, dispose, disposeIfDisposable, isDisposable, markAsDisposed, markAsSingleton, setDisposableTracker, toDisposable, trackDisposable };\n","class Node {\n    static { this.Undefined = ( new Node(undefined)); }\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nclass LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = ( new Node(element));\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\nexport { LinkedList };\n","const hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nclass StopWatch {\n    static create(highResolution) {\n        return ( new StopWatch(highResolution));\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    reset() {\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\nexport { StopWatch };\n","import { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Disposable, DisposableStore, toDisposable, DisposableMap, combinedDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nvar Event;\n( (function(Event) {\n    Event.None = () => Disposable.None;\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    function onceIf(event, condition) {\n        return Event.once(Event.filter(event, condition));\n    }\n    Event.onceIf = onceIf;\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, ( map(i))), null, disposables), disposable);\n    }\n    Event.map = map;\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...( events.map(event => event(e => listener.call(thisArgs, e)))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return ( map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable));\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = ( new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        }));\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(( new ChainableSynthesis()));\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return ( new Promise(resolve => once(event)(resolve)));\n    }\n    Event.toPromise = toPromise;\n    function fromPromise(promise) {\n        const result = ( new Emitter());\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function forward(from, to) {\n        return from(e => to.fire(e));\n    }\n    Event.forward = forward;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                    this._observable.reportChanges();\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            this.emitter = ( new Emitter(options));\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n        }\n        handleChange(_observable, _change) {\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    function fromObservable(obs, store) {\n        const observer = ( new EmitterObserver(obs, store));\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {})));\nclass EventProfiling {\n    static { this.all = ( new Set()); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = ( new StopWatch());\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nfunction setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = ( (LeakageMonitor._idPool++).toString(16)).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = ( new Map());\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = ( new ListenerLeakError(message, topStack));\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = ( new Error());\n        return ( new Stacktrace(err.stack ?? ''));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\nclass ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nclass Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? ( new LeakageMonitor(\n            options?.onListenerError ?? onUnexpectedError,\n            this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold\n        )) :\n            undefined;\n        this._perfMon = this._options?._profName ? ( new EventProfiling(this._options._profName)) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = ( new ListenerRefusalError(\n                    `${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`,\n                    tuple[0]\n                ));\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = ( new UniqueContainer(callback));\n            let removeMonitor;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= ( new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return;\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw ( new Error('Attempted to dispose unknown listener'));\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop();\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) ;\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nconst createEventDeliveryQueue = () => ( new EventDeliveryQueuePrivate());\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        this.i = -1;\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end;\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nclass AsyncEmitter extends Emitter {\n    async fireAsync(data, token, promiseJoin) {\n        if (!this._listeners) {\n            return;\n        }\n        if (!this._asyncDeliveryQueue) {\n            this._asyncDeliveryQueue = ( new LinkedList());\n        }\n        forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n        while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n            const [listener, data] = this._asyncDeliveryQueue.shift();\n            const thenables = [];\n            const event = {\n                ...data,\n                token,\n                waitUntil: (p) => {\n                    if (Object.isFrozen(thenables)) {\n                        throw ( new Error('waitUntil can NOT be called asynchronous'));\n                    }\n                    if (promiseJoin) {\n                        p = promiseJoin(p, listener);\n                    }\n                    thenables.push(p);\n                }\n            };\n            try {\n                listener(event);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                continue;\n            }\n            await Promise.allSettled(thenables).then(values => {\n                for (const value of values) {\n                    if (value.status === 'rejected') {\n                        onUnexpectedError(value.reason);\n                    }\n                }\n            });\n        }\n    }\n}\nclass PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = ( new LinkedList());\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nclass DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\nclass MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\nclass EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = ( new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        }));\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\nclass DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = ( new DisposableStore());\n        const multiplexer = this._store.add(( new EventMultiplexer()));\n        const itemListeners = this._store.add(( new DisposableMap()));\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        for (const instance of items) {\n            addItem(instance);\n        }\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\nclass EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                if (!reduce) {\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                const reduceData = data;\n                if (!reduceData) {\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    data.buffers.push(() => {\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: ( new Array()) };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\nclass Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = ( new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        }));\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\nclass ValueWithChangeEvent {\n    static const(value) {\n        return ( new ConstValueWithChangeEvent(value));\n    }\n    constructor(_value) {\n        this._value = _value;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onDidChange.fire(undefined);\n        }\n    }\n}\nclass ConstValueWithChangeEvent {\n    constructor(value) {\n        this.value = value;\n        this.onDidChange = Event.None;\n    }\n}\nfunction trackSetChanges(getData, onDidChangeData, handleItem) {\n    const map = ( new DisposableMap());\n    let oldData = ( new Set(getData()));\n    for (const d of oldData) {\n        map.set(d, handleItem(d));\n    }\n    const store = ( new DisposableStore());\n    store.add(onDidChangeData(() => {\n        const newData = getData();\n        const diff = diffSets(oldData, newData);\n        for (const r of diff.removed) {\n            map.deleteAndDispose(r);\n        }\n        for (const a of diff.added) {\n            map.set(a, handleItem(a));\n        }\n        oldData = ( new Set(newData));\n    }));\n    store.add(map);\n    return store;\n}\nexport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, EventProfiling, ListenerLeakError, ListenerRefusalError, MicrotaskEmitter, PauseableEmitter, Relay, ValueWithChangeEvent, createEventDeliveryQueue, setGlobalLeakWarningThreshold, trackSetChanges };\n","function getNLSMessages() {\n    return globalThis._VSCODE_NLS_MESSAGES;\n}\nfunction getNLSLanguage() {\n    return globalThis._VSCODE_NLS_LANGUAGE;\n}\nexport { getNLSLanguage, getNLSMessages };\n","import { getNLSLanguage, getNLSMessages } from './nls.messages.js';\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nlet initialized = false;\nfunction isInitialized() {\n    return initialized;\n}\nfunction localize(data , message , ...args) {\n    if (typeof data === 'number') {\n        return _format(lookupMessage(data, message), args);\n    }\n    return _format(message, args);\n}\nfunction lookupMessage(index, fallback) {\n    initialized = true;\n    const message = getNLSMessages()?.[index];\n    if (typeof message !== 'string') {\n        if (typeof fallback === 'string') {\n            return fallback;\n        }\n        throw ( new Error(`!!! NLS MISSING: ${index} !!!`));\n    }\n    return message;\n}\nfunction localize2(data , originalMessage, ...args) {\n    let message;\n    if (typeof data === 'number') {\n        message = lookupMessage(data, originalMessage);\n    }\n    else {\n        message = originalMessage;\n    }\n    const value = _format(message, args);\n    return {\n        value,\n        original: originalMessage === message ? value : _format(originalMessage, args)\n    };\n}\nexport { getNLSLanguage, getNLSMessages, isInitialized, localize, localize2 };\n","import '../../nls.js';\nimport { getNLSLanguage } from '../../nls.messages.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            _locale = nlsConfig.userLocale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    _language = getNLSLanguage() || LANGUAGE_DEFAULT;\n    _locale = navigator.language.toLowerCase();\n    _platformLocale = _locale;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case 0 : return 'Web';\n        case 1 : return 'Mac';\n        case 2 : return 'Linux';\n        case 3 : return 'Windows';\n    }\n}\nlet _platform = 0 ;\nif (_isMacintosh) {\n    _platform = 1 ;\n}\nelse if (_isWindows) {\n    _platform = 3 ;\n}\nelse if (_isLinux) {\n    _platform = 2 ;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isLinuxSnap = _isLinuxSnap;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n( (function(Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {})));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nconst OS = (_isMacintosh || _isIOS ? 2  : ((_isWindows ? 1  : 3) ));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( new Uint8Array(2));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( new Uint16Array(test.buffer));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLinuxSnap, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n","import { Event, Emitter } from './event.js';\nconst shortcutEvent = ( Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n}));\nvar CancellationToken;\n( (function(CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = ( Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    }));\n    CancellationToken.Cancelled = ( Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    }));\n})(CancellationToken || (CancellationToken = {})));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = ( new Emitter());\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nclass CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            this._token = ( new MutableToken());\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.dispose();\n        }\n    }\n}\nfunction cancelOnDispose(store) {\n    const source = ( new CancellationTokenSource());\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\nexport { CancellationToken, CancellationTokenSource, cancelOnDispose };\n","import { CancellationTokenSource } from './cancellation.js';\nclass Cache {\n    constructor(task) {\n        this.task = task;\n        this.result = null;\n    }\n    get() {\n        if (this.result) {\n            return this.result;\n        }\n        const cts = ( new CancellationTokenSource());\n        const promise = this.task(cts.token);\n        this.result = {\n            promise,\n            dispose: () => {\n                this.result = null;\n                cts.cancel();\n                cts.dispose();\n            }\n        };\n        return this.result;\n    }\n}\nfunction identity(t) {\n    return t;\n}\nclass LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\nclass CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = ( new Map());\n        this._map2 = ( new Map());\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (( this._map2.has(key))) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\nexport { Cache, CachedFunction, LRUCachedFunction, identity };\n","class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    get hasValue() { return this._didRun; }\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get rawValue() { return this._value; }\n}\nexport { Lazy };\n","import { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\nfunction format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\nfunction format2(template, values) {\n    if (( Object.keys(values)).length === 0) {\n        return template;\n    }\n    return template.replace(_format2Regexp, (match, group) => (values[group] ?? match));\n}\nfunction htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\nfunction count(value, substr) {\n    let result = 0;\n    let index = value.indexOf(substr);\n    while (index !== -1) {\n        result++;\n        index = value.indexOf(substr, index + substr.length);\n    }\n    return result;\n}\nfunction truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\nfunction truncateMiddle(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    const prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n    const suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n    return `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\nfunction trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nfunction createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw ( new Error('Cannot create regex from empty string'));\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return ( new RegExp(searchString, modifiers));\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nfunction splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\nfunction firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\nfunction lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32  && chCode !== 9 ) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getIndentationLength(str) {\n    const idx = firstNonWhitespaceIndex(str);\n    if (idx === -1) {\n        return str.length;\n    }\n    return idx;\n}\nfunction replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw ( new Error('match.index should be defined'));\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nfunction compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction isAsciiDigit(code) {\n    return code >= 48  && code <= 57 ;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97  && code <= 122 ;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65  && code <= 90 ;\n}\nfunction equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\nfunction commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\nfunction getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nclass CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536  ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nclass GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = ( new CodePointIterator(str, offset));\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nfunction nextCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.nextGraphemeLength();\n}\nfunction prevCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.prevGraphemeLength();\n}\nfunction getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\nfunction containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nconst UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/;\nfunction containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nfunction isFullWidthCharacter(charCode) {\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\nfunction isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\nfunction lcut(text, n, prefix = '') {\n    const trimmed = text.trimStart();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(trimmed)) {\n        if (trimmed.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    if (i === 0) {\n        return trimmed;\n    }\n    return prefix + trimmed.substring(i).trimStart();\n}\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\nfunction* forAnsiStringParts(str) {\n    let last = 0;\n    for (const match of str.matchAll(CSI_SEQUENCE)) {\n        if (last !== match.index) {\n            yield { isCode: false, str: str.substring(last, match.index) };\n        }\n        yield { isCode: true, str: match[0] };\n        last = match.index + match[0].length;\n    }\n    if (last !== str.length) {\n        yield { isCode: false, str: str.substring(last) };\n    }\n}\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '');\n    }\n    return str;\n}\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\nfunction removeAnsiEscapeCodesFromPrompt(str) {\n    return removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\nconst UTF8_BOM_CHARACTER = String.fromCharCode(65279 );\nfunction startsWithUTF8BOM(str) {\n    return !!((str && str.length > 0 && str.charCodeAt(0) === 65279) );\n}\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false;\n    }\n    if (target.length < query.length) {\n        return false;\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nfunction uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\nfunction singleLetterHash(n) {\n    const LETTERS_CNT = (90  - 65  + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97  + n);\n    }\n    return String.fromCharCode(65  + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    if (breakTypeA === 0 ) {\n        return (breakTypeB !== 5  && breakTypeB !== 7) ;\n    }\n    if (breakTypeA === 2 ) {\n        if (breakTypeB === 3 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 4  || breakTypeA === 2  || breakTypeA === 3 ) {\n        return true;\n    }\n    if (breakTypeB === 4  || breakTypeB === 2  || breakTypeB === 3 ) {\n        return true;\n    }\n    if (breakTypeA === 8 ) {\n        if (breakTypeB === 8  || breakTypeB === 9  || breakTypeB === 11  || breakTypeB === 12 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 11  || breakTypeA === 9 ) {\n        if (breakTypeB === 9  || breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeA === 12  || breakTypeA === 10 ) {\n        if (breakTypeB === 10 ) {\n            return false;\n        }\n    }\n    if (breakTypeB === 5  || breakTypeB === 13 ) {\n        return false;\n    }\n    if (breakTypeB === 7 ) {\n        return false;\n    }\n    if (breakTypeA === 1 ) {\n        return false;\n    }\n    if (breakTypeA === 13  && breakTypeB === 14 ) {\n        return false;\n    }\n    if (breakTypeA === 6  && breakTypeB === 6 ) {\n        return false;\n    }\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = ( new GraphemeBreakTree());\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        if (codePoint < 32) {\n            if (codePoint === 10 ) {\n                return 3 ;\n            }\n            if (codePoint === 13 ) {\n                return 2 ;\n            }\n            return 4 ;\n        }\n        if (codePoint < 127) {\n            return 0 ;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 ;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\nfunction getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    const iterator = ( new CodePointIterator(str, offset));\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    const iterator = ( new CodePointIterator(str, initialOffset));\n    let codePoint = iterator.prevCodePoint();\n    while (((isEmojiModifier(codePoint) || codePoint === 65039  || codePoint === 8419) )) {\n        if (iterator.offset === 0) {\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    if (!isEmojiImprecise(codePoint)) {\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 ) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nconst noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static { this.ambiguousCharacterData = ( new Lazy(() => {\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    })); }\n    static { this.cache = ( new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = ( new Map());\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = ( new Map(map1));\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = ( new Map());\n            for (const [key, value] of map1) {\n                if (( map2.has(key))) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return ( new AmbiguousCharacters(map));\n    })); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = ( new Lazy(() => ( Object.keys(AmbiguousCharacters.ambiguousCharacterData.value)).filter((k) => !k.startsWith('_')))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return ( this.confusableDictionary.has(codePoint));\n    }\n    containsAmbiguousCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return ( new Set(( this.confusableDictionary.keys())));\n    }\n}\nclass InvisibleCharacters {\n    static getRawData() {\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = ( new Set(InvisibleCharacters.getRawData()));\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return ( InvisibleCharacters.getData().has(codePoint));\n    }\n    static containsInvisibleCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nexport { AmbiguousCharacters, CodePointIterator, GraphemeIterator, InvisibleCharacters, UNUSUAL_LINE_TERMINATORS, UTF8_BOM_CHARACTER, commonPrefixLength, commonSuffixLength, compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase, computeCodePoint, containsRTL, containsUnusualLineTerminators, containsUppercaseCharacter, convertSimple2RegExpPattern, count, createRegExp, equalsIgnoreCase, escape, escapeRegExpCharacters, firstNonWhitespaceIndex, forAnsiStringParts, format, format2, fuzzyContains, getCharContainingOffset, getIndentationLength, getLeadingWhitespace, getLeftDeleteOffset, getNLines, getNextCodePoint, htmlAttributeEncodeValue, isAsciiDigit, isBasicASCII, isEmojiImprecise, isFalsyOrWhitespace, isFullWidthCharacter, isHighSurrogate, isLowSurrogate, isLowerAsciiLetter, isUpperAsciiLetter, lastNonWhitespaceIndex, lcut, ltrim, nextCharLength, noBreakWhitespace, prevCharLength, regExpLeadsToEndlessLoop, removeAnsiEscapeCodes, removeAnsiEscapeCodesFromPrompt, replaceAsync, rtrim, singleLetterHash, splitLines, splitLinesIncludeSeparators, startsWithIgnoreCase, startsWithUTF8BOM, stripWildcards, trim, truncate, truncateMiddle, uppercaseFirstLetter };\n","import { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { isUpperAsciiLetter } from '../strings.js';\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, channel, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.method = method;\n        this.args = args;\n        this.type = 0 ;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 ;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, channel, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.channel = channel;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 ;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 ;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 ;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = ( new Map());\n        this._pendingEvents = ( new Map());\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(channel, method, args) {\n        const req = String(++this._lastSentReq);\n        return ( new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(( new RequestMessage(this._workerId, req, channel, method, args)));\n        }));\n    }\n    listen(channel, eventName, arg) {\n        let req = null;\n        const emitter = ( new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(( new SubscribeEventMessage(this._workerId, req, channel, eventName, arg)));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(( new UnsubscribeEventMessage(this._workerId, req)));\n                req = null;\n            }\n        }));\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    createProxyToRemoteChannel(channel, sendMessageBarrier) {\n        const handler = {\n            get: (target, name) => {\n                if (typeof name === 'string' && !target[name]) {\n                    if (propertyIsDynamicEvent(name)) {\n                        target[name] = (arg) => {\n                            return this.listen(channel, name, arg);\n                        };\n                    }\n                    else if (propertyIsEvent(name)) {\n                        target[name] = this.listen(channel, name, undefined);\n                    }\n                    else if (name.charCodeAt(0) === 36 ) {\n                        target[name] = async (...myArgs) => {\n                            await sendMessageBarrier?.();\n                            return this.sendMessage(channel, name, myArgs);\n                        };\n                    }\n                }\n                return target[name];\n            }\n        };\n        return ( new Proxy(Object.create(null), handler));\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 :\n                return this._handleReplyMessage(msg);\n            case 0 :\n                return this._handleRequestMessage(msg);\n            case 2 :\n                return this._handleSubscribeEventMessage(msg);\n            case 3 :\n                return this._handleEventMessage(msg);\n            case 4 :\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = ( new Error());\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(( new ReplyMessage(this._workerId, req, r, undefined)));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(( new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e))));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n            this._send(( new EventMessage(this._workerId, req, event)));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!( this._pendingEmitters.has(msg.req))) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!( this._pendingEvents.has(msg.req))) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 ) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 ) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\nclass SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, workerDescriptor) {\n        super();\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._worker = this._register(workerFactory.create({\n            amdModuleId: 'vs/base/common/worker/simpleWorker',\n            esmModuleLocation: workerDescriptor.esmModuleLocation,\n            label: workerDescriptor.label\n        }, (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            onUnexpectedError(err);\n        }));\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => {\n                return this._handleMessage(channel, method, args);\n            },\n            handleEvent: (channel, eventName, arg) => {\n                return this._handleEvent(channel, eventName, arg);\n            }\n        }));\n        this._protocol.setWorkerId(this._worker.getId());\n        let loaderConfiguration = null;\n        if (typeof globalThis.requirejs !== 'undefined') {\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        this._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            workerDescriptor.amdModuleId,\n        ]);\n        this.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n        this._onModuleLoaded.catch((e) => {\n            this._onError('Worker failed to load ' + workerDescriptor.amdModuleId, e);\n        });\n    }\n    _handleMessage(channelName, method, args) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            return Promise.reject(( new Error(`Missing channel ${channelName} on main thread`)));\n        }\n        if (typeof channel[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on main thread channel ${channelName}`)));\n        }\n        try {\n            return Promise.resolve(channel[method].apply(channel, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channelName, eventName, arg) {\n        const channel = this._localChannels.get(channelName);\n        if (!channel) {\n            throw ( new Error(`Missing channel ${channelName} on main thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = channel[eventName].call(channel, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(\n                    `Missing dynamic event ${eventName} on main thread channel ${channelName}.`\n                ));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = channel[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on main thread channel ${channelName}.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel, async () => { await this._onModuleLoaded; });\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    return name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    return /^onDynamic/.test(name) && isUpperAsciiLetter(name.charCodeAt(9));\n}\nclass SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._localChannels = ( new Map());\n        this._remoteChannels = ( new Map());\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (channel, method, args) => this._handleMessage(channel, method, args),\n            handleEvent: (channel, eventName, arg) => this._handleEvent(channel, eventName, arg)\n        }));\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(channel, method, args) {\n        if (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            return Promise.reject(( new Error(`Missing channel ${channel} on worker thread`)));\n        }\n        if (typeof requestHandler[method] !== 'function') {\n            return Promise.reject(( new Error(`Missing method ${method} on worker thread channel ${channel}`)));\n        }\n        try {\n            return Promise.resolve(requestHandler[method].apply(requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(channel, eventName, arg) {\n        const requestHandler = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n        if (!requestHandler) {\n            throw ( new Error(`Missing channel ${channel} on worker thread`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = requestHandler[eventName].call(requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing dynamic event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    setChannel(channel, handler) {\n        this._localChannels.set(channel, handler);\n    }\n    getChannel(channel) {\n        if (!( this._remoteChannels.has(channel))) {\n            const inst = this._protocol.createProxyToRemoteChannel(channel);\n            this._remoteChannels.set(channel, inst);\n        }\n        return this._remoteChannels.get(channel);\n    }\n    async initialize(workerId, loaderConfig, moduleId) {\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandlerFactory) {\n            this._requestHandler = this._requestHandlerFactory(this);\n            return;\n        }\n        if (loaderConfig) {\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n}\nexport { SimpleWorkerClient, SimpleWorkerServer, logOnceWebWorkerWarning };\n","class DiffChange {\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\nexport { DiffChange };\n","import { isHighSurrogate, isLowSurrogate, computeCodePoint } from './strings.js';\nfunction hash(obj) {\n    return doHash(obj, 0);\n}\nfunction doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nfunction numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0;\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nfunction stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return ( Object.keys(obj)).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nclass Hasher {\n    constructor() {\n        this._value = 0;\n    }\n    get value() {\n        return this._value;\n    }\n    hash(obj) {\n        this._value = doHash(obj, this._value);\n        return this._value;\n    }\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    const delta = totalBits - bits;\n    const mask = ~((1 << delta) - 1);\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nfunction toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return ( Array.from(( new Uint8Array(bufferOrValue))).map(b => ( b.toString(16)).padStart(2, '0'))).join('');\n    }\n    return leftPad(( (bufferOrValue >>> 0).toString(16)), bitsize / 4);\n}\nclass StringSHA1 {\n    static { this._bigBlock32 = ( new DataView(( new ArrayBuffer(320)))); }\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = ( new Uint8Array(64  + 3 ));\n        this._buffDV = ( new DataView(this._buff.buffer));\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        codePoint = 65533 ;\n                    }\n                }\n                else {\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (isLowSurrogate(charCode)) {\n                codePoint = 65533 ;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 ) {\n            this._step();\n            buffLen -= 64 ;\n            this._totalLen += 64 ;\n            buff[0] = buff[64  + 0];\n            buff[1] = buff[64  + 1];\n            buff[2] = buff[64  + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 );\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 ; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 ; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nexport { Hasher, StringSHA1, doHash, hash, numberHash, stringHash, toHexString };\n","import { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nclass StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = ( new Int32Array(source.length));\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nfunction stringDiff(original, modified, pretty) {\n    return ( new LcsDiff(( new StringDiffSequence(original)), ( new StringDiffSequence(modified)))).ComputeDiff(pretty).changes;\n}\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw ( new Error(message));\n        }\n    }\n}\nclass MyArray {\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\nclass DiffChangeHelper {\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 ;\n        this.m_modifiedStart = 1073741824 ;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    MarkNextChange() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.m_changes.push(( new DiffChange(\n                this.m_originalStart,\n                this.m_originalCount,\n                this.m_modifiedStart,\n                this.m_modifiedCount\n            )));\n        }\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 ;\n        this.m_modifiedStart = 1073741824 ;\n    }\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\nclass LcsDiff {\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = ( new Int32Array(elements.length));\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], ( new Int32Array(elements)), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                changes = [\n                    ( new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1))\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [\n                    ( new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0))\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [];\n            }\n            return changes;\n        }\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                rightChanges = [\n                    ( new DiffChange(\n                        midOriginal + 1,\n                        originalEnd - (midOriginal + 1) + 1,\n                        midModified + 1,\n                        modifiedEnd - (midModified + 1) + 1\n                    ))\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        return [\n            ( new DiffChange(\n                originalStart,\n                originalEnd - originalStart + 1,\n                modifiedStart,\n                modifiedEnd - modifiedStart + 1\n            ))\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        let changeHelper = ( new DiffChangeHelper());\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 ;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase;\n            }\n            else {\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase;\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0];\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                ( new DiffChange(\n                    originalStartPoint,\n                    originalEnd - originalStartPoint + 1,\n                    modifiedStartPoint,\n                    modifiedEnd - modifiedStartPoint + 1\n                ))\n            ];\n        }\n        else {\n            changeHelper = ( new DiffChangeHelper());\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 ;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase;\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0];\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        originalStart--;\n        modifiedStart--;\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = ( new Int32Array(numDiagonals));\n        const reversePoints = ( new Int32Array(numDiagonals));\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        quitEarlyArr[0] = false;\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                quitEarlyArr[0] = true;\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        ( new DiffChange(\n                            originalStart,\n                            originalEnd - originalStart + 1,\n                            modifiedStart,\n                            modifiedEnd - modifiedStart + 1\n                        ))\n                    ];\n                }\n            }\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447  > 0 && numDifferences <= (1447  + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            if (numDifferences <= 1447 ) {\n                let temp = ( new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2));\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = ( new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2));\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    PrettifyChanges(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            const result = ( new Array(left.length + right.length - 1));\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = ( new Array(left.length + right.length));\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = ( new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength));\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            return diagonal;\n        }\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\nexport { LcsDiff, StringDiffSequence, stringDiff };\n","class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return ( new Position(newLineNumber, newColumn));\n        }\n    }\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    clone() {\n        return ( new Position(this.lineNumber, this.column));\n    }\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    static lift(pos) {\n        return ( new Position(pos.lineNumber, pos.column));\n    }\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n    toJSON() {\n        return {\n            lineNumber: this.lineNumber,\n            column: this.column\n        };\n    }\n}\nexport { Position };\n","import { Position } from './position.js';\nclass Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return ( new Range(startLineNumber, startColumn, endLineNumber, endColumn));\n    }\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return ( new Range(\n            resultStartLineNumber,\n            resultStartColumn,\n            resultEndLineNumber,\n            resultEndColumn\n        ));\n    }\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    static getEndPosition(range) {\n        return ( new Position(range.endLineNumber, range.endColumn));\n    }\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    static getStartPosition(range) {\n        return ( new Position(range.startLineNumber, range.startColumn));\n    }\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        return ( new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        return ( new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n    }\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    static collapseToStart(range) {\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.startLineNumber,\n            range.startColumn\n        ));\n    }\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    static collapseToEnd(range) {\n        return ( new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn));\n    }\n    delta(lineCount) {\n        return ( new Range(\n            this.startLineNumber + lineCount,\n            this.startColumn,\n            this.endLineNumber + lineCount,\n            this.endColumn\n        ));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return ( new Range(\n            range.startLineNumber,\n            range.startColumn,\n            range.endLineNumber,\n            range.endColumn\n        ));\n    }\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    static areIntersectingOrTouching(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static areIntersecting(a, b) {\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        return true;\n    }\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\nexport { Range };\n","function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 ) {\n        return 255 ;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 ) {\n        return 4294967295 ;\n    }\n    return v | 0;\n}\nexport { toUint32, toUint8 };\n","import { toUint8 } from '../../../base/common/uint.js';\nclass CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = ( new Map());\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = ( new Uint8Array(256));\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nclass CharacterSet {\n    constructor() {\n        this._actual = ( new CharacterClassifier(0 ));\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 );\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1) ;\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\nexport { CharacterClassifier, CharacterSet };\n","import { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = ( new Uint8Array(rows * cols));\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nclass StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 ;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = ( new Uint8Matrix(maxState, maxCharCode, 0 ));\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 ;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = ( new StateMachine([\n            [1 , 104 , 2 ],\n            [1 , 72 , 2 ],\n            [1 , 102 , 6 ],\n            [1 , 70 , 6 ],\n            [2 , 116 , 3 ],\n            [2 , 84 , 3 ],\n            [3 , 116 , 4 ],\n            [3 , 84 , 4 ],\n            [4 , 112 , 5 ],\n            [4 , 80 , 5 ],\n            [5 , 115 , 9 ],\n            [5 , 83 , 9 ],\n            [5 , 58 , 10 ],\n            [6 , 105 , 7 ],\n            [6 , 73 , 7 ],\n            [7 , 108 , 8 ],\n            [7 , 76 , 8 ],\n            [8 , 101 , 9 ],\n            [8 , 69 , 9 ],\n            [9 , 58 , 10 ],\n            [10 , 47 , 11 ],\n            [11 , 47 , 12 ],\n        ]));\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = ( new CharacterClassifier(0 ));\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 );\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 );\n        }\n    }\n    return _classifier;\n}\nclass LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 ) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if (((charCodeBeforeLink === 40  && lastCharCodeInLink === 41) )\n                || ((charCodeBeforeLink === 91  && lastCharCodeInLink === 93) )\n                || ((charCodeBeforeLink === 123  && lastCharCodeInLink === 125) )) {\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 ;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 ) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 :\n                            hasOpenParens = true;\n                            chClass = 0 ;\n                            break;\n                        case 41 :\n                            chClass = ((hasOpenParens ? 0  : 1) );\n                            break;\n                        case 91 :\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 ;\n                            break;\n                        case 93 :\n                            inSquareBrackets = false;\n                            chClass = ((hasOpenSquareBracket ? 0  : 1) );\n                            break;\n                        case 123 :\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 ;\n                            break;\n                        case 125 :\n                            chClass = ((hasOpenCurlyBracket ? 0  : 1) );\n                            break;\n                        case 39 :\n                        case 34 :\n                        case 96 :\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 ;\n                            }\n                            else if (linkBeginChCode === 39  || linkBeginChCode === 34  || linkBeginChCode === 96 ) {\n                                chClass = 0 ;\n                            }\n                            else {\n                                chClass = 1 ;\n                            }\n                            break;\n                        case 42 :\n                            chClass = ((linkBeginChCode === 42) ) ? 1  : 0 ;\n                            break;\n                        case 124 :\n                            chClass = ((linkBeginChCode === 124) ) ? 1  : 0 ;\n                            break;\n                        case 32 :\n                            chClass = ((inSquareBrackets ? 0  : 1) );\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    if (chClass === 1 ) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 ) {\n                    let chClass;\n                    if (chCode === 91 ) {\n                        hasOpenSquareBracket = true;\n                        chClass = 0 ;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    if (chClass === 1 ) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 ;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 ) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 ;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 ) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\nexport { LinkComputer, StateMachine, computeLinks };\n","class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = ( new BasicInplaceReplace()); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null;\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nexport { BasicInplaceReplace };\n","class KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 ;\n    }\n}\nconst uiMap = ( new KeyCodeStrMap());\nconst userSettingsUSMap = ( new KeyCodeStrMap());\nconst userSettingsGeneralMap = ( new KeyCodeStrMap());\nconst EVENT_KEY_CODE_MAP = ( new Array(230));\nconst NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\nconst ScanCodeUtils = {\n    lowerCaseToEnum: (scanCode) => scanCodeLowerCaseStrToInt[scanCode] || 0 ,\n    toEnum: (scanCode) => scanCodeStrToInt[scanCode] || 0 ,\n    toString: (scanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\nconst IMMUTABLE_CODE_TO_KEY_CODE = [];\nconst IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 ; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 ;\n}\nfor (let i = 0; i <= 132 ; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 ;\n}\n(function () {\n    const empty = '';\n    const mappings = [\n        [1, 0 , 'None', 0 , 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 , 'Hyper', 0 , empty, 0, empty, empty, empty],\n        [1, 2 , 'Super', 0 , empty, 0, empty, empty, empty],\n        [1, 3 , 'Fn', 0 , empty, 0, empty, empty, empty],\n        [1, 4 , 'FnLock', 0 , empty, 0, empty, empty, empty],\n        [1, 5 , 'Suspend', 0 , empty, 0, empty, empty, empty],\n        [1, 6 , 'Resume', 0 , empty, 0, empty, empty, empty],\n        [1, 7 , 'Turbo', 0 , empty, 0, empty, empty, empty],\n        [1, 8 , 'Sleep', 0 , empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 , 'WakeUp', 0 , empty, 0, empty, empty, empty],\n        [0, 10 , 'KeyA', 31 , 'A', 65, 'VK_A', empty, empty],\n        [0, 11 , 'KeyB', 32 , 'B', 66, 'VK_B', empty, empty],\n        [0, 12 , 'KeyC', 33 , 'C', 67, 'VK_C', empty, empty],\n        [0, 13 , 'KeyD', 34 , 'D', 68, 'VK_D', empty, empty],\n        [0, 14 , 'KeyE', 35 , 'E', 69, 'VK_E', empty, empty],\n        [0, 15 , 'KeyF', 36 , 'F', 70, 'VK_F', empty, empty],\n        [0, 16 , 'KeyG', 37 , 'G', 71, 'VK_G', empty, empty],\n        [0, 17 , 'KeyH', 38 , 'H', 72, 'VK_H', empty, empty],\n        [0, 18 , 'KeyI', 39 , 'I', 73, 'VK_I', empty, empty],\n        [0, 19 , 'KeyJ', 40 , 'J', 74, 'VK_J', empty, empty],\n        [0, 20 , 'KeyK', 41 , 'K', 75, 'VK_K', empty, empty],\n        [0, 21 , 'KeyL', 42 , 'L', 76, 'VK_L', empty, empty],\n        [0, 22 , 'KeyM', 43 , 'M', 77, 'VK_M', empty, empty],\n        [0, 23 , 'KeyN', 44 , 'N', 78, 'VK_N', empty, empty],\n        [0, 24 , 'KeyO', 45 , 'O', 79, 'VK_O', empty, empty],\n        [0, 25 , 'KeyP', 46 , 'P', 80, 'VK_P', empty, empty],\n        [0, 26 , 'KeyQ', 47 , 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 , 'KeyR', 48 , 'R', 82, 'VK_R', empty, empty],\n        [0, 28 , 'KeyS', 49 , 'S', 83, 'VK_S', empty, empty],\n        [0, 29 , 'KeyT', 50 , 'T', 84, 'VK_T', empty, empty],\n        [0, 30 , 'KeyU', 51 , 'U', 85, 'VK_U', empty, empty],\n        [0, 31 , 'KeyV', 52 , 'V', 86, 'VK_V', empty, empty],\n        [0, 32 , 'KeyW', 53 , 'W', 87, 'VK_W', empty, empty],\n        [0, 33 , 'KeyX', 54 , 'X', 88, 'VK_X', empty, empty],\n        [0, 34 , 'KeyY', 55 , 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 , 'KeyZ', 56 , 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 , 'Digit1', 22 , '1', 49, 'VK_1', empty, empty],\n        [0, 37 , 'Digit2', 23 , '2', 50, 'VK_2', empty, empty],\n        [0, 38 , 'Digit3', 24 , '3', 51, 'VK_3', empty, empty],\n        [0, 39 , 'Digit4', 25 , '4', 52, 'VK_4', empty, empty],\n        [0, 40 , 'Digit5', 26 , '5', 53, 'VK_5', empty, empty],\n        [0, 41 , 'Digit6', 27 , '6', 54, 'VK_6', empty, empty],\n        [0, 42 , 'Digit7', 28 , '7', 55, 'VK_7', empty, empty],\n        [0, 43 , 'Digit8', 29 , '8', 56, 'VK_8', empty, empty],\n        [0, 44 , 'Digit9', 30 , '9', 57, 'VK_9', empty, empty],\n        [0, 45 , 'Digit0', 21 , '0', 48, 'VK_0', empty, empty],\n        [1, 46 , 'Enter', 3 , 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 , 'Escape', 9 , 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 , 'Backspace', 1 , 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 , 'Tab', 2 , 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 , 'Space', 10 , 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 , 'Minus', 88 , '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 , 'Equal', 86 , '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 , 'BracketLeft', 92 , '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 , 'BracketRight', 94 , ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 , 'Backslash', 93 , '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 , 'IntlHash', 0 , empty, 0, empty, empty, empty],\n        [0, 57 , 'Semicolon', 85 , ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 , 'Quote', 95 , '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 , 'Backquote', 91 , '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 , 'Comma', 87 , ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 , 'Period', 89 , '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 , 'Slash', 90 , '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 , 'CapsLock', 8 , 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 , 'F1', 59 , 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 , 'F2', 60 , 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 , 'F3', 61 , 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 , 'F4', 62 , 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 , 'F5', 63 , 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 , 'F6', 64 , 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 , 'F7', 65 , 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 , 'F8', 66 , 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 , 'F9', 67 , 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 , 'F10', 68 , 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 , 'F11', 69 , 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 , 'F12', 70 , 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 , 'PrintScreen', 0 , empty, 0, empty, empty, empty],\n        [1, 77 , 'ScrollLock', 84 , 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 , 'Pause', 7 , 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 , 'Insert', 19 , 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 , 'Home', 14 , 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 , 'PageUp', 11 , 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 , 'Delete', 20 , 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 , 'End', 13 , 'End', 35, 'VK_END', empty, empty],\n        [1, 84 , 'PageDown', 12 , 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 , 'ArrowRight', 17 , 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 , 'ArrowLeft', 15 , 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 , 'ArrowDown', 18 , 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 , 'ArrowUp', 16 , 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 , 'NumLock', 83 , 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 , 'NumpadDivide', 113 , 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 , 'NumpadMultiply', 108 , 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 , 'NumpadSubtract', 111 , 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 , 'NumpadAdd', 109 , 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 , 'NumpadEnter', 3 , empty, 0, empty, empty, empty],\n        [1, 95 , 'Numpad1', 99 , 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 , 'Numpad2', 100 , 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 , 'Numpad3', 101 , 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 , 'Numpad4', 102 , 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 , 'Numpad5', 103 , 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 , 'Numpad6', 104 , 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 , 'Numpad7', 105 , 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 , 'Numpad8', 106 , 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 , 'Numpad9', 107 , 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 , 'Numpad0', 98 , 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 , 'NumpadDecimal', 112 , 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 , 'IntlBackslash', 97 , 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 , 'ContextMenu', 58 , 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 , 'Power', 0 , empty, 0, empty, empty, empty],\n        [1, 109 , 'NumpadEqual', 0 , empty, 0, empty, empty, empty],\n        [1, 110 , 'F13', 71 , 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 , 'F14', 72 , 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 , 'F15', 73 , 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 , 'F16', 74 , 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 , 'F17', 75 , 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 , 'F18', 76 , 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 , 'F19', 77 , 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 , 'F20', 78 , 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 , 'F21', 79 , 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 , 'F22', 80 , 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 , 'F23', 81 , 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 , 'F24', 82 , 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 , 'Open', 0 , empty, 0, empty, empty, empty],\n        [1, 123 , 'Help', 0 , empty, 0, empty, empty, empty],\n        [1, 124 , 'Select', 0 , empty, 0, empty, empty, empty],\n        [1, 125 , 'Again', 0 , empty, 0, empty, empty, empty],\n        [1, 126 , 'Undo', 0 , empty, 0, empty, empty, empty],\n        [1, 127 , 'Cut', 0 , empty, 0, empty, empty, empty],\n        [1, 128 , 'Copy', 0 , empty, 0, empty, empty, empty],\n        [1, 129 , 'Paste', 0 , empty, 0, empty, empty, empty],\n        [1, 130 , 'Find', 0 , empty, 0, empty, empty, empty],\n        [1, 131 , 'AudioVolumeMute', 117 , 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 , 'AudioVolumeUp', 118 , 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 , 'AudioVolumeDown', 119 , 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 , 'NumpadComma', 110 , 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 , 'IntlRo', 115 , 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 , 'KanaMode', 0 , empty, 0, empty, empty, empty],\n        [0, 137 , 'IntlYen', 0 , empty, 0, empty, empty, empty],\n        [1, 138 , 'Convert', 0 , empty, 0, empty, empty, empty],\n        [1, 139 , 'NonConvert', 0 , empty, 0, empty, empty, empty],\n        [1, 140 , 'Lang1', 0 , empty, 0, empty, empty, empty],\n        [1, 141 , 'Lang2', 0 , empty, 0, empty, empty, empty],\n        [1, 142 , 'Lang3', 0 , empty, 0, empty, empty, empty],\n        [1, 143 , 'Lang4', 0 , empty, 0, empty, empty, empty],\n        [1, 144 , 'Lang5', 0 , empty, 0, empty, empty, empty],\n        [1, 145 , 'Abort', 0 , empty, 0, empty, empty, empty],\n        [1, 146 , 'Props', 0 , empty, 0, empty, empty, empty],\n        [1, 147 , 'NumpadParenLeft', 0 , empty, 0, empty, empty, empty],\n        [1, 148 , 'NumpadParenRight', 0 , empty, 0, empty, empty, empty],\n        [1, 149 , 'NumpadBackspace', 0 , empty, 0, empty, empty, empty],\n        [1, 150 , 'NumpadMemoryStore', 0 , empty, 0, empty, empty, empty],\n        [1, 151 , 'NumpadMemoryRecall', 0 , empty, 0, empty, empty, empty],\n        [1, 152 , 'NumpadMemoryClear', 0 , empty, 0, empty, empty, empty],\n        [1, 153 , 'NumpadMemoryAdd', 0 , empty, 0, empty, empty, empty],\n        [1, 154 , 'NumpadMemorySubtract', 0 , empty, 0, empty, empty, empty],\n        [1, 155 , 'NumpadClear', 131 , 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 , 'NumpadClearEntry', 0 , empty, 0, empty, empty, empty],\n        [1, 0 , empty, 5 , 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 , empty, 4 , 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 , empty, 6 , 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 , empty, 57 , 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 , 'ControlLeft', 5 , empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 , 'ShiftLeft', 4 , empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 , 'AltLeft', 6 , empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 , 'MetaLeft', 57 , empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 , 'ControlRight', 5 , empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 , 'ShiftRight', 4 , empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 , 'AltRight', 6 , empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 , 'MetaRight', 57 , empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 , 'BrightnessUp', 0 , empty, 0, empty, empty, empty],\n        [1, 166 , 'BrightnessDown', 0 , empty, 0, empty, empty, empty],\n        [1, 167 , 'MediaPlay', 0 , empty, 0, empty, empty, empty],\n        [1, 168 , 'MediaRecord', 0 , empty, 0, empty, empty, empty],\n        [1, 169 , 'MediaFastForward', 0 , empty, 0, empty, empty, empty],\n        [1, 170 , 'MediaRewind', 0 , empty, 0, empty, empty, empty],\n        [1, 171 , 'MediaTrackNext', 124 , 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 , 'MediaTrackPrevious', 125 , 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 , 'MediaStop', 126 , 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 , 'Eject', 0 , empty, 0, empty, empty, empty],\n        [1, 175 , 'MediaPlayPause', 127 , 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 , 'MediaSelect', 128 , 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 , 'LaunchMail', 129 , 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 , 'LaunchApp2', 130 , 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 , 'LaunchApp1', 0 , empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 , 'SelectTask', 0 , empty, 0, empty, empty, empty],\n        [1, 181 , 'LaunchScreenSaver', 0 , empty, 0, empty, empty, empty],\n        [1, 182 , 'BrowserSearch', 120 , 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 , 'BrowserHome', 121 , 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 , 'BrowserBack', 122 , 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 , 'BrowserForward', 123 , 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 , 'BrowserStop', 0 , empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 , 'BrowserRefresh', 0 , empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 , 'BrowserFavorites', 0 , empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 , 'ZoomToggle', 0 , empty, 0, empty, empty, empty],\n        [1, 190 , 'MailReply', 0 , empty, 0, empty, empty, empty],\n        [1, 191 , 'MailForward', 0 , empty, 0, empty, empty, empty],\n        [1, 192 , 'MailSend', 0 , empty, 0, empty, empty, empty],\n        [1, 0 , empty, 114 , 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 , empty, 116 , 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 , empty, 96 , 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 , empty, 0 , empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if (((keyCode !== 0) )\n                    && ((keyCode !== 3) )\n                    && ((keyCode !== 5) )\n                    && ((keyCode !== 4) )\n                    && ((keyCode !== 6) )\n                    && ((keyCode !== 57) )) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw ( new Error(\n                    `String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`\n                ));\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    IMMUTABLE_KEY_CODE_TO_CODE[3 ] = 46 ;\n})();\nvar KeyCodeUtils;\n( (function(KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98  && keyCode <= 113 ) {\n            return null;\n        }\n        switch (keyCode) {\n            case 16 :\n                return 'Up';\n            case 18 :\n                return 'Down';\n            case 15 :\n                return 'Left';\n            case 17 :\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {})));\nfunction KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCodeUtils, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCodeUtils };\n","import { isWindows, isMacintosh } from './platform.js';\nlet safeProcess;\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\nelse {\n    safeProcess = {\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined;  },\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\nconst cwd = safeProcess.cwd;\nconst env = safeProcess.env;\nconst platform = safeProcess.platform;\nconst arch = safeProcess.arch;\nexport { arch, cwd, env, platform };\n","import { cwd, env, platform } from './process.js';\nconst CHAR_UPPERCASE_A = 65;\nconst CHAR_LOWERCASE_A = 97;\nconst CHAR_UPPERCASE_Z = 90;\nconst CHAR_LOWERCASE_Z = 122;\nconst CHAR_DOT = 46;\nconst CHAR_FORWARD_SLASH = 47;\nconst CHAR_BACKWARD_SLASH = 92;\nconst CHAR_COLON = 58;\nconst CHAR_QUESTION_MARK = 63;\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw ( new ErrorInvalidArgType(name, 'Object', pathObject));\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw ( new ErrorInvalidArgType(name, 'string', value));\n    }\n}\nconst platformIsWin32 = (platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction formatExt(ext) {\n    return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nconst win32 = {\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, `paths[${i}]`);\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = cwd();\n            }\n            else {\n                path = env[`=${resolvedDevice}`] || cwd();\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        last = j;\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPathSeparator(code) ? path : '.';\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'suffix');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            if (len <= 2) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd$1 = cwd().replace(regexp, '/');\n            return cwd$1.slice(cwd$1.indexOf('/'));\n        };\n    }\n    return () => cwd();\n})();\nconst posix = {\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, `paths[${i}]`);\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, suffix) {\n        if (suffix !== undefined) {\n            validateString(suffix, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n            if (suffix === path) {\n                return '';\n            }\n            let extIdx = suffix.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === suffix.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nconst normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nconst isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nconst join = (platformIsWin32 ? win32.join : posix.join);\nconst resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nconst relative = (platformIsWin32 ? win32.relative : posix.relative);\nconst dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nconst basename = (platformIsWin32 ? win32.basename : posix.basename);\nconst extname = (platformIsWin32 ? win32.extname : posix.extname);\nconst parse = (platformIsWin32 ? win32.parse : posix.parse);\nconst sep = (platformIsWin32 ? win32.sep : posix.sep);\nconst delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\nexport { basename, delimiter, dirname, extname, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n","import { win32, posix } from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    if (!ret.scheme && _strict) {\n        throw ( new Error(\n            `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n        ));\n    }\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw ( new Error('[UriError]: Scheme contains illegal characters.'));\n    }\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n                ));\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n                ));\n            }\n        }\n    }\n}\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\nfunction _referenceResolution(scheme, path) {\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nclass URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    get fsPath() {\n        return uriToFsPath(this, false);\n    }\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return ( new Uri(scheme, authority, path, query, fragment));\n    }\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return ( new Uri(_empty, _empty, _empty, _empty, _empty));\n        }\n        return ( new Uri(\n            match[2] || _empty,\n            percentDecode(match[4] || _empty),\n            percentDecode(match[5] || _empty),\n            percentDecode(match[7] || _empty),\n            percentDecode(match[9] || _empty),\n            _strict\n        ));\n    }\n    static file(path) {\n        let authority = _empty;\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return ( new Uri('file', authority, path, _empty, _empty));\n    }\n    static from(components, strict) {\n        const result = ( new Uri(\n            components.scheme,\n            components.authority,\n            components.path,\n            components.query,\n            components.fragment,\n            strict\n        ));\n        return result;\n    }\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw ( new Error(`[UriError]: cannot call joinPath on URI without path`));\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = ( new Uri(data));\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n    [Symbol.for('debug.description')]() {\n        return `URI(${( this.toString())})`;\n    }\n}\nfunction isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1\n        };\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\nconst encodeTable = {\n    [58 ]: '%3A',\n    [47 ]: '%2F',\n    [63 ]: '%3F',\n    [35 ]: '%23',\n    [91 ]: '%5B',\n    [93 ]: '%5D',\n    [64 ]: '%40',\n    [33 ]: '%21',\n    [36 ]: '%24',\n    [38 ]: '%26',\n    [39 ]: '%27',\n    [40 ]: '%28',\n    [41 ]: '%29',\n    [42 ]: '%2A',\n    [43 ]: '%2B',\n    [44 ]: '%2C',\n    [59 ]: '%3B',\n    [61 ]: '%3D',\n    [32 ]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        if (((code >= 97  && code <= 122) )\n            || ((code >= 65  && code <= 90) )\n            || ((code >= 48  && code <= 57) )\n            || code === 45\n            || code === 46\n            || code === 95\n            || code === 126\n            || ((isPath && code === 47) )\n            || ((isAuthority && code === 91) )\n            || ((isAuthority && code === 93) )\n            || ((isAuthority && code === 58) )) {\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35  || code === 63 ) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47\n        && ((uri.path.charCodeAt(1) >= 65  && uri.path.charCodeAt(1) <= 90  || uri.path.charCodeAt(1) >= 97  && uri.path.charCodeAt(1) <= 122) )\n        && uri.path.charCodeAt(2) === 58 ) {\n        if (!keepDriveLetterCasing) {\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        if (path.length >= 3 && path.charCodeAt(0) === 47  && path.charCodeAt(2) === 58 ) {\n            const code = path.charCodeAt(1);\n            if (code >= 65  && code <= 90 ) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`;\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 ) {\n            const code = path.charCodeAt(0);\n            if (code >= 65  && code <= 90 ) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`;\n            }\n        }\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\nexport { URI, isUriComponents, uriToFsPath };\n","import { Position } from './position.js';\nimport { Range } from './range.js';\nclass Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 ;\n        }\n        return 1 ;\n    }\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 ) {\n            return ( new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn));\n    }\n    getPosition() {\n        return ( new Position(this.positionLineNumber, this.positionColumn));\n    }\n    getSelectionStart() {\n        return ( new Position(this.selectionStartLineNumber, this.selectionStartColumn));\n    }\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 ) {\n            return ( new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn));\n        }\n        return ( new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn));\n    }\n    static fromPositions(start, end = start) {\n        return ( new Selection(start.lineNumber, start.column, end.lineNumber, end.column));\n    }\n    static fromRange(range, direction) {\n        if (direction === 0 ) {\n            return ( new Selection(\n                range.startLineNumber,\n                range.startColumn,\n                range.endLineNumber,\n                range.endColumn\n            ));\n        }\n        else {\n            return ( new Selection(\n                range.endLineNumber,\n                range.endColumn,\n                range.startLineNumber,\n                range.startColumn\n            ));\n        }\n    }\n    static liftSelection(sel) {\n        return ( new Selection(\n            sel.selectionStartLineNumber,\n            sel.selectionStartColumn,\n            sel.positionLineNumber,\n            sel.positionColumn\n        ));\n    }\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 ) {\n            return ( new Selection(startLineNumber, startColumn, endLineNumber, endColumn));\n        }\n        return ( new Selection(endLineNumber, endColumn, startLineNumber, startColumn));\n    }\n}\nexport { Selection };\n","function isString(str) {\n    return (typeof str === 'string');\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\nfunction isObject(obj) {\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\nfunction isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\nfunction isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\nfunction isBoolean(obj) {\n    return (obj === true || obj === false);\n}\nfunction isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\nfunction isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\nfunction isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nfunction assertType(condition, type) {\n    if (!condition) {\n        throw ( new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type'));\n    }\n}\nfunction assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw ( new Error('Assertion Failed: argument is undefined or null'));\n    }\n    return arg;\n}\nfunction assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw ( new Error(`Assertion Failed: argument at index ${i} is undefined or null`));\n        }\n        result.push(arg);\n    }\n    return result;\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\nfunction areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nfunction validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw ( new Error(`argument does not match constraint: typeof ${constraint}`));\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw ( new Error(\n            `argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`\n        ));\n    }\n}\nexport { areFunctions, assertAllDefined, assertIsDefined, assertType, isBoolean, isDefined, isEmptyObject, isFunction, isIterable, isNumber, isObject, isString, isStringArray, isTypedArray, isUndefined, isUndefinedOrNull, validateConstraint, validateConstraints };\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw ( new Error(`${id} references an unknown codicon: ${fontCharacter}`));\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\nfunction getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\nexport { getCodiconFontCharacters, register };\n","import { register } from './codiconsUtil.js';\nconst codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n    attach: register('attach', 0xec34),\n};\nexport { codiconsLibrary };\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\nfunction getAllCodicons() {\n    return ( Object.values(Codicon));\n}\nconst codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\nconst Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\nexport { Codicon, codiconsDerived, getAllCodicons };\n","import { Emitter } from '../../base/common/event.js';\nimport { toDisposable, Disposable } from '../../base/common/lifecycle.js';\nclass TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = ( new Map());\n        this._factories = ( new Map());\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        this._factories.get(languageId)?.dispose();\n        const myData = ( new TokenizationSupportFactoryData(this, languageId, factory));\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(( this._tokenizationSupports.keys())),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 ) {\n            return this._colorMap[2 ];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\nexport { TokenizationRegistry };\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { EditOperation } from './core/editOperation.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistry$1 } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\nclass Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nclass TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\nclass EncodedTokenizationResult {\n    constructor(\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nvar HoverVerbosityAction;\n( ((function(HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}))));\nvar CompletionItemKinds;\n( ((function(CompletionItemKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(0 , Codicon.symbolMethod);\n    byKind.set(1 , Codicon.symbolFunction);\n    byKind.set(2 , Codicon.symbolConstructor);\n    byKind.set(3 , Codicon.symbolField);\n    byKind.set(4 , Codicon.symbolVariable);\n    byKind.set(5 , Codicon.symbolClass);\n    byKind.set(6 , Codicon.symbolStruct);\n    byKind.set(7 , Codicon.symbolInterface);\n    byKind.set(8 , Codicon.symbolModule);\n    byKind.set(9 , Codicon.symbolProperty);\n    byKind.set(10 , Codicon.symbolEvent);\n    byKind.set(11 , Codicon.symbolOperator);\n    byKind.set(12 , Codicon.symbolUnit);\n    byKind.set(13 , Codicon.symbolValue);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(14 , Codicon.symbolConstant);\n    byKind.set(15 , Codicon.symbolEnum);\n    byKind.set(16 , Codicon.symbolEnumMember);\n    byKind.set(17 , Codicon.symbolKeyword);\n    byKind.set(27 , Codicon.symbolSnippet);\n    byKind.set(18 , Codicon.symbolText);\n    byKind.set(19 , Codicon.symbolColor);\n    byKind.set(20 , Codicon.symbolFile);\n    byKind.set(21 , Codicon.symbolReference);\n    byKind.set(22 , Codicon.symbolCustomColor);\n    byKind.set(23 , Codicon.symbolFolder);\n    byKind.set(24 , Codicon.symbolTypeParameter);\n    byKind.set(25 , Codicon.account);\n    byKind.set(26 , Codicon.issues);\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = ( (new Map()));\n    data.set('method', 0 );\n    data.set('function', 1 );\n    data.set('constructor', 2 );\n    data.set('field', 3 );\n    data.set('variable', 4 );\n    data.set('class', 5 );\n    data.set('struct', 6 );\n    data.set('interface', 7 );\n    data.set('module', 8 );\n    data.set('property', 9 );\n    data.set('event', 10 );\n    data.set('operator', 11 );\n    data.set('unit', 12 );\n    data.set('value', 13 );\n    data.set('constant', 14 );\n    data.set('enum', 15 );\n    data.set('enum-member', 16 );\n    data.set('enumMember', 16 );\n    data.set('keyword', 17 );\n    data.set('snippet', 27 );\n    data.set('text', 18 );\n    data.set('color', 19 );\n    data.set('file', 20 );\n    data.set('reference', 21 );\n    data.set('customcolor', 22 );\n    data.set('folder', 23 );\n    data.set('type-parameter', 24 );\n    data.set('typeParameter', 24 );\n    data.set('account', 25 );\n    data.set('issue', 26 );\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 ;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}))));\nvar InlineCompletionTriggerKind;\n( ((function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}))));\nclass SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nvar DocumentPasteTriggerKind;\n( ((function(DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}))));\nvar SignatureHelpTriggerKind;\n( ((function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}))));\nvar DocumentHighlightKind;\n( ((function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}))));\nfunction isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\nfunction isLocation(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range);\n}\nconst symbolKindNames = {\n    [17 ]: ( localize(1678, \"array\")),\n    [16 ]: ( localize(1679, \"boolean\")),\n    [4 ]: ( localize(1680, \"class\")),\n    [13 ]: ( localize(1681, \"constant\")),\n    [8 ]: ( localize(1682, \"constructor\")),\n    [9 ]: ( localize(1683, \"enumeration\")),\n    [21 ]: ( localize(1684, \"enumeration member\")),\n    [23 ]: ( localize(1685, \"event\")),\n    [7 ]: ( localize(1686, \"field\")),\n    [0 ]: ( localize(1687, \"file\")),\n    [11 ]: ( localize(1688, \"function\")),\n    [10 ]: ( localize(1689, \"interface\")),\n    [19 ]: ( localize(1690, \"key\")),\n    [5 ]: ( localize(1691, \"method\")),\n    [1 ]: ( localize(1692, \"module\")),\n    [2 ]: ( localize(1693, \"namespace\")),\n    [20 ]: ( localize(1694, \"null\")),\n    [15 ]: ( localize(1695, \"number\")),\n    [18 ]: ( localize(1696, \"object\")),\n    [24 ]: ( localize(1697, \"operator\")),\n    [3 ]: ( localize(1698, \"package\")),\n    [6 ]: ( localize(1699, \"property\")),\n    [14 ]: ( localize(1700, \"string\")),\n    [22 ]: ( localize(1701, \"struct\")),\n    [25 ]: ( localize(1702, \"type parameter\")),\n    [12 ]: ( localize(1703, \"variable\")),\n};\nfunction getAriaLabelForSymbol(symbolName, kind) {\n    return ( localize(1704, '{0} ({1})', symbolName, symbolKindNames[kind]));\n}\nvar SymbolKinds;\n( ((function(SymbolKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(0 , Codicon.symbolFile);\n    byKind.set(1 , Codicon.symbolModule);\n    byKind.set(2 , Codicon.symbolNamespace);\n    byKind.set(3 , Codicon.symbolPackage);\n    byKind.set(4 , Codicon.symbolClass);\n    byKind.set(5 , Codicon.symbolMethod);\n    byKind.set(6 , Codicon.symbolProperty);\n    byKind.set(7 , Codicon.symbolField);\n    byKind.set(8 , Codicon.symbolConstructor);\n    byKind.set(9 , Codicon.symbolEnum);\n    byKind.set(10 , Codicon.symbolInterface);\n    byKind.set(11 , Codicon.symbolFunction);\n    byKind.set(12 , Codicon.symbolVariable);\n    byKind.set(13 , Codicon.symbolConstant);\n    byKind.set(14 , Codicon.symbolString);\n    byKind.set(15 , Codicon.symbolNumber);\n    byKind.set(16 , Codicon.symbolBoolean);\n    byKind.set(17 , Codicon.symbolArray);\n    byKind.set(18 , Codicon.symbolObject);\n    byKind.set(19 , Codicon.symbolKey);\n    byKind.set(20 , Codicon.symbolNull);\n    byKind.set(21 , Codicon.symbolEnumMember);\n    byKind.set(22 , Codicon.symbolStruct);\n    byKind.set(23 , Codicon.symbolEvent);\n    byKind.set(24 , Codicon.symbolOperator);\n    byKind.set(25 , Codicon.symbolTypeParameter);\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}))));\nclass TextEdit {\n    static asEditOperation(edit) {\n        return EditOperation.replace(Range.lift(edit.range), edit.text);\n    }\n}\nclass FoldingRangeKind {\n    static { this.Comment = ( (new FoldingRangeKind('comment'))); }\n    static { this.Imports = ( (new FoldingRangeKind('imports'))); }\n    static { this.Region = ( (new FoldingRangeKind('region'))); }\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return (\n             (new FoldingRangeKind(value))\n        );\n    }\n    constructor(value) {\n        this.value = value;\n    }\n}\nvar NewSymbolNameTag;\n( ((function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}))));\nvar NewSymbolNameTriggerKind;\n( ((function(NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}))));\nvar Command;\n( ((function(Command) {\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}))));\nvar CommentThreadCollapsibleState;\n( ((function(CommentThreadCollapsibleState) {\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Collapsed\"] = 0] = \"Collapsed\";\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Expanded\"] = 1] = \"Expanded\";\n})(CommentThreadCollapsibleState || (CommentThreadCollapsibleState = {}))));\nvar CommentThreadState;\n( ((function(CommentThreadState) {\n    CommentThreadState[CommentThreadState[\"Unresolved\"] = 0] = \"Unresolved\";\n    CommentThreadState[CommentThreadState[\"Resolved\"] = 1] = \"Resolved\";\n})(CommentThreadState || (CommentThreadState = {}))));\nvar CommentThreadApplicability;\n( ((function(CommentThreadApplicability) {\n    CommentThreadApplicability[CommentThreadApplicability[\"Current\"] = 0] = \"Current\";\n    CommentThreadApplicability[CommentThreadApplicability[\"Outdated\"] = 1] = \"Outdated\";\n})(CommentThreadApplicability || (CommentThreadApplicability = {}))));\nvar CommentMode;\n( ((function(CommentMode) {\n    CommentMode[CommentMode[\"Editing\"] = 0] = \"Editing\";\n    CommentMode[CommentMode[\"Preview\"] = 1] = \"Preview\";\n})(CommentMode || (CommentMode = {}))));\nvar InlayHintKind;\n( ((function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}))));\nclass LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\nconst TokenizationRegistry = ( (new TokenizationRegistry$1()));\nconst TreeSitterTokenizationRegistry = ( (new TokenizationRegistry$1()));\nvar ExternalUriOpenerPriority;\n( ((function(ExternalUriOpenerPriority) {\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"None\"] = 0] = \"None\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Option\"] = 1] = \"Option\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Default\"] = 2] = \"Default\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Preferred\"] = 3] = \"Preferred\";\n})(ExternalUriOpenerPriority || (ExternalUriOpenerPriority = {}))));\nvar InlineEditTriggerKind;\n( ((function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}))));\nexport { Command, CommentMode, CommentThreadApplicability, CommentThreadCollapsibleState, CommentThreadState, CompletionItemKinds, DocumentHighlightKind, DocumentPasteTriggerKind, EncodedTokenizationResult, ExternalUriOpenerPriority, FoldingRangeKind, HoverVerbosityAction, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, LazyTokenizationSupport, NewSymbolNameTag, NewSymbolNameTriggerKind, SelectedSuggestionInfo, SignatureHelpTriggerKind, SymbolKinds, TextEdit, Token, TokenizationRegistry, TokenizationResult, TreeSitterTokenizationRegistry, getAriaLabelForSymbol, isLocation, isLocationLink, symbolKindNames };\n","var AccessibilitySupport;\n( (function(AccessibilitySupport) {\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {})));\nvar CodeActionTriggerType;\n( (function(CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {})));\nvar CompletionItemInsertTextRule;\n( (function(CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {})));\nvar CompletionItemKind;\n( (function(CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {})));\nvar CompletionItemTag;\n( (function(CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {})));\nvar CompletionTriggerKind;\n( (function(CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {})));\nvar ContentWidgetPositionPreference;\n( (function(ContentWidgetPositionPreference) {\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {})));\nvar CursorChangeReason;\n( (function(CursorChangeReason) {\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {})));\nvar DefaultEndOfLine;\n( (function(DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {})));\nvar DocumentHighlightKind;\n( (function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {})));\nvar EditorAutoIndentStrategy;\n( (function(EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {})));\nvar EditorOption;\n( (function(EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"experimentalEditContextEnabled\"] = 37] = \"experimentalEditContextEnabled\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 38] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalGpuAcceleration\"] = 39] = \"experimentalGpuAcceleration\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 40] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 41] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 42] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 43] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 44] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 45] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 46] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 47] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 48] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 49] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 50] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 51] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 52] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 53] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 54] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 55] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 56] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 57] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 58] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 59] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 60] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 61] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 62] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 63] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 64] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"inlineEdit\"] = 65] = \"inlineEdit\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 66] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 67] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 68] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 69] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 70] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 71] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 72] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 73] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 74] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 75] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 76] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 77] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 78] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 79] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 80] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 81] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 82] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 83] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 84] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 85] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 86] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 87] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 88] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 89] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"placeholder\"] = 90] = \"placeholder\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 91] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 92] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 93] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 94] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 95] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 96] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 97] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 98] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 99] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 100] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 101] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 102] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 103] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 104] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 105] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 106] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 107] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 108] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 109] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 110] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 111] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 112] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 113] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 114] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 115] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 116] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 117] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 118] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 119] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 120] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 121] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 122] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 123] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 124] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 125] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 126] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 127] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 128] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 129] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 130] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 131] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 132] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSegmenterLocales\"] = 133] = \"wordSegmenterLocales\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 134] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 135] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 136] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 137] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 138] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 139] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 140] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 141] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 142] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 143] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 144] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 145] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 146] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 147] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 148] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 149] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 150] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 151] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 152] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {})));\nvar EndOfLinePreference;\n( (function(EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {})));\nvar EndOfLineSequence;\n( (function(EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar HoverVerbosityAction;\n( (function(HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {})));\nvar IndentAction;\n( (function(IndentAction) {\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nvar InlayHintKind;\n( (function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {})));\nvar InlineCompletionTriggerKind;\n( (function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {})));\nvar InlineEditTriggerKind;\n( (function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {})));\nvar KeyCode;\n( (function(KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {})));\nvar MarkerSeverity;\n( (function(MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {})));\nvar MarkerTag;\n( (function(MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {})));\nvar MinimapPosition;\n( (function(MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {})));\nvar MinimapSectionHeaderStyle;\n( (function(MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {})));\nvar MouseTargetType;\n( (function(MouseTargetType) {\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {})));\nvar NewSymbolNameTag;\n( (function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {})));\nvar NewSymbolNameTriggerKind;\n( (function(NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {})));\nvar OverlayWidgetPositionPreference;\n( (function(OverlayWidgetPositionPreference) {\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {})));\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar PartialAcceptTriggerKind;\n( (function(PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {})));\nvar PositionAffinity;\n( (function(PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {})));\nvar RenderLineNumbersType;\n( (function(RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {})));\nvar RenderMinimap;\n( (function(RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {})));\nvar ScrollType;\n( (function(ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {})));\nvar ScrollbarVisibility;\n( (function(ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {})));\nvar SelectionDirection;\n( (function(SelectionDirection) {\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {})));\nvar ShowLightbulbIconMode;\n( (function(ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {})));\nvar SignatureHelpTriggerKind;\n( (function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {})));\nvar SymbolKind;\n( (function(SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {})));\nvar SymbolTag;\n( (function(SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {})));\nvar TextEditorCursorBlinkingStyle;\n( (function(TextEditorCursorBlinkingStyle) {\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {})));\nvar TextEditorCursorStyle;\n( (function(TextEditorCursorStyle) {\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {})));\nvar TrackedRangeStickiness;\n( (function(TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {})));\nvar WrappingIndent;\n( (function(WrappingIndent) {\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {})));\nexport { AccessibilitySupport, CodeActionTriggerType, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemTag, CompletionTriggerKind, ContentWidgetPositionPreference, CursorChangeReason, DefaultEndOfLine, DocumentHighlightKind, EditorAutoIndentStrategy, EditorOption, EndOfLinePreference, EndOfLineSequence, GlyphMarginLane, HoverVerbosityAction, IndentAction, InjectedTextCursorStops, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, KeyCode, MarkerSeverity, MarkerTag, MinimapPosition, MinimapSectionHeaderStyle, MouseTargetType, NewSymbolNameTag, NewSymbolNameTriggerKind, OverlayWidgetPositionPreference, OverviewRulerLane, PartialAcceptTriggerKind, PositionAffinity, RenderLineNumbersType, RenderMinimap, ScrollType, ScrollbarVisibility, SelectionDirection, ShowLightbulbIconMode, SignatureHelpTriggerKind, SymbolKind, SymbolTag, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, TrackedRangeStickiness, WrappingIndent };\n","import { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport { KeyCode, SelectionDirection, MarkerSeverity, MarkerTag } from '../standalone/standaloneEnums.js';\nclass KeyMod {\n    static { this.CtrlCmd = 2048 ; }\n    static { this.Shift = 1024 ; }\n    static { this.Alt = 512 ; }\n    static { this.WinCtrl = 256 ; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\nexport { KeyMod, createMonacoBaseAPI };\n","class EditorWorkerHost {\n    static { this.CHANNEL_NAME = 'editorWorkerHost'; }\n    static getChannel(workerServer) {\n        return workerServer.getChannel(EditorWorkerHost.CHANNEL_NAME);\n    }\n    static setChannel(workerClient, obj) {\n        workerClient.setChannel(EditorWorkerHost.CHANNEL_NAME, obj);\n    }\n}\nexport { EditorWorkerHost };\n","import { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\nclass WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators, intlSegmenterLocales) {\n        super(0 );\n        this._segmenter = null;\n        this._cachedLine = null;\n        this._cachedSegments = [];\n        this.intlSegmenterLocales = intlSegmenterLocales;\n        if (this.intlSegmenterLocales.length > 0) {\n            this._segmenter = new Intl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n        }\n        else {\n            this._segmenter = null;\n        }\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 );\n        }\n        this.set(32 , 1 );\n        this.set(9 , 1 );\n    }\n    findPrevIntlWordBeforeOrAtOffset(line, offset) {\n        let candidate = null;\n        for (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n            if (segment.index > offset) {\n                break;\n            }\n            candidate = segment;\n        }\n        return candidate;\n    }\n    findNextIntlWordAtOrAfterOffset(lineContent, offset) {\n        for (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n            if (segment.index < offset) {\n                continue;\n            }\n            return segment;\n        }\n        return null;\n    }\n    _getIntlSegmenterWordsOnLine(line) {\n        if (!this._segmenter) {\n            return [];\n        }\n        if (this._cachedLine === line) {\n            return this._cachedSegments;\n        }\n        this._cachedLine = line;\n        this._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n        return this._cachedSegments;\n    }\n    _filterWordSegments(segments) {\n        const result = [];\n        for (const segment of segments) {\n            if (this._isWordLike(segment)) {\n                result.push(segment);\n            }\n        }\n        return result;\n    }\n    _isWordLike(segment) {\n        if (segment.isWordLike) {\n            return true;\n        }\n        return false;\n    }\n}\nconst wordClassifierCache = ( new LRUCache(10));\nfunction getMapForWordSeparators(wordSeparators, intlSegmenterLocales) {\n    const key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n    let result = wordClassifierCache.get(key);\n    if (!result) {\n        result = ( new WordCharacterClassifier(wordSeparators, intlSegmenterLocales));\n        wordClassifierCache.set(key, result);\n    }\n    return result;\n}\nexport { WordCharacterClassifier, getMapForWordSeparators };\n","import { isUndefinedOrNull, isObject, isTypedArray } from './types.js';\nfunction deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nfunction deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, ( new Set()));\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (( seen.has(obj))) {\n            throw ( new Error('Cannot clone recursive data-structure'));\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        ( Object.keys(source)).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction safeStringify(obj) {\n    const seen = ( new Set());\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (( seen.has(value))) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        if (typeof value === 'bigint') {\n            return `[BigInt ${( value.toString())}]`;\n        }\n        return value;\n    });\n}\nfunction distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = ( Object.keys(target));\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nfunction filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nfunction getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nfunction getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nfunction mapValues(obj, fn) {\n    const result = {};\n    for (const [key, value] of Object.entries(obj)) {\n        result[key] = fn(value, key);\n    }\n    return result;\n}\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mapValues, mixin, safeStringify };\n","import { equals } from '../../base/common/objects.js';\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nclass TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nclass FindMatch {\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\nfunction isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\nclass ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\nclass SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\nclass ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\nfunction shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\nexport { ApplyEditsResult, FindMatch, GlyphMarginLane, InjectedTextCursorStops, OverviewRulerLane, SearchData, TextModelResolvedOptions, ValidAnnotatedEditOperation, isITextSnapshot, shouldSynchronizeModel };\n","import { createRegExp, getNextCodePoint } from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SearchData, FindMatch } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nclass SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            canUseSimpleSearch = this.matchCase;\n        }\n        return ( new SearchData(\n            regex,\n            this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null,\n            canUseSimpleSearch ? this.searchString : null\n        ));\n    }\n}\nfunction isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 10 ) {\n            return true;\n        }\n        if (chCode === 92 ) {\n            i++;\n            if (i >= len) {\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110  || nextChCode === 114  || nextChCode === 87 ) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return ( new FindMatch(range, null));\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return ( new FindMatch(range, matches));\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 ) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nclass TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, ( new Searcher(searchData.wordSeparators, searchData.regex)), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch ;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch ;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        const text = model.getValueInRange(searchRange, 1 );\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = ( new FindMatch(( new Range(\n                        lineNumber,\n                        lastMatchIndex + 1 + deltaOffset,\n                        lineNumber,\n                        lastMatchIndex + 1 + searchStringLen + deltaOffset\n                    )), null));\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        let m;\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(( new Range(\n                    lineNumber,\n                    m.index + 1 + deltaOffset,\n                    lineNumber,\n                    m.index + 1 + m[0].length + deltaOffset\n                )), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = ( new Position(searchStart.lineNumber, 1));\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        const text = model.getValueInRange(( new Range(\n            searchTextStart.lineNumber,\n            searchTextStart.column,\n            lineCount,\n            model.getLineMaxColumn(lineCount)\n        )), 1 );\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            return this._doFindNextMatchMultiline(model, ( new Position(1, 1)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, ( new Range(1, 1, searchStart.lineNumber, searchStart.column)), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            return this._doFindPreviousMatchMultiline(model, ( new Position(lineCount, model.getLineMaxColumn(lineCount))), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 ) {\n        return true;\n    }\n    if (charBefore === 13  || charBefore === 10 ) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 ) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 ) {\n        return true;\n    }\n    if (charAfter === 13  || charAfter === 10 ) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 ) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nclass Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    if (getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\nexport { SearchParams, Searcher, TextModelSearch, createFindMatch, isMultilineRegexSource, isValidMatch };\n","import { onUnexpectedError, BugIndicatingError } from './errors.js';\nfunction ok(value, message) {\n    if (!value) {\n        throw ( new Error(message ? `Assertion failed (${message})` : 'Assertion Failed'));\n    }\n}\nfunction assertNever(value, message = 'Unreachable') {\n    throw ( new Error(message));\n}\nfunction assert(condition, message = 'unexpected state') {\n    if (!condition) {\n        throw ( new BugIndicatingError(`Assertion Failed: ${message}`));\n    }\n}\nfunction softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(( new BugIndicatingError('Soft Assertion Failed')));\n    }\n}\nfunction assertFn(condition) {\n    if (!condition()) {\n        debugger;\n        condition();\n        onUnexpectedError(( new BugIndicatingError('Assertion Failed')));\n    }\n}\nfunction checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nexport { assert, assertFn, assertNever, checkAdjacentItems, ok, softAssert };\n","import { Iterable } from '../../../base/common/iterator.js';\nimport '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nconst USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return ( new RegExp(source, 'g'));\n}\nconst DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = ( new RegExp(wordDefinition.source, flags));\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = ( new LinkedList());\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nfunction getWordAtText(column, wordDefinition, text, textOffset, config) {\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            break;\n        }\n        match = thisMatch;\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\nexport { DEFAULT_WORD_REGEXP, USUAL_WORD_SEPARATORS, ensureValidWordDefinition, getWordAtText };\n","import { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport { isHighSurrogate, AmbiguousCharacters, escapeRegExpCharacters, InvisibleCharacters, isBasicASCII } from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { getWordAtText, DEFAULT_WORD_REGEXP } from '../core/wordHelper.js';\nclass UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = ( new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g'));\n        }\n        else {\n            regex = ( new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g'));\n        }\n        const searcher = ( new Searcher(null, regex));\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 ) {\n                        if (highlightReason === 3 ) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 ) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 ) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever();\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(( new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1)));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 :\n                return null;\n            case 2 :\n                return { kind: 1  };\n            case 3 : {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = AmbiguousCharacters.getLocales().filter((l) => !AmbiguousCharacters.getInstance(( new Set([...options.allowedLocales, l]))).isAmbiguous(codePoint));\n                return { kind: 0 , confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 :\n                return { kind: 2  };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${escapeRegExpCharacters(( codePoints.map((i) => String.fromCodePoint(i))).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = ( new Set(options.allowedCodePoints));\n        this.ambiguousCharacters = AmbiguousCharacters.getInstance(( new Set(options.allowedLocales)));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = ( new Set());\n        if (this.options.invisibleCharacters) {\n            for (const cp of InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (( this.allowedCodePoints.has(codePoint))) {\n            return 0 ;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 ;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII$1 = isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII$1;\n                if (!isBasicASCII$1 &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n         !hasBasicASCIICharacters &&\n             hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 ;\n        }\n        if (this.options.invisibleCharacters) {\n            if (!isAllowedInvisibleCharacter(character) && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 ;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 ;\n            }\n        }\n        return 0 ;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\nexport { UnicodeTextModelHighlighter };\n","class LinesDiff {\n    constructor(changes,\n    moves,\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n    flip() {\n        return ( new MovedText(this.lineRangeMapping.flip(), ( this.changes.map(c => c.flip()))));\n    }\n}\nexport { LinesDiff, MovedText };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nclass OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static ofLength(length) {\n        return ( new OffsetRange(0, length));\n    }\n    static ofStartAndLength(start, length) {\n        return ( new OffsetRange(start, start + length));\n    }\n    static emptyAt(offset) {\n        return ( new OffsetRange(offset, offset));\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw ( new BugIndicatingError(`Invalid range: ${( this.toString())}`));\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive + offset));\n    }\n    deltaStart(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive));\n    }\n    deltaEnd(offset) {\n        return ( new OffsetRange(this.start, this.endExclusive + offset));\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    join(other) {\n        return ( new OffsetRange(\n            Math.min(this.start, other.start),\n            Math.max(this.endExclusive, other.endExclusive)\n        ));\n    }\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return ( new OffsetRange(start, end));\n        }\n        return undefined;\n    }\n    intersectionLength(range) {\n        const start = Math.max(this.start, range.start);\n        const end = Math.min(this.endExclusive, range.endExclusive);\n        return Math.max(0, end - start);\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    intersectsOrTouches(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start <= end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    clip(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    map(f) {\n        const result = [];\n        for (let i = this.start; i < this.endExclusive; i++) {\n            result.push(f(i));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nclass OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    toString() {\n        return ( this._sortedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    intersectsStrict(other) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        const result = ( new OffsetRangeSet());\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\nexport { OffsetRange, OffsetRangeSet };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\nclass LineRange {\n    static fromRange(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber));\n    }\n    static fromRangeInclusive(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber + 1));\n    }\n    static subtract(a, b) {\n        if (!b) {\n            return [a];\n        }\n        if (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [\n                ( new LineRange(a.startLineNumber, b.startLineNumber)),\n                ( new LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive))\n            ];\n        }\n        else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n            return [];\n        }\n        else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [( new LineRange(\n                Math.max(b.endLineNumberExclusive, a.startLineNumber),\n                a.endLineNumberExclusive\n            ))];\n        }\n        else {\n            return [( new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive)))];\n        }\n    }\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = ( new LineRangeSet(lineRanges[0].slice()));\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(( new LineRangeSet(lineRanges[i].slice())));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw ( new BugIndicatingError('lineRanges cannot be empty'));\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return ( new LineRange(startLineNumber, endLineNumberExclusive));\n    }\n    static ofLength(startLineNumber, length) {\n        return ( new LineRange(startLineNumber, startLineNumber + length));\n    }\n    static deserialize(lineRange) {\n        return ( new LineRange(lineRange[0], lineRange[1]));\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw ( new BugIndicatingError(\n                `startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`\n            ));\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    delta(offset) {\n        return ( new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset));\n    }\n    deltaLength(offset) {\n        return ( new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset));\n    }\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    join(other) {\n        return ( new LineRange(\n            Math.min(this.startLineNumber, other.startLineNumber),\n            Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n        ));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return ( new LineRange(startLineNumber, endLineNumberExclusive));\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return ( new Range(\n            this.startLineNumber,\n            1,\n            this.endLineNumberExclusive - 1,\n            Number.MAX_SAFE_INTEGER\n        ));\n    }\n    toExclusiveRange() {\n        return ( new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1));\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    toOffsetRange() {\n        return ( new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1));\n    }\n}\nclass LineRangeSet {\n    constructor(\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    current = ( new LineRange(\n                        current.startLineNumber,\n                        Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive)\n                    ));\n                }\n                else {\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return ( new LineRangeSet(result));\n    }\n    subtractFrom(range) {\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return ( new LineRangeSet([range]));\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(( new LineRange(startLineNumber, r.startLineNumber)));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(( new LineRange(startLineNumber, range.endLineNumberExclusive)));\n        }\n        return ( new LineRangeSet(result));\n    }\n    toString() {\n        return ( this._normalizedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return ( new LineRangeSet(result));\n    }\n    getWithDelta(value) {\n        return ( new LineRangeSet(( this._normalizedRanges.map(r => r.delta(value)))));\n    }\n}\nexport { LineRange, LineRangeSet };\n","import { Position } from './position.js';\nimport { Range } from './range.js';\nclass TextLength {\n    static { this.zero = ( new TextLength(0, 0)); }\n    static lengthDiffNonNegative(start, end) {\n        if (end.isLessThan(start)) {\n            return TextLength.zero;\n        }\n        if (start.lineCount === end.lineCount) {\n            return ( new TextLength(0, end.columnCount - start.columnCount));\n        }\n        else {\n            return ( new TextLength(end.lineCount - start.lineCount, end.columnCount));\n        }\n    }\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return ( new TextLength(0, position2.column - position1.column));\n        }\n        else {\n            return ( new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1));\n        }\n    }\n    static fromPosition(pos) {\n        return ( new TextLength(pos.lineNumber - 1, pos.column - 1));\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return ( new TextLength(line, column));\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isZero() {\n        return this.lineCount === 0 && this.columnCount === 0;\n    }\n    isLessThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount < other.lineCount;\n        }\n        return this.columnCount < other.columnCount;\n    }\n    isGreaterThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount > other.columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    equals(other) {\n        return this.lineCount === other.lineCount && this.columnCount === other.columnCount;\n    }\n    compare(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount - other.lineCount;\n        }\n        return this.columnCount - other.columnCount;\n    }\n    add(other) {\n        if (other.lineCount === 0) {\n            return ( new TextLength(this.lineCount, this.columnCount + other.columnCount));\n        }\n        else {\n            return ( new TextLength(this.lineCount + other.lineCount, other.columnCount));\n        }\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber,\n                startPosition.column + this.columnCount\n            ));\n        }\n        else {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber + this.lineCount,\n                this.columnCount + 1\n            ));\n        }\n    }\n    toRange() {\n        return ( new Range(1, 1, this.lineCount + 1, this.columnCount + 1));\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return ( new Position(position.lineNumber, position.column + this.columnCount));\n        }\n        else {\n            return ( new Position(position.lineNumber + this.lineCount, this.columnCount + 1));\n        }\n    }\n    addToRange(range) {\n        return Range.fromPositions(this.addToPosition(range.getStartPosition()), this.addToPosition(range.getEndPosition()));\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\nexport { TextLength };\n","import { findLastIdxMonotonous } from '../../../base/common/arraysFind.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Position } from './position.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.text = text;\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n    getOffsetRange(range) {\n        return ( new OffsetRange(\n            this.getOffset(range.getStartPosition()),\n            this.getOffset(range.getEndPosition())\n        ));\n    }\n    getPosition(offset) {\n        const idx = findLastIdxMonotonous(this.lineStartOffsetByLineIdx, i => i <= offset);\n        const lineNumber = idx + 1;\n        const column = offset - this.lineStartOffsetByLineIdx[idx] + 1;\n        return ( new Position(lineNumber, column));\n    }\n    getRange(offsetRange) {\n        return Range.fromPositions(this.getPosition(offsetRange.start), this.getPosition(offsetRange.endExclusive));\n    }\n    getTextLength(offsetRange) {\n        return TextLength.ofRange(this.getRange(offsetRange));\n    }\n    get textLength() {\n        const lineIdx = this.lineStartOffsetByLineIdx.length - 1;\n        return ( new TextLength(lineIdx, this.text.length - this.lineStartOffsetByLineIdx[lineIdx]));\n    }\n}\nexport { PositionOffsetTransformer };\n","import { assertFn, checkAdjacentItems, assert } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Position } from './position.js';\nimport { PositionOffsetTransformer } from './positionToOffset.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\nclass TextEdit {\n    static single(originalRange, newText) {\n        return ( new TextEdit([( new SingleTextEdit(originalRange, newText))]));\n    }\n    static insert(position, newText) {\n        return ( new TextEdit([( new SingleTextEdit(Range.fromPositions(position, position), newText))]));\n    }\n    constructor(edits) {\n        this.edits = edits;\n        assertFn(() => checkAdjacentItems(edits, (a, b) => a.range.getEndPosition().isBeforeOrEqual(b.range.getStartPosition())));\n    }\n    normalize() {\n        const edits = [];\n        for (const edit of this.edits) {\n            if (edits.length > 0 && edits[edits.length - 1].range.getEndPosition().equals(edit.range.getStartPosition())) {\n                const last = edits[edits.length - 1];\n                edits[edits.length - 1] = ( new SingleTextEdit(last.range.plusRange(edit.range), last.text + edit.text));\n            }\n            else if (!edit.isEmpty) {\n                edits.push(edit);\n            }\n        }\n        return ( new TextEdit(edits));\n    }\n    mapPosition(position) {\n        let lineDelta = 0;\n        let curLine = 0;\n        let columnDeltaInCurLine = 0;\n        for (const edit of this.edits) {\n            const start = edit.range.getStartPosition();\n            if (position.isBeforeOrEqual(start)) {\n                break;\n            }\n            const end = edit.range.getEndPosition();\n            const len = TextLength.ofText(edit.text);\n            if (position.isBefore(end)) {\n                const startPos = ( new Position(\n                    start.lineNumber + lineDelta,\n                    start.column + (start.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n                ));\n                const endPos = len.addToPosition(startPos);\n                return rangeFromPositions(startPos, endPos);\n            }\n            if (start.lineNumber + lineDelta !== curLine) {\n                columnDeltaInCurLine = 0;\n            }\n            lineDelta += len.lineCount - (edit.range.endLineNumber - edit.range.startLineNumber);\n            if (len.lineCount === 0) {\n                if (end.lineNumber !== start.lineNumber) {\n                    columnDeltaInCurLine += len.columnCount - (end.column - 1);\n                }\n                else {\n                    columnDeltaInCurLine += len.columnCount - (end.column - start.column);\n                }\n            }\n            else {\n                columnDeltaInCurLine = len.columnCount;\n            }\n            curLine = end.lineNumber + lineDelta;\n        }\n        return ( new Position(\n            position.lineNumber + lineDelta,\n            position.column + (position.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n        ));\n    }\n    mapRange(range) {\n        function getStart(p) {\n            return p instanceof Position ? p : p.getStartPosition();\n        }\n        function getEnd(p) {\n            return p instanceof Position ? p : p.getEndPosition();\n        }\n        const start = getStart(this.mapPosition(range.getStartPosition()));\n        const end = getEnd(this.mapPosition(range.getEndPosition()));\n        return rangeFromPositions(start, end);\n    }\n    inverseMapPosition(positionAfterEdit, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapPosition(positionAfterEdit);\n    }\n    inverseMapRange(range, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapRange(range);\n    }\n    apply(text) {\n        let result = '';\n        let lastEditEnd = ( new Position(1, 1));\n        for (const edit of this.edits) {\n            const editRange = edit.range;\n            const editStart = editRange.getStartPosition();\n            const editEnd = editRange.getEndPosition();\n            const r = rangeFromPositions(lastEditEnd, editStart);\n            if (!r.isEmpty()) {\n                result += text.getValueOfRange(r);\n            }\n            result += edit.text;\n            lastEditEnd = editEnd;\n        }\n        const r = rangeFromPositions(lastEditEnd, text.endPositionExclusive);\n        if (!r.isEmpty()) {\n            result += text.getValueOfRange(r);\n        }\n        return result;\n    }\n    applyToString(str) {\n        const strText = ( new StringText(str));\n        return this.apply(strText);\n    }\n    inverse(doc) {\n        const ranges = this.getNewRanges();\n        return ( new TextEdit(( this.edits.map((e, idx) => ( new SingleTextEdit(ranges[idx], doc.getValueOfRange(e.range)))))));\n    }\n    getNewRanges() {\n        const newRanges = [];\n        let previousEditEndLineNumber = 0;\n        let lineOffset = 0;\n        let columnOffset = 0;\n        for (const edit of this.edits) {\n            const textLength = TextLength.ofText(edit.text);\n            const newRangeStart = Position.lift({\n                lineNumber: edit.range.startLineNumber + lineOffset,\n                column: edit.range.startColumn + (edit.range.startLineNumber === previousEditEndLineNumber ? columnOffset : 0)\n            });\n            const newRange = textLength.createRange(newRangeStart);\n            newRanges.push(newRange);\n            lineOffset = newRange.endLineNumber - edit.range.endLineNumber;\n            columnOffset = newRange.endColumn - edit.range.endColumn;\n            previousEditEndLineNumber = edit.range.endLineNumber;\n        }\n        return newRanges;\n    }\n}\nclass SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    get isEmpty() {\n        return this.range.isEmpty() && this.text.length === 0;\n    }\n    static equals(first, second) {\n        return first.range.equalsRange(second.range) && first.text === second.text;\n    }\n    toSingleEditOperation() {\n        return {\n            range: this.range,\n            text: this.text,\n        };\n    }\n    toEdit() {\n        return ( new TextEdit([this]));\n    }\n    equals(other) {\n        return SingleTextEdit.equals(this, other);\n    }\n}\nfunction rangeFromPositions(start, end) {\n    if (start.lineNumber === end.lineNumber && start.column === Number.MAX_SAFE_INTEGER) {\n        return Range.fromPositions(end, end);\n    }\n    else if (!start.isBeforeOrEqual(end)) {\n        throw ( new BugIndicatingError('start must be before end'));\n    }\n    return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n}\nclass AbstractText {\n    get endPositionExclusive() {\n        return this.length.addToPosition(( new Position(1, 1)));\n    }\n    getValue() {\n        return this.getValueOfRange(this.length.toRange());\n    }\n    getLineLength(lineNumber) {\n        return this.getValueOfRange(( new Range(lineNumber, 1, lineNumber, Number.MAX_SAFE_INTEGER))).length;\n    }\n}\nclass LineBasedText extends AbstractText {\n    constructor(_getLineContent, _lineCount) {\n        assert(_lineCount >= 1);\n        super();\n        this._getLineContent = _getLineContent;\n        this._lineCount = _lineCount;\n    }\n    getValueOfRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._getLineContent(range.startLineNumber).substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let result = this._getLineContent(range.startLineNumber).substring(range.startColumn - 1);\n        for (let i = range.startLineNumber + 1; i < range.endLineNumber; i++) {\n            result += '\\n' + this._getLineContent(i);\n        }\n        result += '\\n' + this._getLineContent(range.endLineNumber).substring(0, range.endColumn - 1);\n        return result;\n    }\n    getLineLength(lineNumber) {\n        return this._getLineContent(lineNumber).length;\n    }\n    get length() {\n        const lastLine = this._getLineContent(this._lineCount);\n        return ( new TextLength(this._lineCount - 1, lastLine.length));\n    }\n}\nclass ArrayText extends LineBasedText {\n    constructor(lines) {\n        super(lineNumber => lines[lineNumber - 1], lines.length);\n    }\n}\nclass StringText extends AbstractText {\n    constructor(value) {\n        super();\n        this.value = value;\n        this._t = ( new PositionOffsetTransformer(this.value));\n    }\n    getValueOfRange(range) {\n        return this._t.getOffsetRange(range).substring(this.value);\n    }\n    get length() {\n        return this._t.textLength;\n    }\n}\nexport { AbstractText, ArrayText, LineBasedText, SingleTextEdit, StringText, TextEdit };\n","import { groupAdjacentBy } from '../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\nclass LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber)), ( new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber))));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, originalLineCount + 1)), ( new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1))));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(( new LineRangeMapping(original, modified)));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${( this.original.toString())}->${( this.modified.toString())}}`;\n    }\n    flip() {\n        return ( new LineRangeMapping(this.modified, this.original));\n    }\n    join(other) {\n        return ( new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified)));\n    }\n    get changedLineCount() {\n        return Math.max(this.original.length, this.modified.length);\n    }\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return ( new RangeMapping(origInclusiveRange, modInclusiveRange));\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                throw ( new BugIndicatingError('not a valid diff'));\n            }\n            return ( new RangeMapping(( new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1)), ( new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1))));\n        }\n        else {\n            return ( new RangeMapping(( new Range(\n                this.original.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.original.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            )), ( new Range(\n                this.modified.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.modified.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            ))));\n        }\n    }\n    toRangeMapping2(original, modified) {\n        if (isValidLineNumber(this.original.endLineNumberExclusive, original)\n            && isValidLineNumber(this.modified.endLineNumberExclusive, modified)) {\n            return ( new RangeMapping(( new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1)), ( new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1))));\n        }\n        if (!this.original.isEmpty && !this.modified.isEmpty) {\n            return ( new RangeMapping(Range.fromPositions(( new Position(this.original.startLineNumber, 1)), normalizePosition(( new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), original)), Range.fromPositions(( new Position(this.modified.startLineNumber, 1)), normalizePosition(( new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), modified))));\n        }\n        if (this.original.startLineNumber > 1 && this.modified.startLineNumber > 1) {\n            return ( new RangeMapping(Range.fromPositions(normalizePosition(( new Position(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER)), original), normalizePosition(( new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), original)), Range.fromPositions(normalizePosition(( new Position(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER)), modified), normalizePosition(( new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER)), modified))));\n        }\n        throw ( new BugIndicatingError());\n    }\n}\nfunction normalizePosition(position, content) {\n    if (position.lineNumber < 1) {\n        return ( new Position(1, 1));\n    }\n    if (position.lineNumber > content.length) {\n        return ( new Position(content.length, content[content.length - 1].length + 1));\n    }\n    const line = content[position.lineNumber - 1];\n    if (position.column > line.length + 1) {\n        return ( new Position(position.lineNumber, line.length + 1));\n    }\n    return position;\n}\nfunction isValidLineNumber(lineNumber, lines) {\n    return lineNumber >= 1 && lineNumber <= lines.length;\n}\nclass DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange))));\n        const modifiedRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange))));\n        return ( new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings));\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return ( new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip())));\n    }\n    withInnerChangesFromLineRanges() {\n        return ( new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]));\n    }\n}\nclass RangeMapping {\n    static fromEdit(edit) {\n        const newRanges = edit.getNewRanges();\n        const result = ( edit.edits.map((e, idx) => ( new RangeMapping(e.range, newRanges[idx]))));\n        return result;\n    }\n    static fromEditJoin(edit) {\n        const newRanges = edit.getNewRanges();\n        const result = ( edit.edits.map((e, idx) => ( new RangeMapping(e.range, newRanges[idx]))));\n        return RangeMapping.join(result);\n    }\n    static join(rangeMappings) {\n        if (rangeMappings.length === 0) {\n            throw ( new BugIndicatingError('Cannot join an empty list of range mappings'));\n        }\n        let result = rangeMappings[0];\n        for (let i = 1; i < rangeMappings.length; i++) {\n            result = result.join(rangeMappings[i]);\n        }\n        return result;\n    }\n    static assertSorted(rangeMappings) {\n        for (let i = 1; i < rangeMappings.length; i++) {\n            const previous = rangeMappings[i - 1];\n            const current = rangeMappings[i];\n            if (!(previous.originalRange.getEndPosition().isBeforeOrEqual(current.originalRange.getStartPosition())\n                && previous.modifiedRange.getEndPosition().isBeforeOrEqual(current.modifiedRange.getStartPosition()))) {\n                throw ( new BugIndicatingError('Range mappings must be sorted'));\n            }\n        }\n    }\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${( this.originalRange.toString())}->${( this.modifiedRange.toString())}}`;\n    }\n    flip() {\n        return ( new RangeMapping(this.modifiedRange, this.originalRange));\n    }\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return ( new SingleTextEdit(this.originalRange, newText));\n    }\n    join(other) {\n        return ( new RangeMapping(\n            this.originalRange.plusRange(other.originalRange),\n            this.modifiedRange.plusRange(other.modifiedRange)\n        ));\n    }\n}\nfunction lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(( alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines))), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(( new DetailedLineRangeMapping(\n            first.original.join(last.original),\n            first.modified.join(last.modified),\n            ( g.map(a => a.innerChanges[0]))\n        )));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length.lineCount - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length.lineCount - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nfunction getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        lineEndDelta = -1;\n    }\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines.getLineLength(rangeMapping.modifiedRange.startLineNumber)\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines.getLineLength(rangeMapping.originalRange.startLineNumber)\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        lineStartDelta = 1;\n    }\n    const originalLineRange = ( new LineRange(\n        rangeMapping.originalRange.startLineNumber + lineStartDelta,\n        rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta\n    ));\n    const modifiedLineRange = ( new LineRange(\n        rangeMapping.modifiedRange.startLineNumber + lineStartDelta,\n        rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta\n    ));\n    return ( new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]));\n}\nexport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping, getLineRangeMapping, lineRangeMappingFromRangeMappings };\n","import { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from './rangeMapping.js';\nimport { firstNonWhitespaceIndex, lastNonWhitespaceIndex } from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nclass LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        }));\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                originalRange = ( new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1));\n            }\n            else {\n                originalRange = ( new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1));\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1));\n            }\n            else {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1));\n            }\n            let change = ( new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => ( new RangeMapping(( new Range(\n                c.originalStartLineNumber,\n                c.originalStartColumn,\n                c.originalEndLineNumber,\n                c.originalEndColumn\n            )), ( new Range(\n                c.modifiedStartLineNumber,\n                c.modifiedStartColumn,\n                c.modifiedEndLineNumber,\n                c.modifiedEndColumn\n            )))))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    change = ( new DetailedLineRangeMapping(\n                        lastChange.original.join(change.original),\n                        lastChange.modified.join(change.modified),\n                        lastChange.innerChanges && change.innerChanges ?\n                            lastChange.innerChanges.concat(change.innerChanges) : undefined\n                    ));\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return ( new LinesDiff(changes, [], result.quitEarly));\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = ( new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate));\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                charCodes[len] = 10 ;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return ( new CharSequence(charCodes, lineNumbers, columns));\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + ( this._charCodes.map(\n            (s, idx) => (s === 10  ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`\n        )).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw ( new Error(`Illegal index`));\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 ) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 ) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return ( new CharChange(\n            originalStartLineNumber,\n            originalStartColumn,\n            originalEndLineNumber,\n            originalEndColumn,\n            modifiedStartLineNumber,\n            modifiedStartColumn,\n            modifiedEndLineNumber,\n            modifiedEndColumn\n        ));\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return ( new LineChange(\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges\n        ));\n    }\n}\nclass DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = ( new LineSequence(originalLines));\n        this.modified = ( new LineSequence(modifiedLines));\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000));\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 , len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [( new CharChange(\n                originalLineNumber,\n                originalStartColumn,\n                originalLineNumber,\n                originalEndColumn,\n                modifiedLineNumber,\n                modifiedStartColumn,\n                modifiedLineNumber,\n                modifiedEndColumn\n            ))];\n        }\n        result.push(( new LineChange(\n            originalLineNumber,\n            originalLineNumber,\n            modifiedLineNumber,\n            modifiedLineNumber,\n            charChanges\n        )));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\nexport { DiffComputer, LegacyLinesDiffComputer };\n","import { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nclass DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], false));\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], true));\n    }\n    constructor(diffs,\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : ( new OffsetPair(\n                doc1Length,\n                (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length\n            ))));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return ( new SequenceDiff(( new OffsetRange(start.offset1, endExclusive.offset1)), ( new OffsetRange(start.offset2, endExclusive.offset2))));\n    }\n    static assertSorted(sequenceDiffs) {\n        let last = undefined;\n        for (const cur of sequenceDiffs) {\n            if (last) {\n                if (!(last.seq1Range.endExclusive <= cur.seq1Range.start && last.seq2Range.endExclusive <= cur.seq2Range.start)) {\n                    throw ( new BugIndicatingError('Sequence diffs must be sorted'));\n                }\n            }\n            last = cur;\n        }\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return ( new SequenceDiff(this.seq2Range, this.seq1Range));\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return ( new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range)));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset)));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset)));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset)));\n    }\n    intersectsOrTouches(other) {\n        return this.seq1Range.intersectsOrTouches(other.seq1Range) || this.seq2Range.intersectsOrTouches(other.seq2Range);\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return ( new SequenceDiff(i1, i2));\n    }\n    getStarts() {\n        return ( new OffsetPair(this.seq1Range.start, this.seq2Range.start));\n    }\n    getEndExclusives() {\n        return ( new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive));\n    }\n}\nclass OffsetPair {\n    static { this.zero = ( new OffsetPair(0, 0)); }\n    static { this.max = ( new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new OffsetPair(this.offset1 + offset, this.offset2 + offset));\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nclass InfiniteTimeout {\n    static { this.instance = ( new InfiniteTimeout()); }\n    isValid() {\n        return true;\n    }\n}\nclass DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw ( new BugIndicatingError('timeout must be positive'));\n        }\n    }\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false;\n        }\n        return this.valid;\n    }\n    disable() {\n        this.timeout = Number.MAX_SAFE_INTEGER;\n        this.isValid = () => true;\n        this.valid = true;\n    }\n}\nexport { DateTimeout, DiffAlgorithmResult, InfiniteTimeout, OffsetPair, SequenceDiff };\n","class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = ( new Array(width * height));\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nfunction isSpace(charCode) {\n    return charCode === 32  || charCode === 9 ;\n}\nclass LineRangeFragment {\n    static { this.chrKeys = ( new Map()); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\nexport { Array2D, LineRangeFragment, isSpace };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\nclass DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        const lcsLengths = ( new Array2D(sequence1.length, sequence2.length));\n        const directions = ( new Array2D(sequence1.length, sequence2.length));\n        const lengths = ( new Array2D(sequence1.length, sequence2.length));\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(s1 + 1, lastAligningPosS1)), ( new OffsetRange(s2 + 1, lastAligningPosS2)))));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nexport { DynamicProgrammingDiffing };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nclass MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1;\n        const seqY = seq2;\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        const V = ( new FastInt32Array());\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = ( new FastArrayNegativeIndices());\n        paths.set(0, V.get(0) === 0 ? null : ( new SnakePath(null, 0, 0, V.get(0))));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1);\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                if (x > seqX.length || y > seqY.length) {\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? ( new SnakePath(lastPath, x, y, newMaxX - x)) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(endX, lastAligningPosS1)), ( new OffsetRange(endY, lastAligningPosS2)))));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = ( new Int32Array(10));\n        this.negativeArr = ( new Int32Array(10));\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = ( new Int32Array(arr.length * 2));\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = ( new Int32Array(arr.length * 2));\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nexport { MyersDiffAlgorithm };\n","import { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nclass LinesSliceCharSequence {\n    constructor(lines, range, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.range = range;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstElementOffsetByLineIdx = [];\n        this.lineStartOffsets = [];\n        this.trimmedWsLengthsByLineIdx = [];\n        this.firstElementOffsetByLineIdx.push(0);\n        for (let lineNumber = this.range.startLineNumber; lineNumber <= this.range.endLineNumber; lineNumber++) {\n            let line = lines[lineNumber - 1];\n            let lineStartOffset = 0;\n            if (lineNumber === this.range.startLineNumber && this.range.startColumn > 1) {\n                lineStartOffset = this.range.startColumn - 1;\n                line = line.substring(lineStartOffset);\n            }\n            this.lineStartOffsets.push(lineStartOffset);\n            let trimmedWsLength = 0;\n            if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                trimmedWsLength = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.trimmedWsLengthsByLineIdx.push(trimmedWsLength);\n            const lineLength = lineNumber === this.range.endLineNumber ? Math.min(this.range.endColumn - 1 - lineStartOffset - trimmedWsLength, line.length) : line.length;\n            for (let i = 0; i < lineLength; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (lineNumber < this.range.endLineNumber) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstElementOffsetByLineIdx.push(this.elements.length);\n            }\n        }\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(( new OffsetRange(0, this.length)));\n    }\n    getText(range) {\n        return ( this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e))).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 7  && nextCategory === 8 ) {\n            return 0;\n        }\n        if (prevCategory === 8 ) {\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0  && nextCategory === 1 ) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset, preference = 'right') {\n        const i = findLastIdxMonotonous(this.firstElementOffsetByLineIdx, (value) => value <= offset);\n        const lineOffset = offset - this.firstElementOffsetByLineIdx[i];\n        return ( new Position(\n            this.range.startLineNumber + i,\n            1 + this.lineStartOffsets[i] + lineOffset + ((lineOffset === 0 && preference === 'left') ? 0 : this.trimmedWsLengthsByLineIdx[i])\n        ));\n    }\n    translateRange(range) {\n        const pos1 = this.translateOffset(range.start, 'right');\n        const pos2 = this.translateOffset(range.endExclusive, 'left');\n        if (pos2.isBefore(pos1)) {\n            return Range.fromPositions(pos2, pos2);\n        }\n        return Range.fromPositions(pos1, pos2);\n    }\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return ( new OffsetRange(start, end));\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstElementOffsetByLineIdx, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstElementOffsetByLineIdx, x => range.endExclusive <= x) ?? this.elements.length;\n        return ( new OffsetRange(start, end));\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97  && charCode <= 122\n        || charCode >= 65  && charCode <= 90\n        || charCode >= 48  && charCode <= 57 ;\n}\nconst score = {\n    [0 ]: 0,\n    [1 ]: 0,\n    [2 ]: 0,\n    [3 ]: 10,\n    [4 ]: 2,\n    [5 ]: 30,\n    [6 ]: 3,\n    [7 ]: 10,\n    [8 ]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 ) {\n        return 8 ;\n    }\n    else if (charCode === 13 ) {\n        return 7 ;\n    }\n    else if (isSpace(charCode)) {\n        return 6 ;\n    }\n    else if (charCode >= 97  && charCode <= 122 ) {\n        return 0 ;\n    }\n    else if (charCode >= 65  && charCode <= 90 ) {\n        return 1 ;\n    }\n    else if (charCode >= 48  && charCode <= 57 ) {\n        return 2 ;\n    }\n    else if (charCode === -1) {\n        return 3 ;\n    }\n    else if (charCode === 44  || charCode === 59 ) {\n        return 5 ;\n    }\n    else {\n        return 4 ;\n    }\n}\nexport { LinesSliceCharSequence };\n","import { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { findLastMonotonous, MonotonousArray } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { isSpace, LineRangeFragment } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { Range } from '../../core/range.js';\nfunction computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !( excludedChanges.has(c)));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    moves = moves.filter(current => {\n        const lines = ( current.original.toOffsetRange().slice(originalLines).map(l => l.trim()));\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = ( changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => ( new LineRangeFragment(d.original, originalLines, d))));\n    const insertions = ( new Set(( changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => ( new LineRangeFragment(d.modified, modifiedLines, d))))));\n    const excludedChanges = ( new Set());\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(( new LineRangeMapping(deletion.range, best.range)));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = ( new SetMap());\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: ( new LineRange(i, i + 3)) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = ( new LineRange(i, i + 3));\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = ( new LineRange(\n                            lastMapping.originalLineRange.startLineNumber,\n                            range.endLineNumberExclusive\n                        ));\n                        lastMapping.modifiedLineRange = ( new LineRange(\n                            lastMapping.modifiedLineRange.startLineNumber,\n                            currentModifiedRange.endLineNumberExclusive\n                        ));\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = ( new LineRangeSet());\n    const originalSet = ( new LineRangeSet());\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(( new LineRangeMapping(originalLineRange, modifiedLineRange)));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = ( new MonotonousArray(changes));\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(( new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber)));\n            modifiedSet.addRange(( new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber)));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(( new LineRange(\n                move.original.endLineNumberExclusive,\n                move.original.endLineNumberExclusive + extendToBottom\n            )));\n            modifiedSet.addRange(( new LineRange(\n                move.modified.endLineNumberExclusive,\n                move.modified.endLineNumberExclusive + extendToBottom\n            )));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = ( new LineRangeMapping(( new LineRange(\n                move.original.startLineNumber - extendToTop,\n                move.original.endLineNumberExclusive + extendToBottom\n            )), ( new LineRange(\n                move.modified.startLineNumber - extendToTop,\n                move.modified.endLineNumberExclusive + extendToBottom\n            ))));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    const result = myersDiffingAlgorithm.compute(( new LinesSliceCharSequence([line1], ( new Range(1, 1, 1, line1.length)), false)), ( new LinesSliceCharSequence([line2], ( new Range(1, 1, 1, line2.length)), false)), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = ( new MonotonousArray(changes));\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || ( new LineRangeMapping(( new LineRange(1, 1)), ( new LineRange(1, 1))));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\nexport { computeMovedLines };\n","import { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { SequenceDiff, OffsetPair } from './algorithms/diffAlgorithm.js';\nfunction optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                result[result.length - 1] = ( new SequenceDiff(( new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length)), ( new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length))));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                result[i + 1] = ( new SequenceDiff(( new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive)), ( new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive))));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length\n        ));\n        const seq2ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length\n        ));\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100;\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    let bestDelta = 0;\n    let bestScore = -1;\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nfunction removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = ( new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range)));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nfunction extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = ( new OffsetPair(0, 0));\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = ( new SequenceDiff(w1, w2));\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            const v = ( new SequenceDiff(v1, v2));\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nfunction removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nfunction removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(( new OffsetRange(fullRange1.start, cur.seq1Range.start)));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(( new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive)));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\nexport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs };\n","class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32  || str.charCodeAt(i) === 9 )) {\n        i++;\n    }\n    return i;\n}\nexport { LineSequence };\n","import { equals } from '../../../../base/common/arrays.js';\nimport { assertFn } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { ArrayText } from '../../core/textEdit.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, lineRangeMappingFromRangeMappings, LineRangeMapping } from '../rangeMapping.js';\nimport { InfiniteTimeout, DateTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { optimizeSequenceDiffs, removeVeryShortMatchingLinesBetweenDiffs, extendDiffsToEntireWordIfAppropriate, removeShortMatches, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nclass DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = ( new DynamicProgrammingDiffing());\n        this.myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return ( new LinesDiff([], [], false));\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return ( new LinesDiff([\n                ( new DetailedLineRangeMapping(( new LineRange(1, originalLines.length + 1)), ( new LineRange(1, modifiedLines.length + 1)), [\n                    ( new RangeMapping(( new Range(\n                        1,\n                        1,\n                        originalLines.length,\n                        originalLines[originalLines.length - 1].length + 1\n                    )), ( new Range(\n                        1,\n                        1,\n                        modifiedLines.length,\n                        modifiedLines[modifiedLines.length - 1].length + 1\n                    ))))\n                ]))\n            ], [], false));\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : ( new DateTimeout(options.maxComputationTimeMs));\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = ( new Map());\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = ( originalLines.map((l) => getOrCreateHash(l.trim())));\n        const modifiedLinesHashes = ( modifiedLines.map((l) => getOrCreateHash(l.trim())));\n        const sequence1 = ( new LineSequence(originalLinesHashes, originalLines));\n        const sequence2 = ( new LineSequence(modifiedLinesHashes, modifiedLines));\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(( new OffsetRange(seq1Offset, seq1Offset + 1)), ( new OffsetRange(seq2Offset, seq2Offset + 1)))), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, ( new ArrayText(originalLines)), ( new ArrayText(modifiedLines)));\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return ( new LinesDiff(changes, moves, hitTimeout));\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = ( moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange())), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, ( new ArrayText(originalLines)), ( new ArrayText(modifiedLines)), true);\n            return ( new MovedText(m, mappings));\n        }));\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const lineRangeMapping = toLineRangeMapping(diff);\n        const rangeMapping = lineRangeMapping.toRangeMapping2(originalLines, modifiedLines);\n        const slice1 = ( new LinesSliceCharSequence(originalLines, rangeMapping.originalRange, considerWhitespaceChanges));\n        const slice2 = ( new LinesSliceCharSequence(modifiedLines, rangeMapping.modifiedRange, considerWhitespaceChanges));\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = ( diffs.map((d) => ( new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)))));\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nfunction toLineRangeMapping(sequenceDiff) {\n    return ( new LineRangeMapping(( new LineRange(sequenceDiff.seq1Range.start + 1, sequenceDiff.seq1Range.endExclusive + 1)), ( new LineRange(sequenceDiff.seq2Range.start + 1, sequenceDiff.seq2Range.endExclusive + 1))));\n}\nexport { DefaultLinesDiffComputer };\n","import { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nconst linesDiffComputers = {\n    getLegacy: () => ( new LegacyLinesDiffComputer()),\n    getDefault: () => ( new DefaultLinesDiffComputer()),\n};\nexport { linesDiffComputers };\n","function roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nclass RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nclass HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return ( new HSLA(h, s, l, a));\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return ( new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a));\n    }\n}\nclass HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return ( new HSVA(Math.round(m * 60), s, cmax, rgba.a));\n    }\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return ( new RGBA(r, g, b, a));\n    }\n}\nclass Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw ( new Error('Color needs a value'));\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw ( new Error('Invalid color ctor argument'));\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    reduceRelativeLuminace(foreground, ratio) {\n        let { r: fgR, g: fgG, b: fgB } = foreground.rgba;\n        let cr = this.getContrastRatio(foreground);\n        while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n            fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n            fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n            fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n            cr = this.getContrastRatio(( new Color(( new RGBA(fgR, fgG, fgB)))));\n        }\n        return ( new Color(( new RGBA(fgR, fgG, fgB))));\n    }\n    increaseRelativeLuminace(foreground, ratio) {\n        let { r: fgR, g: fgG, b: fgB } = foreground.rgba;\n        let cr = this.getContrastRatio(foreground);\n        while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n            fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n            fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n            fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n            cr = this.getContrastRatio(( new Color(( new RGBA(fgR, fgG, fgB)))));\n        }\n        return ( new Color(( new RGBA(fgR, fgG, fgB))));\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    getContrastRatio(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);\n    }\n    isDarker() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq < 128;\n    }\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    ensureConstrast(foreground, ratio) {\n        const bgL = this.getRelativeLuminance();\n        const fgL = foreground.getRelativeLuminance();\n        const cr = this.getContrastRatio(foreground);\n        if (cr < ratio) {\n            if (fgL < bgL) {\n                const resultA = this.reduceRelativeLuminace(foreground, ratio);\n                const resultARatio = this.getContrastRatio(resultA);\n                if (resultARatio < ratio) {\n                    const resultB = this.increaseRelativeLuminace(foreground, ratio);\n                    const resultBRatio = this.getContrastRatio(resultB);\n                    return resultARatio > resultBRatio ? resultA : resultB;\n                }\n                return resultA;\n            }\n            const resultA = this.increaseRelativeLuminace(foreground, ratio);\n            const resultARatio = this.getContrastRatio(resultA);\n            if (resultARatio < ratio) {\n                const resultB = this.reduceRelativeLuminace(foreground, ratio);\n                const resultBRatio = this.getContrastRatio(resultB);\n                return resultARatio > resultBRatio ? resultA : resultB;\n            }\n            return resultA;\n        }\n        return foreground;\n    }\n    lighten(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a))));\n    }\n    darken(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a))));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(r, g, b, a * factor))));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return ( new Color(( new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a))));\n    }\n    blend(c) {\n        const rgba = c.rgba;\n        const thisA = this.rgba.a;\n        const colorA = rgba.a;\n        const a = thisA + colorA * (1 - thisA);\n        if (a < 1e-6) {\n            return Color.transparent;\n        }\n        const r = this.rgba.r * thisA / a + rgba.r * colorA * (1 - thisA) / a;\n        const g = this.rgba.g * thisA / a + rgba.g * colorA * (1 - thisA) / a;\n        const b = this.rgba.b * thisA / a + rgba.b * colorA * (1 - thisA) / a;\n        return ( new Color(( new RGBA(r, g, b, a))));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(\n            opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n            opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n            opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n            1\n        ))));\n    }\n    flatten(...backgrounds) {\n        const background = backgrounds.reduceRight((accumulator, color) => {\n            return Color._flatten(color, accumulator);\n        });\n        return Color._flatten(this, background);\n    }\n    static _flatten(foreground, background) {\n        const backgroundAlpha = 1 - foreground.rgba.a;\n        return ( new Color(( new RGBA(\n            backgroundAlpha * background.rgba.r + foreground.rgba.a * foreground.rgba.r,\n            backgroundAlpha * background.rgba.g + foreground.rgba.a * foreground.rgba.g,\n            backgroundAlpha * background.rgba.b + foreground.rgba.a * foreground.rgba.b\n        ))));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return ( of.lighten(factor));\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return ( of.darken(factor));\n    }\n    static { this.white = ( new Color(( new RGBA(255, 255, 255, 1)))); }\n    static { this.black = ( new Color(( new RGBA(0, 0, 0, 1)))); }\n    static { this.red = ( new Color(( new RGBA(255, 0, 0, 1)))); }\n    static { this.blue = ( new Color(( new RGBA(0, 0, 255, 1)))); }\n    static { this.green = ( new Color(( new RGBA(0, 255, 0, 1)))); }\n    static { this.cyan = ( new Color(( new RGBA(0, 255, 255, 1)))); }\n    static { this.lightgrey = ( new Color(( new RGBA(211, 211, 211, 1)))); }\n    static { this.transparent = ( new Color(( new RGBA(0, 0, 0, 0)))); }\n}\n( (function(Color) {\n    ( (function(Format) {\n        ( (function(CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = ( n.toString(16));\n                return r.length !== 2 ? '0' + r : r;\n            }\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 ) {\n                    return null;\n                }\n                if (length === 7) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return ( new Color(( new RGBA(r, g, b, 1))));\n                }\n                if (length === 9) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return ( new Color(( new RGBA(r, g, b, a / 255))));\n                }\n                if (length === 4) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b))));\n                }\n                if (length === 5) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255))));\n                }\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 : return 0;\n                    case 49 : return 1;\n                    case 50 : return 2;\n                    case 51 : return 3;\n                    case 52 : return 4;\n                    case 53 : return 5;\n                    case 54 : return 6;\n                    case 55 : return 7;\n                    case 56 : return 8;\n                    case 57 : return 9;\n                    case 97 : return 10;\n                    case 65 : return 10;\n                    case 98 : return 11;\n                    case 66 : return 11;\n                    case 99 : return 12;\n                    case 67 : return 12;\n                    case 100 : return 13;\n                    case 68 : return 13;\n                    case 101 : return 14;\n                    case 69 : return 14;\n                    case 102 : return 15;\n                    case 70 : return 15;\n                }\n                return 0;\n            }\n        })(Format.CSS || (Format.CSS = {})));\n    })(Color.Format || (Color.Format = {})));\n})(Color || (Color = {})));\nexport { Color, HSLA, HSVA, RGBA };\n","import { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = ( new Color(( new HSLA(\n        parsedRegex[0],\n        parsedRegex[1] / 100,\n        parsedRegex[2] / 100,\n        isAlpha ? parsedRegex[3] : 1\n    ))));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\nfunction computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        return [];\n    }\n    return computeColors(model);\n}\nexport { computeDefaultDocumentColors };\n","const markRegex = ( new RegExp('\\\\bMARK:\\\\s*(.*)$', 'd'));\nconst trimDashesRegex = /^-+|-+$/g;\nfunction findSectionHeaders(model, options) {\n    let headers = [];\n    if (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n    }\n    return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n    markRegex.lastIndex = 0;\n    const match = markRegex.exec(lineContent);\n    if (match) {\n        const column = match.indices[1][0] + 1;\n        const endColumn = match.indices[1][1] + 1;\n        const range = { startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: endColumn };\n        if (range.endColumn > range.startColumn) {\n            const sectionHeader = {\n                range,\n                ...getHeaderText(match[1]),\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                sectionHeaders.push(sectionHeader);\n            }\n        }\n    }\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\nexport { findSectionHeaders };\n","import { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\nfunction isPathSeparator(code) {\n    return code === 47  || code === 92 ;\n}\nfunction toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\nfunction toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) {\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\nfunction getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1)\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        if (path.charCodeAt(1) === 58 ) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                return path.slice(0, 2);\n            }\n        }\n    }\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3;\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1);\n            }\n        }\n    }\n    return '';\n}\nfunction isUNC(path) {\n    if (!isWindows) {\n        return false;\n    }\n    if (!path || path.length < 5) {\n        return false;\n    }\n    let code = path.charCodeAt(0);\n    if (code !== 92 ) {\n        return false;\n    }\n    code = path.charCodeAt(1);\n    if (code !== 92 ) {\n        return false;\n    }\n    let pos = 2;\n    const start = pos;\n    for (; pos < path.length; pos++) {\n        code = path.charCodeAt(pos);\n        if (code === 92 ) {\n            break;\n        }\n    }\n    if (start === pos) {\n        return false;\n    }\n    code = path.charCodeAt(pos + 1);\n    if (isNaN(code) || code === 92 ) {\n        return false;\n    }\n    return true;\n}\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nfunction isValidBasename(name, isWindowsOS = isWindows) {\n    const invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return false;\n    }\n    invalidFileChars.lastIndex = 0;\n    if (invalidFileChars.test(name)) {\n        return false;\n    }\n    if (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n        return false;\n    }\n    if (name === '.' || name === '..') {\n        return false;\n    }\n    if (isWindowsOS && name[name.length - 1] === '.') {\n        return false;\n    }\n    if (isWindowsOS && name.length !== name.trim().length) {\n        return false;\n    }\n    if (name.length > 255) {\n        return false;\n    }\n    return true;\n}\nfunction isEqual(pathA, pathB, ignoreCase) {\n    const identityEquals = (pathA === pathB);\n    if (!ignoreCase || identityEquals) {\n        return identityEquals;\n    }\n    if (!pathA || !pathB) {\n        return false;\n    }\n    return equalsIgnoreCase(pathA, pathB);\n}\nfunction isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true;\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--;\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nfunction isWindowsDriveLetter(char0) {\n    return char0 >= 65  && char0 <= 90  || char0 >= 97  && char0 <= 122 ;\n}\nfunction hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 ;\n    }\n    return false;\n}\nfunction getDriveLetter(path, isWindowsOS = isWindows) {\n    return hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\nfunction indexOfPath(path, candidate, ignoreCase) {\n    if (candidate.length > path.length) {\n        return -1;\n    }\n    if (path === candidate) {\n        return 0;\n    }\n    if (ignoreCase) {\n        path = path.toLowerCase();\n        candidate = candidate.toLowerCase();\n    }\n    return path.indexOf(candidate);\n}\nfunction parseLineAndColumnAware(rawPath) {\n    const segments = rawPath.split(':');\n    let path = undefined;\n    let line = undefined;\n    let column = undefined;\n    for (const segment of segments) {\n        const segmentAsNumber = Number(segment);\n        if (!isNumber(segmentAsNumber)) {\n            path = !!path ? [path, segment].join(':') : segment;\n        }\n        else if (line === undefined) {\n            line = segmentAsNumber;\n        }\n        else if (column === undefined) {\n            column = segmentAsNumber;\n        }\n    }\n    if (!path) {\n        throw ( new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`'));\n    }\n    return {\n        path,\n        line: line !== undefined ? line : undefined,\n        column: column !== undefined ? column : line !== undefined ? 1 : undefined\n    };\n}\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\nfunction randomPath(parent, prefix, randomLength = 8) {\n    let suffix = '';\n    for (let i = 0; i < randomLength; i++) {\n        let pathCharsTouse;\n        if (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n            pathCharsTouse = windowsSafePathFirstChars;\n        }\n        else {\n            pathCharsTouse = pathChars;\n        }\n        suffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n    }\n    let randomFileName;\n    {\n        randomFileName = suffix;\n    }\n    return randomFileName;\n}\nexport { getDriveLetter, getRoot, hasDriveLetter, indexOfPath, isEqual, isEqualOrParent, isPathSeparator, isUNC, isValidBasename, isWindowsDriveLetter, parseLineAndColumnAware, randomPath, toPosixPath, toSlashes };\n","import { onUnexpectedError } from './errors.js';\nimport { isNative, webWorkerOrigin, isWeb } from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport { join, posix } from './path.js';\nimport { toDisposable } from './lifecycle.js';\nimport { ResourceMap } from './map.js';\nvar Schemas;\n( (function(Schemas) {\n    Schemas.inMemory = 'inmemory';\n    Schemas.vscode = 'vscode';\n    Schemas.internal = 'private';\n    Schemas.walkThrough = 'walkThrough';\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    Schemas.webviewPanel = 'webview-panel';\n    Schemas.vscodeWebview = 'vscode-webview';\n    Schemas.extension = 'extension';\n    Schemas.vscodeFileResource = 'vscode-file';\n    Schemas.tmp = 'tmp';\n    Schemas.vsls = 'vsls';\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    Schemas.commentsInput = 'comment';\n    Schemas.codeSetting = 'code-setting';\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {})));\nfunction matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nfunction matchesSomeScheme(target, ...schemes) {\n    return ( schemes.some(scheme => matchesScheme(target, scheme)));\n}\nconst connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    setDelegate(delegate) {\n        this._delegate = delegate;\n    }\n    setServerRootPath(product, serverBasePath) {\n        this._serverRootPath = getServerRootPath(product, serverBasePath);\n    }\n    getServerRootPath() {\n        return this._serverRootPath;\n    }\n    get _remoteResourcesPath() {\n        return posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    set(authority, host, port) {\n        this._hosts[authority] = host;\n        this._ports[authority] = port;\n    }\n    setConnectionToken(authority, connectionToken) {\n        this._connectionTokens[authority] = connectionToken;\n    }\n    getPreferredWebSchema() {\n        return this._preferredWebSchema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return ( URI.from({\n            scheme: isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        }));\n    }\n}\nconst RemoteAuthorities = ( new RemoteAuthoritiesImpl());\nfunction getServerRootPath(product, basePath) {\n    return posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\nconst nodeModulesPath = 'vs/../../node_modules';\nconst VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    constructor() {\n        this.staticBrowserUris = ( new ResourceMap());\n        this.appResourcePathUrls = ( new Map());\n    }\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    registerAppResourcePathUrl(moduleId, url) {\n        this.appResourcePathUrls.set(moduleId, url);\n    }\n    toUrl(moduleId) {\n        let url = this.appResourcePathUrls.get(moduleId);\n        if (typeof url === 'function') {\n            url = url();\n        }\n        return ( ( new URL(url ?? moduleId, globalThis.location?.href ?? import.meta.url)).toString());\n    }\n    asBrowserUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToBrowserUri(uri);\n    }\n    uriToBrowserUri(uri) {\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        if (\n        uri.scheme === Schemas.file &&\n            (\n            (\n            isNative || (webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return this.staticBrowserUris.get(uri) ?? uri;\n    }\n    asFileUri(resourcePath) {\n        const uri = this.toUri(resourcePath, { toUrl: this.toUrl.bind(this) });\n        return this.uriToFileUri(uri);\n    }\n    uriToFileUri(uri) {\n        if (uri.scheme === Schemas.vscodeFileResource) {\n            return uri.with({\n                scheme: Schemas.file,\n                authority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(( URI.parse(rootUriOrPath, true)), uriOrModule);\n            }\n            const modulePath = join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return ( URI.parse(moduleIdToUrl.toUrl(uriOrModule)));\n    }\n    registerStaticBrowserUri(uri, browserUri) {\n        this.staticBrowserUris.set(uri, browserUri);\n        return toDisposable(() => {\n            if (this.staticBrowserUris.get(uri) === browserUri) {\n                this.staticBrowserUris.delete(uri);\n            }\n        });\n    }\n    getRegisteredBrowserUris() {\n        return ( this.staticBrowserUris.keys());\n    }\n}\nconst FileAccess = ( new FileAccessImpl());\nvar COI;\n( (function(COI) {\n    const coiHeaders = ( new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]));\n    COI.CoopAndCoep = ( Object.freeze(coiHeaders.get('3')));\n    const coiSearchParamName = 'vscode-coi';\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = ( new URL(url)).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = ( new URL(( url.toString(true)))).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {})));\nexport { COI, FileAccess, RemoteAuthorities, Schemas, VSCODE_AUTHORITY, connectionTokenQueryName, getServerRootPath, matchesScheme, matchesSomeScheme, nodeModulesPath };\n","import { isEqualOrParent as isEqualOrParent$1, toSlashes, toPosixPath, getRoot } from './extpath.js';\nimport { Schemas } from './network.js';\nimport { posix, dirname as dirname$1, normalize, relative, resolve, sep } from './path.js';\nimport { isWindows, isLinux } from './platform.js';\nimport { compare, equalsIgnoreCase } from './strings.js';\nimport { uriToFsPath, URI } from './uri.js';\nfunction originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nclass ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return compare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return ( uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString());\n    }\n    ignorePathCasing(uri) {\n        return this._ignorePathCasing(uri);\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return isEqualOrParent$1(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return isEqualOrParent$1(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return posix.basename(resource.path);\n    }\n    extname(resource) {\n        return posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(dirname$1(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 ) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/';\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = toPosixPath(path);\n        return base.with({\n            path: posix.resolve(base.path, path)\n        });\n    }\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep$1 = sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > getRoot(fsp).length && fsp[fsp.length - 1] === sep$1;\n        }\n        else {\n            const p = resource.path;\n            return ((p.length > 1 && p.charCodeAt(p.length - 1) === 47) ) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath));\n        }\n    }\n    removeTrailingPathSeparator(resource, sep$1 = sep) {\n        if (hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep$1 = sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === getRoot(fsp).length) && (fsp[fsp.length - 1] === sep$1));\n        }\n        else {\n            sep$1 = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 ;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep$1)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\nconst extUri = ( new ExtUri(() => false));\nconst extUriBiasedIgnorePathCase = ( new ExtUri(uri => {\n    return uri.scheme === Schemas.file ? !isLinux : true;\n}));\nconst extUriIgnorePathCase = ( new ExtUri(_ => true));\nconst isEqual = extUri.isEqual.bind(extUri);\nconst isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nextUri.getComparisonKey.bind(extUri);\nconst basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nconst basename = extUri.basename.bind(extUri);\nconst extname = extUri.extname.bind(extUri);\nconst dirname = extUri.dirname.bind(extUri);\nconst joinPath = extUri.joinPath.bind(extUri);\nconst normalizePath = extUri.normalizePath.bind(extUri);\nconst relativePath = extUri.relativePath.bind(extUri);\nconst resolvePath = extUri.resolvePath.bind(extUri);\nconst isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nconst isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nconst hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nconst removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nconst addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\nfunction distinctParents(items, resourceAccessor) {\n    const distinctParents = [];\n    for (let i = 0; i < items.length; i++) {\n        const candidateResource = resourceAccessor(items[i]);\n        if (( items.some((otherItem, index) => {\n            if (index === i) {\n                return false;\n            }\n            return isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n        }))) {\n            continue;\n        }\n        distinctParents.push(items[i]);\n    }\n    return distinctParents;\n}\nvar DataUri;\n( (function(DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = ( new Map());\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {})));\nfunction toLocalResource(resource, authority, localScheme) {\n    if (authority) {\n        let path = resource.path;\n        if (path && path[0] !== posix.sep) {\n            path = posix.sep + path;\n        }\n        return resource.with({ scheme: localScheme, authority, path });\n    }\n    return resource.with({ scheme: localScheme });\n}\nexport { DataUri, ExtUri, addTrailingPathSeparator, basename, basenameOrAuthority, dirname, distinctParents, extUri, extUriBiasedIgnorePathCase, extUriIgnorePathCase, extname, hasTrailingPathSeparator, isAbsolutePath, isEqual, isEqualAuthority, isEqualOrParent, joinPath, normalizePath, originalFSPath, relativePath, removeTrailingPathSeparator, resolvePath, toLocalResource };\n","import { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError, BugIndicatingError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable, DisposableMap } from './lifecycle.js';\nimport { extUri } from './resources.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\nfunction isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nfunction createCancelablePromise(callback) {\n    const source = ( new CancellationTokenSource());\n    const thenable = callback(source.token);\n    const promise = ( new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(( new CancellationError()));\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    }));\n    return new (class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    });\n}\nfunction raceCancellation(promise, token, defaultValue) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nfunction raceCancellationError(promise, token) {\n    return ( new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            reject(( new CancellationError()));\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    }));\n}\nasync function raceCancellablePromises(cancellablePromises) {\n    let resolvedPromiseIndex = -1;\n    const promises = ( cancellablePromises.map(\n        (promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; })\n    ));\n    try {\n        const result = await Promise.race(promises);\n        return result;\n    }\n    finally {\n        cancellablePromises.forEach((cancellablePromise, index) => {\n            if (index !== resolvedPromiseIndex) {\n                cancellablePromise.cancel();\n            }\n        });\n    }\n}\nfunction raceTimeout(promise, timeout, onTimeout) {\n    let promiseResolve = undefined;\n    const timer = setTimeout(() => {\n        promiseResolve?.(undefined);\n        onTimeout?.();\n    }, timeout);\n    return Promise.race([\n        promise.finally(() => clearTimeout(timer)),\n        ( new Promise(resolve => promiseResolve = resolve))\n    ]);\n}\nfunction asPromise(callback) {\n    return ( new Promise((resolve, reject) => {\n        const item = callback();\n        if (isThenable(item)) {\n            item.then(resolve, reject);\n        }\n        else {\n            resolve(item);\n        }\n    }));\n}\nfunction promiseWithResolvers() {\n    let resolve;\n    let reject;\n    const promise = ( new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    }));\n    return { promise, resolve: resolve, reject: reject };\n}\nclass Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(( new Error('Throttler is disposed')));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = ( new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                }));\n            }\n            return ( new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            }));\n        }\n        this.activePromise = promiseFactory();\n        return ( new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        }));\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nclass Sequencer {\n    constructor() {\n        this.current = Promise.resolve(null);\n    }\n    queue(promiseTask) {\n        return this.current = this.current.then(() => promiseTask(), () => promiseTask());\n    }\n}\nclass SequencerByKey {\n    constructor() {\n        this.promiseMap = ( new Map());\n    }\n    queue(key, promiseTask) {\n        const runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n        const newPromise = runningPromise\n            .catch(() => { })\n            .then(promiseTask)\n            .finally(() => {\n            if (this.promiseMap.get(key) === newPromise) {\n                this.promiseMap.delete(key);\n            }\n        });\n        this.promiseMap.set(key, newPromise);\n        return newPromise;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = ( new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            })).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(( new CancellationError()));\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\nclass ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = ( new Delayer(defaultDelay));\n        this.throttler = ( new Throttler());\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    isTriggered() {\n        return this.delayer.isTriggered();\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nclass Barrier {\n    constructor() {\n        this._isOpen = false;\n        this._promise = ( new Promise((c, e) => {\n            this._completePromise = c;\n        }));\n    }\n    isOpen() {\n        return this._isOpen;\n    }\n    open() {\n        this._isOpen = true;\n        this._completePromise(true);\n    }\n    wait() {\n        return this._promise;\n    }\n}\nclass AutoOpenBarrier extends Barrier {\n    constructor(autoOpenTimeMs) {\n        super();\n        this._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n    }\n    open() {\n        clearTimeout(this._timeout);\n        super.open();\n    }\n}\nfunction timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return ( new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(( new CancellationError()));\n        });\n    }));\n}\nfunction disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.deleteAndLeak(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nfunction sequence(promiseFactories) {\n    const results = [];\n    let index = 0;\n    const len = promiseFactories.length;\n    function next() {\n        return index < len ? promiseFactories[index++]() : null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        const n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return Promise.resolve(results);\n    }\n    return Promise.resolve(null).then(thenHandler);\n}\nfunction first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nclass Limiter {\n    constructor(maxDegreeOfParalellism) {\n        this._size = 0;\n        this._isDisposed = false;\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onDrained = ( new Emitter());\n    }\n    whenIdle() {\n        return this.size > 0\n            ? Event.toPromise(this.onDrained)\n            : Promise.resolve();\n    }\n    get onDrained() {\n        return this._onDrained.event;\n    }\n    get size() {\n        return this._size;\n    }\n    queue(factory) {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this._size++;\n        return ( new Promise((c, e) => {\n            this.outstandingPromises.push({ factory, c, e });\n            this.consume();\n        }));\n    }\n    consume() {\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            const iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            const promise = iLimitedTask.factory();\n            promise.then(iLimitedTask.c, iLimitedTask.e);\n            promise.then(() => this.consumed(), () => this.consumed());\n        }\n    }\n    consumed() {\n        if (this._isDisposed) {\n            return;\n        }\n        this.runningPromises--;\n        if (--this._size === 0) {\n            this._onDrained.fire();\n        }\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n    }\n    clear() {\n        if (this._isDisposed) {\n            throw ( new Error('Object has been disposed'));\n        }\n        this.outstandingPromises.length = 0;\n        this._size = this.runningPromises;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this.outstandingPromises.length = 0;\n        this._size = 0;\n        this._onDrained.dispose();\n    }\n}\nclass Queue extends Limiter {\n    constructor() {\n        super(1);\n    }\n}\nclass ResourceQueue {\n    constructor() {\n        this.queues = ( new Map());\n        this.drainers = ( new Set());\n        this.drainListeners = undefined;\n        this.drainListenerCount = 0;\n    }\n    async whenDrained() {\n        if (this.isDrained()) {\n            return;\n        }\n        const promise = ( new DeferredPromise());\n        this.drainers.add(promise);\n        return promise.p;\n    }\n    isDrained() {\n        for (const [, queue] of this.queues) {\n            if (queue.size > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    queueSize(resource, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        return this.queues.get(key)?.size ?? 0;\n    }\n    queueFor(resource, factory, extUri$1 = extUri) {\n        const key = extUri$1.getComparisonKey(resource);\n        let queue = this.queues.get(key);\n        if (!queue) {\n            queue = ( new Queue());\n            const drainListenerId = this.drainListenerCount++;\n            const drainListener = Event.once(queue.onDrained)(() => {\n                queue?.dispose();\n                this.queues.delete(key);\n                this.onDidQueueDrain();\n                this.drainListeners?.deleteAndDispose(drainListenerId);\n                if (this.drainListeners?.size === 0) {\n                    this.drainListeners.dispose();\n                    this.drainListeners = undefined;\n                }\n            });\n            if (!this.drainListeners) {\n                this.drainListeners = ( new DisposableMap());\n            }\n            this.drainListeners.set(drainListenerId, drainListener);\n            this.queues.set(key, queue);\n        }\n        return queue.queue(factory);\n    }\n    onDidQueueDrain() {\n        if (!this.isDrained()) {\n            return;\n        }\n        this.releaseDrainers();\n    }\n    releaseDrainers() {\n        for (const drainer of this.drainers) {\n            drainer.complete();\n        }\n        this.drainers.clear();\n    }\n    dispose() {\n        for (const [, queue] of this.queues) {\n            queue.dispose();\n        }\n        this.queues.clear();\n        this.releaseDrainers();\n        this.drainListeners?.dispose();\n    }\n}\nclass TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`));\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`));\n        }\n        if (this._token !== -1) {\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nclass IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw ( new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`));\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nclass RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    flush() {\n        if (this.isScheduled()) {\n            this.cancel();\n            this.doRun();\n        }\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\nclass RunOnceWorker extends RunOnceScheduler {\n    constructor(runner, timeout) {\n        super(runner, timeout);\n        this.units = [];\n    }\n    work(unit) {\n        this.units.push(unit);\n        if (!this.isScheduled()) {\n            this.schedule();\n        }\n    }\n    doRun() {\n        const units = this.units;\n        this.units = [];\n        this.runner?.(units);\n    }\n    dispose() {\n        this.units = [];\n        super.dispose();\n    }\n}\nlet runWhenGlobalIdle;\nlet _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15;\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(( Object.freeze(deadline)));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nclass AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\nclass GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\nasync function retry(task, delay, retries) {\n    let lastError;\n    for (let i = 0; i < retries; i++) {\n        try {\n            return await task();\n        }\n        catch (error) {\n            lastError = error;\n            await timeout(delay);\n        }\n    }\n    throw lastError;\n}\nclass TaskSequentializer {\n    isRunning(taskId) {\n        if (typeof taskId === 'number') {\n            return this._running?.taskId === taskId;\n        }\n        return !!this._running;\n    }\n    get running() {\n        return this._running?.promise;\n    }\n    cancelRunning() {\n        this._running?.cancel();\n    }\n    run(taskId, promise, onCancel) {\n        this._running = { taskId, cancel: () => onCancel?.(), promise };\n        promise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n        return promise;\n    }\n    doneRunning(taskId) {\n        if (this._running && taskId === this._running.taskId) {\n            this._running = undefined;\n            this.runQueued();\n        }\n    }\n    runQueued() {\n        if (this._queued) {\n            const queued = this._queued;\n            this._queued = undefined;\n            queued.run().then(queued.promiseResolve, queued.promiseReject);\n        }\n    }\n    queue(run) {\n        if (!this._queued) {\n            const { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers();\n            this._queued = {\n                run,\n                promise,\n                promiseResolve: promiseResolve,\n                promiseReject: promiseReject\n            };\n        }\n        else {\n            this._queued.run = run;\n        }\n        return this._queued.promise;\n    }\n    hasQueued() {\n        return !!this._queued;\n    }\n    async join() {\n        return this._queued?.promise ?? this._running?.promise;\n    }\n}\nclass IntervalCounter {\n    constructor(interval, nowFn = () => Date.now()) {\n        this.interval = interval;\n        this.nowFn = nowFn;\n        this.lastIncrementTime = 0;\n        this.value = 0;\n    }\n    increment() {\n        const now = this.nowFn();\n        if (now - this.lastIncrementTime > this.interval) {\n            this.lastIncrementTime = now;\n            this.value = 0;\n        }\n        this.value++;\n        return this.value;\n    }\n}\nclass DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === 1 ;\n    }\n    get isResolved() {\n        return this.outcome?.outcome === 0 ;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    get value() {\n        return this.outcome?.outcome === 0  ? this.outcome?.value : undefined;\n    }\n    constructor() {\n        this.p = ( new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        }));\n    }\n    complete(value) {\n        return ( new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 , value };\n            resolve();\n        }));\n    }\n    error(err) {\n        return ( new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 , value: err };\n            resolve();\n        }));\n    }\n    cancel() {\n        return this.error(( new CancellationError()));\n    }\n}\nvar Promises;\n( (function(Promises) {\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(( promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined;\n        }))));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result;\n    }\n    Promises.settled = settled;\n    function withAsyncBody(bodyFn) {\n        return ( new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        }));\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {})));\nclass StatefulPromise {\n    get value() { return this._value; }\n    get error() { return this._error; }\n    get isResolved() { return this._isResolved; }\n    constructor(promise) {\n        this._value = undefined;\n        this._error = undefined;\n        this._isResolved = false;\n        this.promise = promise.then(value => {\n            this._value = value;\n            this._isResolved = true;\n            return value;\n        }, error => {\n            this._error = error;\n            this._isResolved = true;\n            throw error;\n        });\n    }\n    requireValue() {\n        if (!this._isResolved) {\n            throw ( new BugIndicatingError('Promise is not resolved yet'));\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n}\nclass LazyStatefulPromise {\n    constructor(_compute) {\n        this._compute = _compute;\n        this._promise = ( new Lazy(() => ( new StatefulPromise(this._compute()))));\n    }\n    requireValue() {\n        return this._promise.value.requireValue();\n    }\n    getPromise() {\n        return this._promise.value.promise;\n    }\n    get currentValue() {\n        return this._promise.rawValue?.value;\n    }\n}\nclass AsyncIterableObject {\n    static fromArray(items) {\n        return ( new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        }));\n    }\n    static fromPromise(promise) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        }));\n    }\n    static fromPromises(promises) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( promises.map(async (p) => emitter.emitOne(await p))));\n        }));\n    }\n    static merge(iterables) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            await Promise.all(( iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            })));\n        }));\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = 0 ;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = ( new Emitter());\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 ) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 ) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        }));\n    }\n    map(mapFn) {\n        return ( AsyncIterableObject.map(this, mapFn));\n    }\n    static filter(iterable, filterFn) {\n        return ( new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        }));\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    emitOne(value) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    emitMany(values) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    resolve() {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._state = 1 ;\n        this._onStateChanged.fire();\n    }\n    reject(error) {\n        if (this._state !== 0 ) {\n            return;\n        }\n        this._state = 2 ;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nclass CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction createCancelableAsyncIterable(callback) {\n    const source = ( new CancellationTokenSource());\n    const innerIterable = callback(source.token);\n    return ( new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(( new CancellationError()));\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    }));\n}\nclass AsyncIterableSource {\n    constructor(onReturn) {\n        this._deferred = ( new DeferredPromise());\n        this._asyncIterable = ( new AsyncIterableObject(emitter => {\n            if (earlyError) {\n                emitter.reject(earlyError);\n                return;\n            }\n            if (earlyItems) {\n                emitter.emitMany(earlyItems);\n            }\n            this._errorFn = (error) => emitter.reject(error);\n            this._emitFn = (item) => emitter.emitOne(item);\n            return this._deferred.p;\n        }, onReturn));\n        let earlyError;\n        let earlyItems;\n        this._emitFn = (item) => {\n            if (!earlyItems) {\n                earlyItems = [];\n            }\n            earlyItems.push(item);\n        };\n        this._errorFn = (error) => {\n            if (!earlyError) {\n                earlyError = error;\n            }\n        };\n    }\n    get asyncIterable() {\n        return this._asyncIterable;\n    }\n    resolve() {\n        this._deferred.complete();\n    }\n    reject(error) {\n        this._errorFn(error);\n        this._deferred.complete();\n    }\n    emitOne(item) {\n        this._emitFn(item);\n    }\n}\nexport { AbstractIdleValue, AsyncIterableObject, AsyncIterableSource, AutoOpenBarrier, Barrier, CancelableAsyncIterableObject, DeferredPromise, Delayer, GlobalIdleValue, IntervalCounter, IntervalTimer, LazyStatefulPromise, Limiter, Promises, Queue, ResourceQueue, RunOnceScheduler, RunOnceWorker, Sequencer, SequencerByKey, StatefulPromise, TaskSequentializer, ThrottledDelayer, Throttler, TimeoutTimer, _runWhenIdle, asPromise, createCancelableAsyncIterable, createCancelablePromise, disposableTimeout, first, isThenable, promiseWithResolvers, raceCancellablePromises, raceCancellation, raceCancellationError, raceTimeout, retry, runWhenGlobalIdle, sequence, timeout };\n","import { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nclass PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = ( new Uint32Array(values.length));\n        this.prefixSumValidIndex = ( new Int32Array(1));\n        this.prefixSumValidIndex[0] = -1;\n    }\n    getCount() {\n        return this.values.length;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length + insertValuesLen));\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = ( new Uint32Array(oldValues.length - count));\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = ( new Uint32Array(this.values.length));\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return ( new PrefixSumIndexOfResult(mid, sum - midStart));\n    }\n}\nclass ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return ( new PrefixSumIndexOfResult(idx, sum - viewLinesAbove));\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nclass PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport { ConstantTimePrefixSumComputer, PrefixSumComputer, PrefixSumIndexOfResult };\n","import { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nclass MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(( new Position(change.range.startLineNumber, change.range.startColumn)), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = ( new Uint32Array(linesLength));\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = ( new PrefixSumComputer(lineStartValues));\n        }\n    }\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                return;\n            }\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        const newLengths = ( new Uint32Array(insertLines.length - 1));\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\nexport { MirrorTextModel };\n","import { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../../core/wordHelper.js';\nimport { MirrorTextModel } from '../../model/mirrorTextModel.js';\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\nconst WORKER_TEXT_MODEL_SYNC_CHANNEL = 'workerTextModelSync';\nclass WorkerTextModelSyncClient extends Disposable {\n    static create(workerClient, modelService) {\n        return ( new WorkerTextModelSyncClient(workerClient.getChannel(WORKER_TEXT_MODEL_SYNC_CHANNEL), modelService));\n    }\n    constructor(proxy, modelService, keepIdleModels = false) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = ( new IntervalTimer());\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels = false) {\n        for (const resource of resources) {\n            const resourceStr = ( resource.toString());\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (( new Date())).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (( new Date())).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = ( resource.toString());\n        this._proxy.$acceptNewModel({\n            url: ( model.uri.toString()),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = ( new DisposableStore());\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.$acceptModelChanged(( modelUrl.toString()), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.$acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass WorkerTextModelSyncServer {\n    constructor() {\n        this._models = Object.create(null);\n    }\n    bindToServer(workerServer) {\n        workerServer.setChannel(WORKER_TEXT_MODEL_SYNC_CHANNEL, this);\n    }\n    getModel(uri) {\n        return this._models[uri];\n    }\n    getModels() {\n        const all = [];\n        ( Object.keys(this._models)).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    $acceptNewModel(data) {\n        this._models[data.url] = ( new MirrorModel(( URI.parse(data.url)), data.lines, data.EOL, data.versionId));\n    }\n    $acceptModelChanged(uri, e) {\n        if (!this._models[uri]) {\n            return;\n        }\n        const model = this._models[uri];\n        model.onEvents(e);\n    }\n    $acceptRemovedModel(uri) {\n        if (!this._models[uri]) {\n            return;\n        }\n        delete this._models[uri];\n    }\n}\nclass MirrorModel extends MirrorTextModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(( new Position(i + 1, 1)));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return ( new Range(\n                position.lineNumber,\n                wordAtText.startColumn,\n                position.lineNumber,\n                wordAtText.endColumn\n            ));\n        }\n        return null;\n    }\n    getWordUntilPosition(position, wordDefinition) {\n        const wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0;\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw ( new Error('bad position'));\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\nexport { MirrorModel, STOP_SYNC_MODEL_DELTA_TIME_MS, WORKER_TEXT_MODEL_SYNC_CHANNEL, WorkerTextModelSyncClient, WorkerTextModelSyncServer };\n","import { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport './editorWorkerHost.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { DiffComputer } from '../diff/legacyLinesDiffComputer.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\nimport { WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\nclass BaseEditorSimpleWorker {\n    constructor() {\n        this._workerTextModelSyncServer = ( new WorkerTextModelSyncServer());\n    }\n    dispose() {\n    }\n    _getModel(uri) {\n        return this._workerTextModelSyncServer.getModel(uri);\n    }\n    _getModels() {\n        return this._workerTextModelSyncServer.getModels();\n    }\n    $acceptNewModel(data) {\n        this._workerTextModelSyncServer.$acceptNewModel(data);\n    }\n    $acceptModelChanged(uri, e) {\n        this._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n    }\n    $acceptRemovedModel(uri) {\n        this._workerTextModelSyncServer.$acceptRemovedModel(uri);\n    }\n    async $computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async $findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    async $computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return ( changes.map(\n                m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])])\n            ));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: ( result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ]))),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async $computeDirtyDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const originalLines = original.getLinesContent();\n        const modifiedLines = modified.getLinesContent();\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: false,\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true,\n            maxComputationTime: 1000\n        }));\n        return diffComputer.computeDiff().changes;\n    }\n    static { this._diffLimit = 100000; }\n    async $computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    $computeHumanReadableDiff(modelUrl, edits, options) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const originalLines = original.split(/\\r\\n|\\n|\\r/);\n            const modifiedLines = text.split(/\\r\\n|\\n|\\r/);\n            const diff = linesDiffComputers.getDefault().computeDiff(originalLines, modifiedLines, options);\n            const start = Range.lift(range).getStartPosition();\n            function addPositions(pos1, pos2) {\n                return ( new Position(\n                    pos1.lineNumber + pos2.lineNumber - 1,\n                    pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column\n                ));\n            }\n            function getText(lines, range) {\n                const result = [];\n                for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                    const line = lines[i - 1];\n                    if (i === range.startLineNumber && i === range.endLineNumber) {\n                        result.push(line.substring(range.startColumn - 1, range.endColumn - 1));\n                    }\n                    else if (i === range.startLineNumber) {\n                        result.push(line.substring(range.startColumn - 1));\n                    }\n                    else if (i === range.endLineNumber) {\n                        result.push(line.substring(0, range.endColumn - 1));\n                    }\n                    else {\n                        result.push(line);\n                    }\n                }\n                return result;\n            }\n            for (const c of diff.changes) {\n                if (c.innerChanges) {\n                    for (const x of c.innerChanges) {\n                        result.push({\n                            range: Range.fromPositions(addPositions(start, x.originalRange.getStartPosition()), addPositions(start, x.originalRange.getEndPosition())),\n                            text: getText(modifiedLines, x.modifiedRange).join(model.eol)\n                        });\n                    }\n                }\n                else {\n                    throw ( new BugIndicatingError('The experimental diff algorithm always produces inner changes'));\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    async $computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    async $computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    static { this._suggestionsLimit = 10000; }\n    async $textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = ( new StopWatch());\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const seen = ( new Set());\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    async $computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    async $navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n}\nclass EditorSimpleWorker extends BaseEditorSimpleWorker {\n    constructor(_host, _foreignModuleFactory) {\n        super();\n        this._host = _host;\n        this._foreignModuleFactory = _foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    async $ping() {\n        return 'pong';\n    }\n    $loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.$fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n    $fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nif (typeof importScripts === 'function') {\n    globalThis.monaco = createMonacoBaseAPI();\n}\nexport { BaseEditorSimpleWorker, EditorSimpleWorker };\n","import { SimpleWorkerServer } from '../../../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './editorSimpleWorker.js';\nimport { EditorWorkerHost } from './editorWorkerHost.js';\nlet initialized = false;\nfunction initialize(factory) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = ( new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (workerServer) => ( new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), factory))));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    if (!initialized) {\n        initialize(null);\n    }\n};\nexport { initialize };\n"],"names":["ErrorHandler","ErrorNoTelemetry","listener","newUnexpectedErrorHandler","errorHandler","onUnexpectedError","e","isCancellationError","transformErrorForSerialization","error","name","message","stack","canceledName","CancellationError","msg","err","result","BugIndicatingError","groupBy","data","groupFn","element","key","target","createSingleCallFunction","fn","fnDidRunCallback","_this","didCall","findLastMonotonous","array","predicate","idx","findLastIdxMonotonous","startIdx","endIdxEx","i","j","k","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","_MonotonousArray","_array","item","MonotonousArray","equals","one","other","itemEquals","a","b","len","groupAdjacentBy","items","shouldBeGrouped","currentGroup","last","forEachAdjacent","arr","f","forEachWithNeighbors","pushMany","CompareResult","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","compareBy","selector","comparator","numberComparator","reverseOrder","_CallbackIterable","iterate","handler","cb","mapFn","first","_callback","CallbackIterable","_a","_c","ResourceMapEntry","uri","value","isEntries","arg","_ResourceMap","toKey","resource","clb","thisArg","_","entry","ResourceMap","LinkedMap","touch","callbackfn","state","current","map","iterator","newSize","currentSize","next","previous","Cache","limit","ratio","LRUCache","SetMap","values","Iterable","is","thing","_empty","empty","single","wrap","iterableOrElement","from","iterable","reverse","isEmpty","some","find","filter","index","flatMap","concat","iterables","reduce","reducer","initialValue","slice","to","consume","atMost","consumed","asyncToArray","_DisposableTracker","d","val","child","parent","x","disposable","cache","cacheValue","rootParentCache","v","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","removePrefix","linesToRemove","regexp","lines","p","stackTraceStarts","stackTracePath","stackTraceFormattedLines","line","prevStarts","continuations","cont","set","DisposableTracker","dispose","errors","combinedDisposable","disposables","toDisposable","_DisposableStore","DisposableStore","_Disposable","Disposable","_Node","Node","LinkedList","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","hasPerformanceNow","StopWatch","highResolution","Event","defer","event","debounce","once","thisArgs","didFire","onceIf","condition","snapshot","forEach","each","signal","any","events","addAndReturnDisposable","merge","initial","output","options","emitter","Emitter","store","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","numDebouncedCalls","doFire","cur","_output","accumulate","latch","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","chain","sythensize","cs","ChainableSynthesis","HaltChainable","step","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","resolve","fromPromise","promise","forward","runAndSubscribe","EmitterObserver","_observable","_change","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","_EventProfiling","listenerCount","elapsed","EventProfiling","_globalLeakWarningThreshold","_LeakageMonitor","_errorHandler","threshold","topStack","topCount","ListenerLeakError","LeakageMonitor","Stacktrace","ListenerRefusalError","UniqueContainer","compactionThreshold","_b","_d","callback","_e","tuple","contained","removeMonitor","EventDeliveryQueuePrivate","listeners","adjustDeliveryQueue","n","dq","end","getNLSMessages","getNLSLanguage","isPseudo","_format","match","rest","localize","lookupMessage","fallback","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","_language","_platformLocale","_translationsConfigFile","_userAgent","$globalThis","nodeProcess","isElectronProcess","isElectronRenderer","rawNlsConfig","nlsConfig","isWindows","isMacintosh","isNative","isWeb","isWebWorker","webWorkerOrigin","userAgent","language","Language","isDefaultVariant","isDefault","setTimeout0IsFaster","pending","candidate","lastId","myId","isChrome","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","CancellationTokenSource","cancel","identity","LRUCachedFunction","arg1","arg2","Lazy","executor","escapeRegExpCharacters","splitLines","str","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","startIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","code","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","offset","nextCharCode","IS_BASIC_ASCII","isBasicASCII","_GraphemeBreakTree","getGraphemeBreakRawData","codePoint","nodeCount","nodeIndex","GraphemeBreakTree","_AmbiguousCharacters","locales","confusableDictionary","arrayToMap","mergeMaps","map1","map2","intersectMaps","filteredLocales","languageSpecificMap","locale","commonMap","AmbiguousCharacters","_InvisibleCharacters","InvisibleCharacters","DEFAULT_CHANNEL","INITIALIZE","RequestMessage","vsWorker","req","channel","method","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","workerId","reject","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","replyMessage","reply","requestMessage","transfer","SimpleWorkerServer","postMessage","requestHandlerFactory","requestHandler","inst","loaderConfig","moduleId","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","numberHash","initialHashVal","stringHash","s","hashVal","length","StringDiffSequence","source","characters","stringDiff","original","modified","pretty","LcsDiff","Debug","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","originalIndex","modifiedIndex","originalSequence","modifiedSequence","continueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","sequence","elements","hashes","newIndex","originalElement","modifiedElement","index1","index2","originalEnd","modifiedEnd","quitEarlyArr","changes","midOriginalArr","midModifiedArr","midOriginal","midModified","leftChanges","rightChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","tempOriginalIndex","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","prevChange","bestDelta","bestScore","delta","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","aLineNumber","bLineNumber","aColumn","bColumn","pos","obj","Range","startLineNumber","startColumn","endLineNumber","endColumn","range","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","lineCount","start","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","toUint8","toUint32","CharacterClassifier","_defaultValue","defaultValue","asciiMap","_value","Uint8Matrix","rows","cols","row","col","StateMachine","edges","maxCharCode","maxState","states","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","computeLinks","_BasicInplaceReplace","range1","text1","range2","text2","up","text","numberResult","precision","n1","n2","valueSets","valueSet","BasicInplaceReplace","KeyCodeStrMap","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","scanCodeStrToInt","scanCodeLowerCaseStrToInt","mappings","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","KeyChord","firstPart","secondPart","chordPart","safeProcess","vscodeGlobal","sandboxProcess","define_process_env_default","cwd","env","platform","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","type","validateObject","pathObject","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","formatExt","ext","sep","dir","base","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","tail","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","suffix","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posixCwd","cwd$1","posix","trailingSeparator","hasRoot","normalize","join","relative","dirname","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","schemeOrData","authority","query","fragment","uriToFsPath","Uri","percentDecode","components","strict","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","direction","sel","isString","_codiconFontCharacters","register","fontCharacter","codiconsLibrary","codiconsDerived","Codicon","TokenizationRegistry","languageIds","languageId","support","factory","myData","TokenizationSupportFactoryData","tokenizationSupport","colorMap","_registry","_languageId","_factory","Token","HoverVerbosityAction","CompletionItemKinds","byKind","toIcon","kind","codicon","InlineCompletionTriggerKind","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKinds","icon","_FoldingRangeKind","FoldingRangeKind","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentThreadApplicability","CommentMode","InlayHintKind","TokenizationRegistry$1","ExternalUriOpenerPriority","InlineEditTriggerKind","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PartialAcceptTriggerKind","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","ShowLightbulbIconMode","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","_KeyMod","KeyMod","createMonacoBaseAPI","_EditorWorkerHost","workerServer","workerClient","EditorWorkerHost","getAllPropertyNames","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","methodName","leftIsWordBounday","wordSeparators","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","rightIsWordBounday","charAfter","lastCharInMatch","isValidMatch","Searcher","searchRegex","lastIndex","m","assertNever","assert","assertFn","checkAdjacentItems","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","_defaultConfig","getWordAtText","textOffset","config","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","stopPos","matchIndex","UnicodeTextModelHighlighter","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","regex","buildRegExpCharClassExpr","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineContent","lineLength","endIndex","charCodeBefore","word","highlightReason","char","primaryConfusable","notAmbiguousInLocales","codePoints","cp","isAllowedInvisibleCharacter","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII$1","LinesDiff","moves","hitTimeout","MovedText","lineRangeMapping","c","OffsetRange","sortedRanges","endExclusive","LineRange","lineRanges","LineRangeSet","endLineNumberExclusive","lineRange","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","r","i1","i2","lineRange1","lineRange2","r1","r2","_TextLength","position1","position2","columnCount","startPosition","TextLength","PositionOffsetTransformer","offsetRange","lineIdx","TextEdit","originalRange","newText","SingleTextEdit","edits","edit","lineDelta","curLine","columnDeltaInCurLine","startPos","endPos","rangeFromPositions","getStart","getEnd","positionAfterEdit","doc","lastEditEnd","editRange","editStart","editEnd","strText","StringText","newRanges","previousEditEndLineNumber","lineOffset","columnOffset","newRangeStart","newRange","second","AbstractText","LineBasedText","_getLineContent","_lineCount","lastLine","ArrayText","LineRangeMapping","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","modifiedRange","origInclusiveRange","modInclusiveRange","RangeMapping","isValidLineNumber","normalizePosition","content","DetailedLineRangeMapping","rangeMappings","innerChanges","lineRangeMappingFromRangeMappings","alignments","originalLines","modifiedLines","dontAssertStartLine","g","getLineRangeMapping","a1","a2","m1","m2","rangeMapping","lineStartDelta","lineEndDelta","originalLineRange","modifiedLineRange","MINIMUM_MATCHING_CHARACTER_LENGTH","LegacyLinesDiffComputer","DiffComputer","lastChange","computeDiff","LineSequence$1","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","shouldIgnoreTrimWhitespace","charCodes","lineNumbers","columns","CharSequence","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","opts","LineSequence","createContinueProcessingPredicate","diffResult","quitEarly","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","txt","maximumRuntime","startTime","DiffAlgorithmResult","seq1","seq2","SequenceDiff","diffs","sequenceDiffs","doc1Length","OffsetPair","seq1Range","seq2Range","_OffsetPair","offset1","offset2","_InfiniteTimeout","InfiniteTimeout","DateTimeout","timeout","Array2D","width","height","y","isSpace","_LineRangeFragment","chr","counter","sumDifferences","maxLength","LineRangeFragment","DynamicProgrammingDiffing","sequence1","sequence2","equalityScore","lcsLengths","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","newValue","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","prev","LinesSliceCharSequence","considerWhitespaceChanges","lineStartOffset","trimmedWsLength","trimmedStartLine","prevCategory","getCategory","nextCategory","getCategoryBoundaryScore","preference","pos1","pos2","isWordChar","category","computeMovedLines","hashedOriginalLines","hashedModifiedLines","excludedChanges","computeMovesFromSimpleDeletionsToSimpleInsertions","filteredChanges","unchangedMoves","computeUnchangedMoves","joinCloseConsecutiveMoves","countWhere","removeMovesInSameDiff","deletions","insertions","deletion","highestSimilarity","best","insertion","similarity","original3LineHashes","possibleMappings","lastMappings","currentModifiedRange","nextMappings","lastMapping","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","modifiedIntersectedSections","monotonousChanges","move","firstTouchingChangeOrig","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","origLine","modLine","areLinesSimilar","extendToBottom","line1","line2","commonNonSpaceCharCount","inverted","countNonWsChars","longerLineLength","originalDist","modifiedDist","changesMonotonous","diffBeforeEndOfMoveOriginal","diffBeforeEndOfMoveModified","optimizeSequenceDiffs","joinSequenceDiffsByShifting","shiftSequenceDiffs","prevResult","result2","nextResult","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","seq1Offset","removeShortMatches","extendDiffsToEntireWordIfAppropriate","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","mergeSequenceDiffs","sequenceDiffs1","sequenceDiffs2","sd1","sd2","removeVeryShortMatchingLinesBetweenDiffs","_sequence2","shouldRepeat","shouldJoinDiffs","before","after","unchangedRange","lastResult","removeVeryShortMatchingTextBetweenLongDiffs","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","max","cap","newDiffs","newDiff","shouldMarkAsChanged","fullRange1","prefix","availableSpace","trimmedHash","indentationBefore","getIndentation","indentationAfter","DefaultLinesDiffComputer","perfectHashes","getOrCreateHash","hash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","lineAlignments","scanForWhitespaceChanges","equalLinesCount","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","validatePosition","validateRange","ic","moveChanges","toLineRangeMapping","slice1","slice2","sequenceDiff","linesDiffComputers","roundFloat","number","decimalPoints","decimal","RGBA","HSLA","h","rgba","min","chroma","q","hsla","HSVA","cmax","cmin","hsva","_Color","hex","R","G","B","luminance","foreground","fgR","fgG","fgB","cr","color","another","lum1","lum2","bgL","fgL","resultA","resultARatio","resultB","resultBRatio","factor","thisA","colorA","opaqueBackground","backgrounds","background","accumulator","backgroundAlpha","of","Color","Format","CSS","formatRGB","formatRGBA","formatHSL","formatHSLA","_toTwoDigitHex","formatHex","formatHexA","compact","format","parseHex","_parseHexDigit","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","_findRange","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","computeColors","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeDefaultDocumentColors","markRegex","trimDashesRegex","findSectionHeaders","headers","regionHeaders","collectRegionHeaders","markHeaders","collectMarkHeaders","sectionHeader","getHeaderText","addMarkHeaderIfFound","sectionHeaders","hasSeparatorLine","toSlashes","osPath","toPosixPath","getRoot","firstLetter","isWindowsDriveLetter","isEqualOrParent","parentCandidate","ignoreCase","sepOffset","char0","Schemas","connectionTokenQueryName","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","getServerRootPath","host","port","connectionToken","RemoteAuthorities","basePath","VSCODE_AUTHORITY","_FileAccessImpl","url","resourcePath","uriOrModule","moduleIdToUrl","rootUriOrPath","modulePath","browserUri","FileAccessImpl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","params","addSearchParam","urlOrSearch","coop","coep","originalFSPath","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","isEqualOrParent$1","isEqualAuthority","basename","dirname$1","normalizedPath","relativePath","fromPath","toPath","newURI","sep$1","fsp","hasTrailingPathSeparator","isRootSep","extUri","DataUri","parseMetaData","dataUri","metadata","property","mime","Promises","settled","promises","firstError","withAsyncBody","bodyFn","_AsyncIterableObject","writer","onReturn","filterFn","AsyncIterableObject","PrefixSumComputer","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","maxCount","sum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","MirrorTextModel","eol","versionId","eolLength","linesLength","lineStartValues","lineIndex","insertText","insertLines","newLengths","WORKER_TEXT_MODEL_SYNC_CHANNEL","WorkerTextModelSyncServer","all","MirrorModel","offsetToAdd","iteratorOverMatches","wordAtText","wordAtPosition","wordenize","lineText","wordRangesIdx","wordRanges","words","lineEnding","startLineIndex","endLineIndex","resultLines","hasChanged","maxCharacter","_BaseEditorSimpleWorker","originalUrl","modifiedUrl","algorithm","EditorSimpleWorker","originalTextModel","modifiedTextModel","diffAlgorithm","identical","getLineChanges","ignoreTrimWhitespace","modelUrl","lastEol","aRng","bRng","writeIndex","readIndex","editOffset","newEdit","addPositions","getText","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","selectionText","wordRange","BaseEditorSimpleWorker","_host","_foreignModuleFactory","createData","foreignHostMethods","ctx","initialized","initialize","simpleWorker"],"mappings":"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SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,OAAY,EAAE,EAAI,SAClCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA,EAAQ,KAAU,EAAE,EAAI,OAChCA,EAAQA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78]}